

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon May 04 10:24:43 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31  0000                     _ADCON0	set	4034
    32  0000                     _ADCON2	set	4032
    33  0000                     _ADRESL	set	4035
    34  0000                     _ANSELA	set	3896
    35  0000                     _ANSELB	set	3897
    36  0000                     _ANSELC	set	3898
    37  0000                     _ANSELCbits	set	3898
    38  0000                     _ANSELD	set	3899
    39  0000                     _ANSELE	set	3900
    40  0000                     _CCP2CON	set	3942
    41  0000                     _CCP3CON	set	3933
    42  0000                     _CCPR2H	set	3944
    43  0000                     _CCPR2L	set	3943
    44  0000                     _CCPR3H	set	3935
    45  0000                     _CCPR3L	set	3934
    46  0000                     _CCPTMRS0bits	set	3913
    47  0000                     _ECCP2AS	set	3940
    48  0000                     _ECCP3AS	set	3931
    49  0000                     _INTCON2bits	set	4081
    50  0000                     _LATA	set	3977
    51  0000                     _LATB	set	3978
    52  0000                     _LATC	set	3979
    53  0000                     _LATCbits	set	3979
    54  0000                     _LATD	set	3980
    55  0000                     _LATE	set	3981
    56  0000                     _PIR1bits	set	3998
    57  0000                     _PIR5bits	set	3966
    58  0000                     _PORTC	set	3970
    59  0000                     _PORTCbits	set	3970
    60  0000                     _PR2	set	4027
    61  0000                     _PR4	set	3922
    62  0000                     _PSTR2CON	set	3939
    63  0000                     _PSTR3CON	set	3930
    64  0000                     _PWM2CON	set	3941
    65  0000                     _PWM3CON	set	3932
    66  0000                     _SSP2ADD	set	3950
    67  0000                     _SSP2BUF	set	3951
    68  0000                     _SSP2CON1	set	3948
    69  0000                     _SSP2CON1bits	set	3948
    70  0000                     _SSP2CON2	set	3947
    71  0000                     _SSP2CON2bits	set	3947
    72  0000                     _SSP2STAT	set	3949
    73  0000                     _T2CON	set	4026
    74  0000                     _T2CONbits	set	4026
    75  0000                     _T4CON	set	3921
    76  0000                     _T4CONbits	set	3921
    77  0000                     _TMR2	set	4028
    78  0000                     _TMR4	set	3923
    79  0000                     _TRISA	set	3986
    80  0000                     _TRISB	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISCbits	set	3988
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISDbits	set	3989
    85  0000                     _TRISE	set	3990
    86  0000                     _WPUB	set	3937
    87  0000                     _ADON	set	32272
    88  0000                     _GODONE	set	32273
    89                           
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 17 in file "../Driver.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;		None               void
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   109 ;;      Params:         0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0
   111 ;;      Temps:          1       0       0       0       0       0       0
   112 ;;      Totals:         1       0       0       0       0       0       0
   113 ;;Total ram usage:        1 bytes
   114 ;; Hardware stack levels required when called:    4
   115 ;; This function calls:
   116 ;;		_EPWM1_Initialize
   117 ;;		_EPWM1_LoadDutyValue
   118 ;;		_EPWM2_Initialize
   119 ;;		_EPWM2_LoadDutyValue
   120 ;;		_EPWM_Port_Init
   121 ;;		_LCD_init
   122 ;;		_LCD_writeChar
   123 ;;		_Switch_Direction1
   124 ;;		_Switch_Direction2
   125 ;;		_TMR2_Initialize
   126 ;;		_TMR4_Initialize
   127 ;;		_lineSensor_init
   128 ;;		_lineSensor_isWhiteLine1
   129 ;;		_place_lcd_cursor
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  007BA6                     __ptext0:
   137                           	opt stack 0
   138  007BA6                     _main:
   139                           	opt stack 27
   140                           
   141                           ;Driver.c: 21: EPWM_Port_Init();
   142                           
   143                           ; BSR set to: 15
   144                           ;incstack = 0
   145  007BA6  EC21  F03D         	call	_EPWM_Port_Init	;wreg free
   146                           
   147                           ;Driver.c: 24: EPWM1_Initialize();
   148  007BAA  ECA0  F03C         	call	_EPWM1_Initialize	;wreg free
   149                           
   150                           ;Driver.c: 25: TMR2_Initialize();
   151  007BAE  EC26  F03C         	call	_TMR2_Initialize	;wreg free
   152                           
   153                           ;Driver.c: 26: EPWM1_LoadDutyValue(60);
   154  007BB2  0E00               	movlw	0
   155  007BB4  6E2C               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   156  007BB6  0E3C               	movlw	60
   157  007BB8  6E2B               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   158  007BBA  EC90  F03D         	call	_EPWM1_LoadDutyValue	;wreg free
   159                           
   160                           ;Driver.c: 27: Switch_Direction1();
   161  007BBE  EC38  F03C         	call	_Switch_Direction1	;wreg free
   162                           
   163                           ;Driver.c: 28: EPWM1_LoadDutyValue(60);
   164  007BC2  0E00               	movlw	0
   165  007BC4  6E2C               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   166  007BC6  0E3C               	movlw	60
   167  007BC8  6E2B               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   168  007BCA  EC90  F03D         	call	_EPWM1_LoadDutyValue	;wreg free
   169                           
   170                           ;Driver.c: 31: EPWM2_Initialize();
   171  007BCE  EC5F  F03C         	call	_EPWM2_Initialize	;wreg free
   172                           
   173                           ;Driver.c: 32: TMR4_Initialize();
   174  007BD2  EC44  F03C         	call	_TMR4_Initialize	;wreg free
   175                           
   176                           ;Driver.c: 33: EPWM2_LoadDutyValue(60);
   177  007BD6  0E00               	movlw	0
   178  007BD8  6E2C               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   179  007BDA  0E3C               	movlw	60
   180  007BDC  6E2B               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   181  007BDE  EC50  F03D         	call	_EPWM2_LoadDutyValue	;wreg free
   182                           
   183                           ;Driver.c: 34: Switch_Direction2();
   184  007BE2  EC2E  F03C         	call	_Switch_Direction2	;wreg free
   185                           
   186                           ;Driver.c: 35: EPWM2_LoadDutyValue(60);
   187  007BE6  0E00               	movlw	0
   188  007BE8  6E2C               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   189  007BEA  0E3C               	movlw	60
   190  007BEC  6E2B               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   191  007BEE  EC50  F03D         	call	_EPWM2_LoadDutyValue	;wreg free
   192                           
   193                           ;Driver.c: 38: LCD_init();
   194  007BF2  EC66  F03F         	call	_LCD_init	;wreg free
   195                           
   196                           ;Driver.c: 39: place_lcd_cursor(0,0);
   197  007BF6  0E00               	movlw	0
   198  007BF8  6E01               	movwf	place_lcd_cursor@y,c
   199  007BFA  0E00               	movlw	0
   200  007BFC  ECFA  F03C         	call	_place_lcd_cursor
   201                           
   202                           ;Driver.c: 40: LCD_writeChar('h');
   203  007C00  0E68               	movlw	104
   204  007C02  ECB9  F03C         	call	_LCD_writeChar
   205                           
   206                           ;Driver.c: 56: lineSensor_init();
   207  007C06  EC1E  F03C         	call	_lineSensor_init	;wreg free
   208  007C0A                     l1310:
   209                           
   210                           ;Driver.c: 59: {
   211                           ;Driver.c: 61: place_lcd_cursor(0,1);
   212  007C0A  0E01               	movlw	1
   213  007C0C  6E01               	movwf	place_lcd_cursor@y,c
   214  007C0E  0E00               	movlw	0
   215  007C10  ECFA  F03C         	call	_place_lcd_cursor
   216                           
   217                           ;Driver.c: 63: if(lineSensor_isWhiteLine1())
   218  007C14  EC8A  F03C         	call	_lineSensor_isWhiteLine1	;wreg free
   219  007C18  0900               	iorlw	0
   220  007C1A  B4D8               	btfsc	status,2,c
   221  007C1C  D004               	goto	l1316
   222                           
   223                           ;Driver.c: 64: {
   224                           ;Driver.c: 65: LCD_writeChar('T');
   225  007C1E  0E54               	movlw	84
   226  007C20  ECB9  F03C         	call	_LCD_writeChar
   227                           
   228                           ;Driver.c: 66: }
   229  007C24  D003               	goto	l1318
   230  007C26                     l1316:
   231                           
   232                           ;Driver.c: 67: else
   233                           ;Driver.c: 68: {
   234                           ;Driver.c: 69: LCD_writeChar('F');
   235  007C26  0E46               	movlw	70
   236  007C28  ECB9  F03C         	call	_LCD_writeChar
   237  007C2C                     l1318:
   238                           
   239                           ;Driver.c: 70: }
   240                           ;Driver.c: 72: _delay((unsigned long)((50)*(10000000/4000.0)));
   241  007C2C  0EA3               	movlw	163
   242  007C2E  6E31               	movwf	??_main& (0+255),c
   243  007C30  0E55               	movlw	85
   244  007C32                     u367:
   245  007C32  2EE8               	decfsz	wreg,f,c
   246  007C34  D7FE               	goto	u367
   247  007C36  2E31               	decfsz	??_main& (0+255),f,c
   248  007C38  D7FC               	goto	u367
   249  007C3A  F000               	nop	
   250  007C3C  D7E6               	goto	l1310
   251  007C3E                     __end_of_main:
   252                           	opt stack 0
   253                           wreg	equ	0xFE8
   254                           status	equ	0xFD8
   255                           
   256                           	psect	cinit
   257  007842                     __pcinit:
   258                           	opt stack 0
   259  007842                     start_initialization:
   260                           	opt stack 0
   261  007842                     __initialization:
   262                           	opt stack 0
   263                           
   264                           ; Clear objects allocated to COMRAM (2 bytes)
   265  007842  6A33               	clrf	(__pbssCOMRAM+1)& (0+255),c
   266  007844  6A32               	clrf	__pbssCOMRAM& (0+255),c
   267  007846                     end_of_initialization:
   268                           	opt stack 0
   269  007846                     __end_of__initialization:
   270                           	opt stack 0
   271  007846  0100               	movlb	0
   272  007848  EFD3  F03D         	goto	_main	;jump to C main() function
   273                           wreg	equ	0xFE8
   274                           status	equ	0xFD8
   275                           
   276                           	psect	bssCOMRAM
   277  000032                     __pbssCOMRAM:
   278                           	opt stack 0
   279  000032                     _yPos:
   280                           	opt stack 0
   281  000032                     	ds	2
   282                           wreg	equ	0xFE8
   283                           status	equ	0xFD8
   284                           
   285                           	psect	cstackCOMRAM
   286  000001                     __pcstackCOMRAM:
   287                           	opt stack 0
   288  000001                     ??_LCD_writeChar:
   289  000001                     ??_Delay100ms:
   290  000001                     ?_lineSensor_read:
   291                           	opt stack 0
   292  000001                     ?___ftpack:
   293                           	opt stack 0
   294  000001                     place_lcd_cursor@y:
   295                           	opt stack 0
   296  000001                     lineSensor_read@Channel:
   297                           	opt stack 0
   298  000001                     ___ftpack@arg:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x0
   302  000001                     	ds	1
   303  000002                     ??_place_lcd_cursor:
   304  000002                     LCD_writeChar@upper:
   305                           	opt stack 0
   306  000002                     Delay100ms@i:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x1
   310  000002                     	ds	1
   311  000003                     LCD_writeChar@lower:
   312                           	opt stack 0
   313  000003                     place_lcd_cursor@x:
   314                           	opt stack 0
   315  000003                     lineSensor_isWhiteLine1@isWhiteLine:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x2
   319  000003                     	ds	1
   320  000004                     LCD_writeChar@data:
   321                           	opt stack 0
   322  000004                     place_lcd_cursor@position:
   323                           	opt stack 0
   324  000004                     ___ftpack@exp:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x3
   328  000004                     	ds	1
   329  000005                     ??_LCD_init:
   330  000005                     ___ftpack@sign:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x4
   334  000005                     	ds	1
   335  000006                     ??___ftpack:
   336                           
   337                           ; 0 bytes @ 0x5
   338  000006                     	ds	3
   339  000009                     ?___awtoft:
   340                           	opt stack 0
   341  000009                     ___awtoft@c:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x8
   345  000009                     	ds	3
   346  00000C                     ___awtoft@sign:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0xB
   350  00000C                     	ds	1
   351  00000D                     ?___ftmul:
   352                           	opt stack 0
   353  00000D                     ___ftmul@f1:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0xC
   357  00000D                     	ds	3
   358  000010                     ___ftmul@f2:
   359                           	opt stack 0
   360                           
   361                           ; 3 bytes @ 0xF
   362  000010                     	ds	3
   363  000013                     ??___ftmul:
   364                           
   365                           ; 0 bytes @ 0x12
   366  000013                     	ds	3
   367  000016                     ___ftmul@f3_as_product:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x15
   371  000016                     	ds	3
   372  000019                     ___ftmul@exp:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x18
   376  000019                     	ds	1
   377  00001A                     ___ftmul@cntr:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x19
   381  00001A                     	ds	1
   382  00001B                     ___ftmul@sign:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x1A
   386  00001B                     	ds	1
   387  00001C                     ?___fttol:
   388                           	opt stack 0
   389  00001C                     ___fttol@f1:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0x1B
   393  00001C                     	ds	4
   394  000020                     ??___fttol:
   395                           
   396                           ; 0 bytes @ 0x1F
   397  000020                     	ds	5
   398  000025                     ___fttol@sign1:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x24
   402  000025                     	ds	1
   403  000026                     ___fttol@lval:
   404                           	opt stack 0
   405                           
   406                           ; 4 bytes @ 0x25
   407  000026                     	ds	4
   408  00002A                     ___fttol@exp1:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x29
   412  00002A                     	ds	1
   413  00002B                     EPWM1_LoadDutyValue@dutyValue:
   414                           	opt stack 0
   415  00002B                     EPWM2_LoadDutyValue@dutyValue:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x2A
   419  00002B                     	ds	2
   420  00002D                     ??_EPWM1_LoadDutyValue:
   421  00002D                     ??_EPWM2_LoadDutyValue:
   422                           
   423                           ; 0 bytes @ 0x2C
   424  00002D                     	ds	4
   425  000031                     ??_main:
   426                           
   427                           ; 0 bytes @ 0x30
   428  000031                     	ds	1
   429                           wreg	equ	0xFE8
   430                           status	equ	0xFD8
   431                           
   432 ;; *************** function _lineSensor_isWhiteLine1 *****************
   433 ;; Defined at:
   434 ;;		line 27 in file "../LineSensor.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  isWhiteLine     1    2[COMRAM] unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      unsigned char 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, prodl, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   448 ;;      Params:         0       0       0       0       0       0       0
   449 ;;      Locals:         1       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0
   451 ;;      Totals:         1       0       0       0       0       0       0
   452 ;;Total ram usage:        1 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    1
   455 ;; This function calls:
   456 ;;		_lineSensor_read
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463  007914                     __ptext1:
   464                           	opt stack 0
   465  007914                     _lineSensor_isWhiteLine1:
   466                           	opt stack 29
   467                           
   468                           ;LineSensor.c: 29: bool isWhiteLine = FALSE;
   469                           
   470                           ;incstack = 0
   471  007914  0E00               	movlw	0
   472  007916  6E03               	movwf	lineSensor_isWhiteLine1@isWhiteLine,c
   473                           
   474                           ;LineSensor.c: 31: if (lineSensor_read(0) < 65) {isWhiteLine = TRUE;}
   475  007918  0E00               	movlw	0
   476  00791A  6E02               	movwf	lineSensor_read@Channel+1,c
   477  00791C  0E00               	movlw	0
   478  00791E  6E01               	movwf	lineSensor_read@Channel,c
   479  007920  EC50  F03C         	call	_lineSensor_read	;wreg free
   480  007924  5002               	movf	?_lineSensor_read+1,w,c
   481  007926  0A80               	xorlw	128
   482  007928  6EF3               	movwf	prodl,c
   483  00792A  0E80               	movlw	128
   484  00792C  5CF3               	subwf	prodl,w,c
   485  00792E  0E41               	movlw	65
   486  007930  B4D8               	btfsc	status,2,c
   487  007932  5C01               	subwf	?_lineSensor_read,w,c
   488  007934  B0D8               	btfsc	status,0,c
   489  007936  D002               	goto	l303
   490  007938  0E01               	movlw	1
   491  00793A  6E03               	movwf	lineSensor_isWhiteLine1@isWhiteLine,c
   492  00793C                     l303:
   493                           
   494                           ;LineSensor.c: 33: return isWhiteLine;
   495  00793C  5003               	movf	lineSensor_isWhiteLine1@isWhiteLine,w,c
   496  00793E  0012               	return	
   497  007940                     __end_of_lineSensor_isWhiteLine1:
   498                           	opt stack 0
   499                           prodl	equ	0xFF3
   500                           wreg	equ	0xFE8
   501                           status	equ	0xFD8
   502                           
   503 ;; *************** function _lineSensor_read *****************
   504 ;; Defined at:
   505 ;;		line 11 in file "../LineSensor.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  Channel         2    0[COMRAM] unsigned int 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  2    0[COMRAM] int 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   519 ;;      Params:         2       0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0
   522 ;;      Totals:         2       0       0       0       0       0       0
   523 ;;Total ram usage:        2 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_lineSensor_isWhiteLine1
   529 ;;		_lineSensor_isWhiteLine2
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  0078A0                     __ptext2:
   535                           	opt stack 0
   536  0078A0                     _lineSensor_read:
   537                           	opt stack 29
   538                           
   539                           ;LineSensor.c: 13: ADCON0=0x00;
   540                           
   541                           ;incstack = 0
   542  0078A0  0E00               	movlw	0
   543  0078A2  6EC2               	movwf	4034,c	;volatile
   544                           
   545                           ;LineSensor.c: 14: ADCON0=(Channel<<2);
   546  0078A4  4401               	rlncf	lineSensor_read@Channel,w,c
   547  0078A6  46E8               	rlncf	wreg,f,c
   548  0078A8  0BFC               	andlw	252
   549  0078AA  6EC2               	movwf	4034,c	;volatile
   550                           
   551                           ;LineSensor.c: 16: ADON=1;
   552  0078AC  80C2               	bsf	4034,0,c	;volatile
   553                           
   554                           ;LineSensor.c: 18: GODONE=1;
   555  0078AE  82C2               	bsf	4034,1,c	;volatile
   556  0078B0                     l297:
   557  0078B0  B2C2               	btfsc	4034,1,c	;volatile
   558  0078B2  D7FE               	goto	l297
   559                           
   560                           ;LineSensor.c: 22: ADON=0;
   561  0078B4  90C2               	bcf	4034,0,c	;volatile
   562                           
   563                           ;LineSensor.c: 24: return ADRESL;
   564  0078B6  CFC3 F001          	movff	4035,?_lineSensor_read	;volatile
   565  0078BA  6A02               	clrf	?_lineSensor_read+1,c
   566  0078BC  0012               	return	
   567  0078BE                     __end_of_lineSensor_read:
   568                           	opt stack 0
   569                           prodl	equ	0xFF3
   570                           wreg	equ	0xFE8
   571                           status	equ	0xFD8
   572                           
   573 ;; *************** function _lineSensor_init *****************
   574 ;; Defined at:
   575 ;;		line 5 in file "../LineSensor.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;		None               void
   582 ;; Registers used:
   583 ;;		wreg, status,2
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   589 ;;      Params:         0       0       0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text3
   603  00783C                     __ptext3:
   604                           	opt stack 0
   605  00783C                     _lineSensor_init:
   606                           	opt stack 30
   607                           
   608                           ;LineSensor.c: 7: ADCON2=0b10001010;
   609                           
   610                           ;incstack = 0
   611  00783C  0E8A               	movlw	138
   612  00783E  6EC0               	movwf	4032,c	;volatile
   613  007840  0012               	return	
   614  007842                     __end_of_lineSensor_init:
   615                           	opt stack 0
   616                           prodl	equ	0xFF3
   617                           wreg	equ	0xFE8
   618                           status	equ	0xFD8
   619                           
   620 ;; *************** function _TMR4_Initialize *****************
   621 ;; Defined at:
   622 ;;		line 144 in file "../DCMotor.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, status,2
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   636 ;;      Params:         0       0       0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text4
   650  007888                     __ptext4:
   651                           	opt stack 0
   652  007888                     _TMR4_Initialize:
   653                           	opt stack 30
   654                           
   655                           ;DCMotor.c: 149: T4CON = 0x00;
   656                           
   657                           ;incstack = 0
   658  007888  0E00               	movlw	0
   659  00788A  010F               	movlb	15	; () banked
   660  00788C  6F51               	movwf	81,b	;volatile
   661                           
   662                           ;DCMotor.c: 152: PR4 = 0xA0;
   663  00788E  0EA0               	movlw	160
   664  007890  010F               	movlb	15	; () banked
   665  007892  6F52               	movwf	82,b	;volatile
   666                           
   667                           ; BSR set to: 15
   668                           ;DCMotor.c: 155: TMR4 = 0xFF;
   669  007894  010F               	movlb	15	; () banked
   670  007896  6953               	setf	83,b	;volatile
   671                           
   672                           ; BSR set to: 15
   673                           ;DCMotor.c: 158: PIR5bits.TMR4IF = 0;
   674  007898  907E               	bcf	3966,0,c	;volatile
   675                           
   676                           ; BSR set to: 15
   677                           ;DCMotor.c: 161: T4CONbits.TMR4ON = 1;
   678  00789A  010F               	movlb	15	; () banked
   679  00789C  8551               	bsf	81,2,b	;volatile
   680                           
   681                           ; BSR set to: 15
   682  00789E  0012               	return	
   683  0078A0                     __end_of_TMR4_Initialize:
   684                           	opt stack 0
   685                           prodl	equ	0xFF3
   686                           wreg	equ	0xFE8
   687                           status	equ	0xFD8
   688                           
   689 ;; *************** function _TMR2_Initialize *****************
   690 ;; Defined at:
   691 ;;		line 74 in file "../DCMotor.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;		None               void
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   705 ;;      Params:         0       0       0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text5
   719  00784C                     __ptext5:
   720                           	opt stack 0
   721  00784C                     _TMR2_Initialize:
   722                           	opt stack 30
   723                           
   724                           ;DCMotor.c: 79: T2CON = 0x00;
   725                           
   726                           ; BSR set to: 15
   727                           ;incstack = 0
   728  00784C  0E00               	movlw	0
   729  00784E  6EBA               	movwf	4026,c	;volatile
   730                           
   731                           ;DCMotor.c: 82: PR2 = 0xA0;
   732  007850  0EA0               	movlw	160
   733  007852  6EBB               	movwf	4027,c	;volatile
   734                           
   735                           ;DCMotor.c: 85: TMR2 = 0xFF;
   736  007854  68BC               	setf	4028,c	;volatile
   737                           
   738                           ;DCMotor.c: 88: PIR1bits.TMR2IF = 0;
   739  007856  929E               	bcf	3998,1,c	;volatile
   740                           
   741                           ;DCMotor.c: 91: T2CONbits.TMR2ON = 1;
   742  007858  84BA               	bsf	4026,2,c	;volatile
   743  00785A  0012               	return	
   744  00785C                     __end_of_TMR2_Initialize:
   745                           	opt stack 0
   746                           prodl	equ	0xFF3
   747                           wreg	equ	0xFE8
   748                           status	equ	0xFD8
   749                           
   750 ;; *************** function _Switch_Direction2 *****************
   751 ;; Defined at:
   752 ;;		line 164 in file "../DCMotor.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;		None               void
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0, prodl, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   766 ;;      Params:         0       0       0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    3
   773 ;; This function calls:
   774 ;;		_EPWM2_LoadDutyValue
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text6
   781  00785C                     __ptext6:
   782                           	opt stack 0
   783  00785C                     _Switch_Direction2:
   784                           	opt stack 27
   785                           
   786                           ;DCMotor.c: 167: EPWM2_LoadDutyValue(40);
   787                           
   788                           ;incstack = 0
   789  00785C  0E00               	movlw	0
   790  00785E  6E2C               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
   791  007860  0E28               	movlw	40
   792  007862  6E2B               	movwf	EPWM2_LoadDutyValue@dutyValue,c
   793  007864  EC50  F03D         	call	_EPWM2_LoadDutyValue	;wreg free
   794                           
   795                           ;DCMotor.c: 171: CCP2CON = CCP2CON ^ 0b10000000;
   796  007868  5066               	movf	3942,w,c	;volatile
   797  00786A  0A80               	xorlw	128
   798  00786C  6E66               	movwf	3942,c	;volatile
   799  00786E  0012               	return	
   800  007870                     __end_of_Switch_Direction2:
   801                           	opt stack 0
   802                           prodl	equ	0xFF3
   803                           wreg	equ	0xFE8
   804                           status	equ	0xFD8
   805                           
   806 ;; *************** function _EPWM2_LoadDutyValue *****************
   807 ;; Defined at:
   808 ;;		line 133 in file "../DCMotor.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  dutyValue       2   42[COMRAM] int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;		None               void
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, prodl, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   822 ;;      Params:         2       0       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0
   824 ;;      Temps:          4       0       0       0       0       0       0
   825 ;;      Totals:         6       0       0       0       0       0       0
   826 ;;Total ram usage:        6 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    2
   829 ;; This function calls:
   830 ;;		___awtoft
   831 ;;		___ftmul
   832 ;;		___fttol
   833 ;; This function is called by:
   834 ;;		_Switch_Direction2
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text7
   840  007AA0                     __ptext7:
   841                           	opt stack 0
   842  007AA0                     _EPWM2_LoadDutyValue:
   843                           	opt stack 27
   844                           
   845                           ;DCMotor.c: 135: dutyValue = dutyValue * 6.4;
   846                           
   847                           ;incstack = 0
   848  007AA0  0ECD               	movlw	205
   849  007AA2  6E10               	movwf	___ftmul@f2,c
   850  007AA4  0ECC               	movlw	204
   851  007AA6  6E11               	movwf	___ftmul@f2+1,c
   852  007AA8  0E40               	movlw	64
   853  007AAA  6E12               	movwf	___ftmul@f2+2,c
   854  007AAC  C02B  F009         	movff	EPWM2_LoadDutyValue@dutyValue,___awtoft@c
   855  007AB0  C02C  F00A         	movff	EPWM2_LoadDutyValue@dutyValue+1,___awtoft@c+1
   856  007AB4  ECD6  F03C         	call	___awtoft	;wreg free
   857  007AB8  C009  F00D         	movff	?___awtoft,___ftmul@f1
   858  007ABC  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   859  007AC0  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   860  007AC4  EC73  F03E         	call	___ftmul	;wreg free
   861  007AC8  C00D  F01C         	movff	?___ftmul,___fttol@f1
   862  007ACC  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
   863  007AD0  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
   864  007AD4  ECEB  F03E         	call	___fttol	;wreg free
   865  007AD8  C01C  F02D         	movff	?___fttol,??_EPWM2_LoadDutyValue
   866  007ADC  C01D  F02E         	movff	?___fttol+1,??_EPWM2_LoadDutyValue+1
   867  007AE0  C01E  F02F         	movff	?___fttol+2,??_EPWM2_LoadDutyValue+2
   868  007AE4  C01F  F030         	movff	?___fttol+3,??_EPWM2_LoadDutyValue+3
   869  007AE8  C02D  F02B         	movff	??_EPWM2_LoadDutyValue,EPWM2_LoadDutyValue@dutyValue
   870  007AEC  C02E  F02C         	movff	??_EPWM2_LoadDutyValue+1,EPWM2_LoadDutyValue@dutyValue+1
   871                           
   872                           ;DCMotor.c: 138: CCPR2L = ((dutyValue & 0x03FC)>>2);
   873  007AF0  C02B  F02D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
   874  007AF4  C02C  F02E         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
   875  007AF8  342E               	rlcf	??_EPWM2_LoadDutyValue+1,w,c
   876  007AFA  322E               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
   877  007AFC  322D               	rrcf	??_EPWM2_LoadDutyValue,f,c
   878  007AFE  342E               	rlcf	??_EPWM2_LoadDutyValue+1,w,c
   879  007B00  322E               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
   880  007B02  322D               	rrcf	??_EPWM2_LoadDutyValue,f,c
   881  007B04  502D               	movf	??_EPWM2_LoadDutyValue,w,c
   882  007B06  6E67               	movwf	3943,c	;volatile
   883                           
   884                           ;DCMotor.c: 141: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
   885  007B08  C02B  F02D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
   886  007B0C  0E03               	movlw	3
   887  007B0E  162D               	andwf	??_EPWM2_LoadDutyValue,f,c
   888  007B10  3A2D               	swapf	??_EPWM2_LoadDutyValue,f,c
   889  007B12  0EF0               	movlw	240
   890  007B14  162D               	andwf	??_EPWM2_LoadDutyValue,f,c
   891  007B16  5066               	movf	3942,w,c	;volatile
   892  007B18  0BCF               	andlw	207
   893  007B1A  102D               	iorwf	??_EPWM2_LoadDutyValue,w,c
   894  007B1C  6E66               	movwf	3942,c	;volatile
   895  007B1E  0012               	return	
   896  007B20                     __end_of_EPWM2_LoadDutyValue:
   897                           	opt stack 0
   898                           prodl	equ	0xFF3
   899                           wreg	equ	0xFE8
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _Switch_Direction1 *****************
   903 ;; Defined at:
   904 ;;		line 94 in file "../DCMotor.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, prodl, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   918 ;;      Params:         0       0       0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0
   921 ;;      Totals:         0       0       0       0       0       0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    3
   925 ;; This function calls:
   926 ;;		_EPWM1_LoadDutyValue
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text8
   933  007870                     __ptext8:
   934                           	opt stack 0
   935  007870                     _Switch_Direction1:
   936                           	opt stack 27
   937                           
   938                           ;DCMotor.c: 97: EPWM1_LoadDutyValue(40);
   939                           
   940                           ;incstack = 0
   941  007870  0E00               	movlw	0
   942  007872  6E2C               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
   943  007874  0E28               	movlw	40
   944  007876  6E2B               	movwf	EPWM1_LoadDutyValue@dutyValue,c
   945  007878  EC90  F03D         	call	_EPWM1_LoadDutyValue	;wreg free
   946                           
   947                           ;DCMotor.c: 101: CCP3CON = CCP3CON ^ 0b10000000;
   948  00787C  010F               	movlb	15	; () banked
   949  00787E  515D               	movf	93,w,b	;volatile
   950  007880  0A80               	xorlw	128
   951  007882  010F               	movlb	15	; () banked
   952  007884  6F5D               	movwf	93,b	;volatile
   953                           
   954                           ; BSR set to: 15
   955  007886  0012               	return	
   956  007888                     __end_of_Switch_Direction1:
   957                           	opt stack 0
   958                           prodl	equ	0xFF3
   959                           wreg	equ	0xFE8
   960                           status	equ	0xFD8
   961                           
   962 ;; *************** function _EPWM1_LoadDutyValue *****************
   963 ;; Defined at:
   964 ;;		line 63 in file "../DCMotor.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  dutyValue       2   42[COMRAM] int 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;		None               void
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, prodl, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   978 ;;      Params:         2       0       0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0
   980 ;;      Temps:          4       0       0       0       0       0       0
   981 ;;      Totals:         6       0       0       0       0       0       0
   982 ;;Total ram usage:        6 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    2
   985 ;; This function calls:
   986 ;;		___awtoft
   987 ;;		___ftmul
   988 ;;		___fttol
   989 ;; This function is called by:
   990 ;;		_Switch_Direction1
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text9
   996  007B20                     __ptext9:
   997                           	opt stack 0
   998  007B20                     _EPWM1_LoadDutyValue:
   999                           	opt stack 27
  1000                           
  1001                           ;DCMotor.c: 65: dutyValue = dutyValue * 6.4;
  1002                           
  1003                           ; BSR set to: 15
  1004                           ;incstack = 0
  1005  007B20  0ECD               	movlw	205
  1006  007B22  6E10               	movwf	___ftmul@f2,c
  1007  007B24  0ECC               	movlw	204
  1008  007B26  6E11               	movwf	___ftmul@f2+1,c
  1009  007B28  0E40               	movlw	64
  1010  007B2A  6E12               	movwf	___ftmul@f2+2,c
  1011  007B2C  C02B  F009         	movff	EPWM1_LoadDutyValue@dutyValue,___awtoft@c
  1012  007B30  C02C  F00A         	movff	EPWM1_LoadDutyValue@dutyValue+1,___awtoft@c+1
  1013  007B34  ECD6  F03C         	call	___awtoft	;wreg free
  1014  007B38  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1015  007B3C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1016  007B40  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1017  007B44  EC73  F03E         	call	___ftmul	;wreg free
  1018  007B48  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1019  007B4C  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1020  007B50  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1021  007B54  ECEB  F03E         	call	___fttol	;wreg free
  1022  007B58  C01C  F02D         	movff	?___fttol,??_EPWM1_LoadDutyValue
  1023  007B5C  C01D  F02E         	movff	?___fttol+1,??_EPWM1_LoadDutyValue+1
  1024  007B60  C01E  F02F         	movff	?___fttol+2,??_EPWM1_LoadDutyValue+2
  1025  007B64  C01F  F030         	movff	?___fttol+3,??_EPWM1_LoadDutyValue+3
  1026  007B68  C02D  F02B         	movff	??_EPWM1_LoadDutyValue,EPWM1_LoadDutyValue@dutyValue
  1027  007B6C  C02E  F02C         	movff	??_EPWM1_LoadDutyValue+1,EPWM1_LoadDutyValue@dutyValue+1
  1028                           
  1029                           ;DCMotor.c: 68: CCPR3L = ((dutyValue & 0x03FC)>>2);
  1030  007B70  C02B  F02D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1031  007B74  C02C  F02E         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  1032  007B78  342E               	rlcf	??_EPWM1_LoadDutyValue+1,w,c
  1033  007B7A  322E               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1034  007B7C  322D               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1035  007B7E  342E               	rlcf	??_EPWM1_LoadDutyValue+1,w,c
  1036  007B80  322E               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  1037  007B82  322D               	rrcf	??_EPWM1_LoadDutyValue,f,c
  1038  007B84  502D               	movf	??_EPWM1_LoadDutyValue,w,c
  1039  007B86  010F               	movlb	15	; () banked
  1040  007B88  6F5E               	movwf	94,b	;volatile
  1041                           
  1042                           ; BSR set to: 15
  1043                           ;DCMotor.c: 71: CCP3CON = (CCP3CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  1044  007B8A  C02B  F02D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  1045  007B8E  0E03               	movlw	3
  1046  007B90  162D               	andwf	??_EPWM1_LoadDutyValue,f,c
  1047  007B92  3A2D               	swapf	??_EPWM1_LoadDutyValue,f,c
  1048  007B94  0EF0               	movlw	240
  1049  007B96  162D               	andwf	??_EPWM1_LoadDutyValue,f,c
  1050  007B98  010F               	movlb	15	; () banked
  1051  007B9A  515D               	movf	93,w,b	;volatile
  1052  007B9C  0BCF               	andlw	207
  1053  007B9E  102D               	iorwf	??_EPWM1_LoadDutyValue,w,c
  1054  007BA0  010F               	movlb	15	; () banked
  1055  007BA2  6F5D               	movwf	93,b	;volatile
  1056                           
  1057                           ; BSR set to: 15
  1058  007BA4  0012               	return	
  1059  007BA6                     __end_of_EPWM1_LoadDutyValue:
  1060                           	opt stack 0
  1061                           prodl	equ	0xFF3
  1062                           wreg	equ	0xFE8
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function ___fttol *****************
  1066 ;; Defined at:
  1067 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  f1              3   27[COMRAM] float 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  lval            4   37[COMRAM] unsigned long 
  1072 ;;  exp1            1   41[COMRAM] unsigned char 
  1073 ;;  sign1           1   36[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  4   27[COMRAM] long 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1083 ;;      Params:         4       0       0       0       0       0       0
  1084 ;;      Locals:         6       0       0       0       0       0       0
  1085 ;;      Temps:          5       0       0       0       0       0       0
  1086 ;;      Totals:        15       0       0       0       0       0       0
  1087 ;;Total ram usage:       15 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_EPWM1_LoadDutyValue
  1093 ;;		_EPWM2_LoadDutyValue
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text10
  1098  007DD6                     __ptext10:
  1099                           	opt stack 0
  1100  007DD6                     ___fttol:
  1101                           	opt stack 28
  1102                           
  1103                           ; BSR set to: 15
  1104                           ;incstack = 0
  1105  007DD6  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1106  007DDA  6A21               	clrf	(??___fttol+1)& (0+255),c
  1107  007DDC  6A22               	clrf	(??___fttol+2)& (0+255),c
  1108  007DDE  341D               	rlcf	___fttol@f1+1,w,c
  1109  007DE0  3620               	rlcf	??___fttol& (0+255),f,c
  1110  007DE2  E301               	bnc	u151
  1111  007DE4  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1112  007DE6                     u151:
  1113  007DE6  5020               	movf	??___fttol,w,c
  1114  007DE8  6E2A               	movwf	___fttol@exp1,c
  1115  007DEA  662A               	tstfsz	___fttol@exp1& (0+255),c
  1116  007DEC  D009               	goto	l992
  1117  007DEE  0E00               	movlw	0
  1118  007DF0  6E1C               	movwf	?___fttol,c
  1119  007DF2  0E00               	movlw	0
  1120  007DF4  6E1D               	movwf	?___fttol+1,c
  1121  007DF6  0E00               	movlw	0
  1122  007DF8  6E1E               	movwf	?___fttol+2,c
  1123  007DFA  0E00               	movlw	0
  1124  007DFC  6E1F               	movwf	?___fttol+3,c
  1125  007DFE  0012               	return	
  1126  007E00                     l992:
  1127  007E00  0E17               	movlw	23
  1128  007E02  6E20               	movwf	??___fttol& (0+255),c
  1129  007E04  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1130  007E08  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1131  007E0C  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1132  007E10  2820               	incf	??___fttol,w,c
  1133  007E12  6E24               	movwf	(??___fttol+4)& (0+255),c
  1134  007E14  D004               	goto	u170
  1135  007E16                     u175:
  1136  007E16  90D8               	bcf	status,0,c
  1137  007E18  3223               	rrcf	??___fttol+3,f,c
  1138  007E1A  3222               	rrcf	??___fttol+2,f,c
  1139  007E1C  3221               	rrcf	??___fttol+1,f,c
  1140  007E1E                     u170:
  1141  007E1E  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1142  007E20  D7FA               	goto	u175
  1143  007E22  5021               	movf	??___fttol+1,w,c
  1144  007E24  6E25               	movwf	___fttol@sign1,c
  1145  007E26  8E1D               	bsf	___fttol@f1+1,7,c
  1146  007E28  0EFF               	movlw	255
  1147  007E2A  161C               	andwf	___fttol@f1,f,c
  1148  007E2C  0EFF               	movlw	255
  1149  007E2E  161D               	andwf	___fttol@f1+1,f,c
  1150  007E30  0E00               	movlw	0
  1151  007E32  161E               	andwf	___fttol@f1+2,f,c
  1152  007E34  501C               	movf	___fttol@f1,w,c
  1153  007E36  6E26               	movwf	___fttol@lval,c
  1154  007E38  501D               	movf	___fttol@f1+1,w,c
  1155  007E3A  6E27               	movwf	___fttol@lval+1,c
  1156  007E3C  501E               	movf	___fttol@f1+2,w,c
  1157  007E3E  6E28               	movwf	___fttol@lval+2,c
  1158  007E40  6A29               	clrf	___fttol@lval+3,c
  1159  007E42  0E8E               	movlw	142
  1160  007E44  5E2A               	subwf	___fttol@exp1,f,c
  1161  007E46  AE2A               	btfss	___fttol@exp1,7,c
  1162  007E48  D019               	goto	l1014
  1163  007E4A  502A               	movf	___fttol@exp1,w,c
  1164  007E4C  0A80               	xorlw	128
  1165  007E4E  6E20               	movwf	??___fttol& (0+255),c
  1166  007E50  0EF1               	movlw	241
  1167  007E52  0A80               	xorlw	128
  1168  007E54  5C20               	subwf	??___fttol,w,c
  1169  007E56  B0D8               	btfsc	status,0,c
  1170  007E58  D009               	goto	l1010
  1171  007E5A  0E00               	movlw	0
  1172  007E5C  6E1C               	movwf	?___fttol,c
  1173  007E5E  0E00               	movlw	0
  1174  007E60  6E1D               	movwf	?___fttol+1,c
  1175  007E62  0E00               	movlw	0
  1176  007E64  6E1E               	movwf	?___fttol+2,c
  1177  007E66  0E00               	movlw	0
  1178  007E68  6E1F               	movwf	?___fttol+3,c
  1179  007E6A  0012               	return	
  1180  007E6C                     l1010:
  1181  007E6C  90D8               	bcf	status,0,c
  1182  007E6E  3229               	rrcf	___fttol@lval+3,f,c
  1183  007E70  3228               	rrcf	___fttol@lval+2,f,c
  1184  007E72  3227               	rrcf	___fttol@lval+1,f,c
  1185  007E74  3226               	rrcf	___fttol@lval,f,c
  1186  007E76  3E2A               	incfsz	___fttol@exp1,f,c
  1187  007E78  D7F9               	goto	l1010
  1188  007E7A  D014               	goto	l1024
  1189  007E7C                     l1014:
  1190  007E7C  0E17               	movlw	23
  1191  007E7E  642A               	cpfsgt	___fttol@exp1,c
  1192  007E80  D00F               	goto	l1022
  1193  007E82  0E00               	movlw	0
  1194  007E84  6E1C               	movwf	?___fttol,c
  1195  007E86  0E00               	movlw	0
  1196  007E88  6E1D               	movwf	?___fttol+1,c
  1197  007E8A  0E00               	movlw	0
  1198  007E8C  6E1E               	movwf	?___fttol+2,c
  1199  007E8E  0E00               	movlw	0
  1200  007E90  6E1F               	movwf	?___fttol+3,c
  1201  007E92  0012               	return	
  1202  007E94                     l1020:
  1203  007E94  90D8               	bcf	status,0,c
  1204  007E96  3626               	rlcf	___fttol@lval,f,c
  1205  007E98  3627               	rlcf	___fttol@lval+1,f,c
  1206  007E9A  3628               	rlcf	___fttol@lval+2,f,c
  1207  007E9C  3629               	rlcf	___fttol@lval+3,f,c
  1208  007E9E  062A               	decf	___fttol@exp1,f,c
  1209  007EA0                     l1022:
  1210  007EA0  662A               	tstfsz	___fttol@exp1,c
  1211  007EA2  D7F8               	goto	l1020
  1212  007EA4                     l1024:
  1213  007EA4  5025               	movf	___fttol@sign1,w,c
  1214  007EA6  B4D8               	btfsc	status,2,c
  1215  007EA8  D008               	goto	l1028
  1216  007EAA  1E29               	comf	___fttol@lval+3,f,c
  1217  007EAC  1E28               	comf	___fttol@lval+2,f,c
  1218  007EAE  1E27               	comf	___fttol@lval+1,f,c
  1219  007EB0  6C26               	negf	___fttol@lval,c
  1220  007EB2  0E00               	movlw	0
  1221  007EB4  2227               	addwfc	___fttol@lval+1,f,c
  1222  007EB6  2228               	addwfc	___fttol@lval+2,f,c
  1223  007EB8  2229               	addwfc	___fttol@lval+3,f,c
  1224  007EBA                     l1028:
  1225  007EBA  C026  F01C         	movff	___fttol@lval,?___fttol
  1226  007EBE  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1227  007EC2  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1228  007EC6  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1229  007ECA  0012               	return	
  1230  007ECC                     __end_of___fttol:
  1231                           	opt stack 0
  1232                           prodl	equ	0xFF3
  1233                           wreg	equ	0xFE8
  1234                           status	equ	0xFD8
  1235                           
  1236 ;; *************** function ___ftmul *****************
  1237 ;; Defined at:
  1238 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  f1              3   12[COMRAM] float 
  1241 ;;  f2              3   15[COMRAM] float 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  1244 ;;  sign            1   26[COMRAM] unsigned char 
  1245 ;;  cntr            1   25[COMRAM] unsigned char 
  1246 ;;  exp             1   24[COMRAM] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  3   12[COMRAM] float 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1256 ;;      Params:         6       0       0       0       0       0       0
  1257 ;;      Locals:         6       0       0       0       0       0       0
  1258 ;;      Temps:          3       0       0       0       0       0       0
  1259 ;;      Totals:        15       0       0       0       0       0       0
  1260 ;;Total ram usage:       15 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    1
  1263 ;; This function calls:
  1264 ;;		___ftpack
  1265 ;; This function is called by:
  1266 ;;		_EPWM1_LoadDutyValue
  1267 ;;		_EPWM2_LoadDutyValue
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text11
  1272  007CE6                     __ptext11:
  1273                           	opt stack 0
  1274  007CE6                     ___ftmul:
  1275                           	opt stack 27
  1276                           
  1277                           ;incstack = 0
  1278  007CE6  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1279  007CEA  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1280  007CEC  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1281  007CEE  340E               	rlcf	___ftmul@f1+1,w,c
  1282  007CF0  3613               	rlcf	??___ftmul& (0+255),f,c
  1283  007CF2  E301               	bnc	u81
  1284  007CF4  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1285  007CF6                     u81:
  1286  007CF6  5013               	movf	??___ftmul,w,c
  1287  007CF8  6E19               	movwf	___ftmul@exp,c
  1288  007CFA  6619               	tstfsz	___ftmul@exp& (0+255),c
  1289  007CFC  D007               	goto	l932
  1290  007CFE  0E00               	movlw	0
  1291  007D00  6E0D               	movwf	?___ftmul,c
  1292  007D02  0E00               	movlw	0
  1293  007D04  6E0E               	movwf	?___ftmul+1,c
  1294  007D06  0E00               	movlw	0
  1295  007D08  6E0F               	movwf	?___ftmul+2,c
  1296  007D0A  0012               	return	
  1297  007D0C                     l932:
  1298  007D0C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1299  007D10  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1300  007D12  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1301  007D14  3411               	rlcf	___ftmul@f2+1,w,c
  1302  007D16  3613               	rlcf	??___ftmul& (0+255),f,c
  1303  007D18  E301               	bnc	u101
  1304  007D1A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1305  007D1C                     u101:
  1306  007D1C  5013               	movf	??___ftmul,w,c
  1307  007D1E  6E1B               	movwf	___ftmul@sign,c
  1308  007D20  661B               	tstfsz	___ftmul@sign& (0+255),c
  1309  007D22  D007               	goto	l938
  1310  007D24  0E00               	movlw	0
  1311  007D26  6E0D               	movwf	?___ftmul,c
  1312  007D28  0E00               	movlw	0
  1313  007D2A  6E0E               	movwf	?___ftmul+1,c
  1314  007D2C  0E00               	movlw	0
  1315  007D2E  6E0F               	movwf	?___ftmul+2,c
  1316  007D30  0012               	return	
  1317  007D32                     l938:
  1318  007D32  501B               	movf	___ftmul@sign,w,c
  1319  007D34  0F7B               	addlw	123
  1320  007D36  2619               	addwf	___ftmul@exp,f,c
  1321  007D38  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1322  007D3C  5012               	movf	___ftmul@f2+2,w,c
  1323  007D3E  1A1B               	xorwf	___ftmul@sign,f,c
  1324  007D40  0E80               	movlw	128
  1325  007D42  161B               	andwf	___ftmul@sign,f,c
  1326  007D44  8E0E               	bsf	___ftmul@f1+1,7,c
  1327  007D46  8E11               	bsf	___ftmul@f2+1,7,c
  1328  007D48  0EFF               	movlw	255
  1329  007D4A  1610               	andwf	___ftmul@f2,f,c
  1330  007D4C  0EFF               	movlw	255
  1331  007D4E  1611               	andwf	___ftmul@f2+1,f,c
  1332  007D50  0E00               	movlw	0
  1333  007D52  1612               	andwf	___ftmul@f2+2,f,c
  1334  007D54  0E00               	movlw	0
  1335  007D56  6E16               	movwf	___ftmul@f3_as_product,c
  1336  007D58  0E00               	movlw	0
  1337  007D5A  6E17               	movwf	___ftmul@f3_as_product+1,c
  1338  007D5C  0E00               	movlw	0
  1339  007D5E  6E18               	movwf	___ftmul@f3_as_product+2,c
  1340  007D60  0E07               	movlw	7
  1341  007D62  6E1A               	movwf	___ftmul@cntr,c
  1342  007D64                     l952:
  1343  007D64  A00D               	btfss	___ftmul@f1,0,c
  1344  007D66  D006               	goto	l956
  1345  007D68  5010               	movf	___ftmul@f2,w,c
  1346  007D6A  2616               	addwf	___ftmul@f3_as_product,f,c
  1347  007D6C  5011               	movf	___ftmul@f2+1,w,c
  1348  007D6E  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  1349  007D70  5012               	movf	___ftmul@f2+2,w,c
  1350  007D72  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  1351  007D74                     l956:
  1352  007D74  90D8               	bcf	status,0,c
  1353  007D76  320F               	rrcf	___ftmul@f1+2,f,c
  1354  007D78  320E               	rrcf	___ftmul@f1+1,f,c
  1355  007D7A  320D               	rrcf	___ftmul@f1,f,c
  1356  007D7C  90D8               	bcf	status,0,c
  1357  007D7E  3610               	rlcf	___ftmul@f2,f,c
  1358  007D80  3611               	rlcf	___ftmul@f2+1,f,c
  1359  007D82  3612               	rlcf	___ftmul@f2+2,f,c
  1360  007D84  2E1A               	decfsz	___ftmul@cntr,f,c
  1361  007D86  D7EE               	goto	l952
  1362  007D88  0E09               	movlw	9
  1363  007D8A  6E1A               	movwf	___ftmul@cntr,c
  1364  007D8C                     l962:
  1365  007D8C  A00D               	btfss	___ftmul@f1,0,c
  1366  007D8E  D006               	goto	l966
  1367  007D90  5010               	movf	___ftmul@f2,w,c
  1368  007D92  2616               	addwf	___ftmul@f3_as_product,f,c
  1369  007D94  5011               	movf	___ftmul@f2+1,w,c
  1370  007D96  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  1371  007D98  5012               	movf	___ftmul@f2+2,w,c
  1372  007D9A  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  1373  007D9C                     l966:
  1374  007D9C  90D8               	bcf	status,0,c
  1375  007D9E  320F               	rrcf	___ftmul@f1+2,f,c
  1376  007DA0  320E               	rrcf	___ftmul@f1+1,f,c
  1377  007DA2  320D               	rrcf	___ftmul@f1,f,c
  1378  007DA4  90D8               	bcf	status,0,c
  1379  007DA6  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  1380  007DA8  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  1381  007DAA  3216               	rrcf	___ftmul@f3_as_product,f,c
  1382  007DAC  2E1A               	decfsz	___ftmul@cntr,f,c
  1383  007DAE  D7EE               	goto	l962
  1384  007DB0  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1385  007DB4  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1386  007DB8  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1387  007DBC  C019  F004         	movff	___ftmul@exp,___ftpack@exp
  1388  007DC0  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1389  007DC4  EC1F  F03E         	call	___ftpack	;wreg free
  1390  007DC8  C001  F00D         	movff	?___ftpack,?___ftmul
  1391  007DCC  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1392  007DD0  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1393  007DD4  0012               	return	
  1394  007DD6                     __end_of___ftmul:
  1395                           	opt stack 0
  1396                           prodl	equ	0xFF3
  1397                           wreg	equ	0xFE8
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function ___awtoft *****************
  1401 ;; Defined at:
  1402 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  c               2    8[COMRAM] int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  sign            1   11[COMRAM] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  3    8[COMRAM] float 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, prodl, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1416 ;;      Params:         3       0       0       0       0       0       0
  1417 ;;      Locals:         1       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0
  1419 ;;      Totals:         4       0       0       0       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		___ftpack
  1425 ;; This function is called by:
  1426 ;;		_EPWM1_LoadDutyValue
  1427 ;;		_EPWM2_LoadDutyValue
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text12
  1432  0079AC                     __ptext12:
  1433                           	opt stack 0
  1434  0079AC                     ___awtoft:
  1435                           	opt stack 27
  1436                           
  1437                           ;incstack = 0
  1438  0079AC  0E00               	movlw	0
  1439  0079AE  6E0C               	movwf	___awtoft@sign,c
  1440  0079B0  500A               	movf	___awtoft@c+1,w,c
  1441  0079B2  0A80               	xorlw	128
  1442  0079B4  6EF3               	movwf	prodl,c
  1443  0079B6  0E80               	movlw	128
  1444  0079B8  5CF3               	subwf	prodl,w,c
  1445  0079BA  0E00               	movlw	0
  1446  0079BC  B4D8               	btfsc	status,2,c
  1447  0079BE  5C09               	subwf	___awtoft@c,w,c
  1448  0079C0  B0D8               	btfsc	status,0,c
  1449  0079C2  D006               	goto	l982
  1450  0079C4  6C09               	negf	___awtoft@c,c
  1451  0079C6  1E0A               	comf	___awtoft@c+1,f,c
  1452  0079C8  B0D8               	btfsc	status,0,c
  1453  0079CA  2A0A               	incf	___awtoft@c+1,f,c
  1454  0079CC  0E01               	movlw	1
  1455  0079CE  6E0C               	movwf	___awtoft@sign,c
  1456  0079D0                     l982:
  1457  0079D0  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1458  0079D4  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1459  0079D8  6A03               	clrf	___ftpack@arg+2,c
  1460  0079DA  0E8E               	movlw	142
  1461  0079DC  6E04               	movwf	___ftpack@exp,c
  1462  0079DE  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1463  0079E2  EC1F  F03E         	call	___ftpack	;wreg free
  1464  0079E6  C001  F009         	movff	?___ftpack,?___awtoft
  1465  0079EA  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1466  0079EE  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1467  0079F2  0012               	return	
  1468  0079F4                     __end_of___awtoft:
  1469                           	opt stack 0
  1470                           prodl	equ	0xFF3
  1471                           wreg	equ	0xFE8
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function ___ftpack *****************
  1475 ;; Defined at:
  1476 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  arg             3    0[COMRAM] unsigned um
  1479 ;;  exp             1    3[COMRAM] unsigned char 
  1480 ;;  sign            1    4[COMRAM] unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  3    0[COMRAM] float 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         5       0       0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0
  1494 ;;      Temps:          3       0       0       0       0       0       0
  1495 ;;      Totals:         8       0       0       0       0       0       0
  1496 ;;Total ram usage:        8 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		___awtoft
  1502 ;;		___ftmul
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text13
  1507  007C3E                     __ptext13:
  1508                           	opt stack 0
  1509  007C3E                     ___ftpack:
  1510                           	opt stack 27
  1511                           
  1512                           ;incstack = 0
  1513  007C3E  5004               	movf	___ftpack@exp,w,c
  1514  007C40  B4D8               	btfsc	status,2,c
  1515  007C42  D005               	goto	l896
  1516  007C44  5001               	movf	___ftpack@arg,w,c
  1517  007C46  1002               	iorwf	___ftpack@arg+1,w,c
  1518  007C48  1003               	iorwf	___ftpack@arg+2,w,c
  1519  007C4A  A4D8               	btfss	status,2,c
  1520  007C4C  D00C               	goto	l902
  1521  007C4E                     l896:
  1522  007C4E  0E00               	movlw	0
  1523  007C50  6E01               	movwf	?___ftpack,c
  1524  007C52  0E00               	movlw	0
  1525  007C54  6E02               	movwf	?___ftpack+1,c
  1526  007C56  0E00               	movlw	0
  1527  007C58  6E03               	movwf	?___ftpack+2,c
  1528  007C5A  0012               	return	
  1529  007C5C                     l900:
  1530  007C5C  2A04               	incf	___ftpack@exp,f,c
  1531  007C5E  90D8               	bcf	status,0,c
  1532  007C60  3203               	rrcf	___ftpack@arg+2,f,c
  1533  007C62  3202               	rrcf	___ftpack@arg+1,f,c
  1534  007C64  3201               	rrcf	___ftpack@arg,f,c
  1535  007C66                     l902:
  1536  007C66  0E00               	movlw	0
  1537  007C68  1401               	andwf	___ftpack@arg,w,c
  1538  007C6A  6E06               	movwf	??___ftpack& (0+255),c
  1539  007C6C  0E00               	movlw	0
  1540  007C6E  1402               	andwf	___ftpack@arg+1,w,c
  1541  007C70  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1542  007C72  0EFE               	movlw	254
  1543  007C74  1403               	andwf	___ftpack@arg+2,w,c
  1544  007C76  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1545  007C78  5006               	movf	??___ftpack,w,c
  1546  007C7A  1007               	iorwf	??___ftpack+1,w,c
  1547  007C7C  1008               	iorwf	??___ftpack+2,w,c
  1548  007C7E  B4D8               	btfsc	status,2,c
  1549  007C80  D00C               	goto	l908
  1550  007C82  D7EC               	goto	l900
  1551  007C84                     l904:
  1552  007C84  2A04               	incf	___ftpack@exp,f,c
  1553  007C86  0E01               	movlw	1
  1554  007C88  2601               	addwf	___ftpack@arg,f,c
  1555  007C8A  0E00               	movlw	0
  1556  007C8C  2202               	addwfc	___ftpack@arg+1,f,c
  1557  007C8E  0E00               	movlw	0
  1558  007C90  2203               	addwfc	___ftpack@arg+2,f,c
  1559  007C92  90D8               	bcf	status,0,c
  1560  007C94  3203               	rrcf	___ftpack@arg+2,f,c
  1561  007C96  3202               	rrcf	___ftpack@arg+1,f,c
  1562  007C98  3201               	rrcf	___ftpack@arg,f,c
  1563  007C9A                     l908:
  1564  007C9A  0E00               	movlw	0
  1565  007C9C  1401               	andwf	___ftpack@arg,w,c
  1566  007C9E  6E06               	movwf	??___ftpack& (0+255),c
  1567  007CA0  0E00               	movlw	0
  1568  007CA2  1402               	andwf	___ftpack@arg+1,w,c
  1569  007CA4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1570  007CA6  0EFF               	movlw	255
  1571  007CA8  1403               	andwf	___ftpack@arg+2,w,c
  1572  007CAA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1573  007CAC  5006               	movf	??___ftpack,w,c
  1574  007CAE  1007               	iorwf	??___ftpack+1,w,c
  1575  007CB0  1008               	iorwf	??___ftpack+2,w,c
  1576  007CB2  B4D8               	btfsc	status,2,c
  1577  007CB4  D006               	goto	l912
  1578  007CB6  D7E6               	goto	l904
  1579  007CB8                     l910:
  1580  007CB8  0604               	decf	___ftpack@exp,f,c
  1581  007CBA  90D8               	bcf	status,0,c
  1582  007CBC  3601               	rlcf	___ftpack@arg,f,c
  1583  007CBE  3602               	rlcf	___ftpack@arg+1,f,c
  1584  007CC0  3603               	rlcf	___ftpack@arg+2,f,c
  1585  007CC2                     l912:
  1586  007CC2  AE02               	btfss	___ftpack@arg+1,7,c
  1587  007CC4  D7F9               	goto	l910
  1588  007CC6  A004               	btfss	___ftpack@exp,0,c
  1589  007CC8  9E02               	bcf	___ftpack@arg+1,7,c
  1590  007CCA  90D8               	bcf	status,0,c
  1591  007CCC  3204               	rrcf	___ftpack@exp,f,c
  1592  007CCE  5004               	movf	___ftpack@exp,w,c
  1593  007CD0  1203               	iorwf	___ftpack@arg+2,f,c
  1594  007CD2  5005               	movf	___ftpack@sign,w,c
  1595  007CD4  A4D8               	btfss	status,2,c
  1596  007CD6  8E03               	bsf	___ftpack@arg+2,7,c
  1597  007CD8  C001  F001         	movff	___ftpack@arg,?___ftpack
  1598  007CDC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1599  007CE0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1600  007CE4  0012               	return	
  1601  007CE6                     __end_of___ftpack:
  1602                           	opt stack 0
  1603                           prodl	equ	0xFF3
  1604                           wreg	equ	0xFE8
  1605                           status	equ	0xFD8
  1606                           
  1607 ;; *************** function _LCD_writeChar *****************
  1608 ;; Defined at:
  1609 ;;		line 103 in file "../LCD.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  data            1    wreg     unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  data            1    3[COMRAM] unsigned char 
  1614 ;;  lower           1    2[COMRAM] unsigned char 
  1615 ;;  upper           1    1[COMRAM] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;		None               void
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       0       0       0       0       0       0
  1626 ;;      Locals:         3       0       0       0       0       0       0
  1627 ;;      Temps:          1       0       0       0       0       0       0
  1628 ;;      Totals:         4       0       0       0       0       0       0
  1629 ;;Total ram usage:        4 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;;		_LCD_write
  1636 ;;		_LCD_convertWrite
  1637 ;;		_i2c_Read
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text14
  1642  007972                     __ptext14:
  1643                           	opt stack 0
  1644  007972                     _LCD_writeChar:
  1645                           	opt stack 30
  1646                           
  1647                           ;incstack = 0
  1648                           ;LCD_writeChar@data stored from wreg
  1649  007972  6E04               	movwf	LCD_writeChar@data,c
  1650                           
  1651                           ;LCD.c: 106: unsigned char upper = data & 0b11110000;
  1652  007974  5004               	movf	LCD_writeChar@data,w,c
  1653  007976  0BF0               	andlw	240
  1654  007978  6E02               	movwf	LCD_writeChar@upper,c
  1655                           
  1656                           ;LCD.c: 107: unsigned char lower = (data << 4);
  1657  00797A  3804               	swapf	LCD_writeChar@data,w,c
  1658  00797C  0BF0               	andlw	240
  1659  00797E  6E03               	movwf	LCD_writeChar@lower,c
  1660                           
  1661                           ;LCD.c: 110: LATCbits.LC3 = 1;
  1662  007980  868B               	bsf	3979,3,c	;volatile
  1663                           
  1664                           ;LCD.c: 111: LATCbits.LC2 = 1; LATC = (LATC & 0b00001111) | upper; LATCbits.LC2 = 0;
  1665  007982  848B               	bsf	3979,2,c	;volatile
  1666  007984  508B               	movf	3979,w,c	;volatile
  1667  007986  0B0F               	andlw	15
  1668  007988  1002               	iorwf	LCD_writeChar@upper,w,c
  1669  00798A  6E8B               	movwf	3979,c	;volatile
  1670  00798C  948B               	bcf	3979,2,c	;volatile
  1671                           
  1672                           ;LCD.c: 112: LATCbits.LC2 = 1; LATC = (LATC & 0b00001111) | lower; LATCbits.LC2 = 0;
  1673  00798E  848B               	bsf	3979,2,c	;volatile
  1674  007990  508B               	movf	3979,w,c	;volatile
  1675  007992  0B0F               	andlw	15
  1676  007994  1003               	iorwf	LCD_writeChar@lower,w,c
  1677  007996  6E8B               	movwf	3979,c	;volatile
  1678  007998  948B               	bcf	3979,2,c	;volatile
  1679                           
  1680                           ;LCD.c: 113: _delay((unsigned long)((1)*(10000000/4000.0)));
  1681  00799A  0E04               	movlw	4
  1682  00799C  6E01               	movwf	??_LCD_writeChar& (0+255),c
  1683  00799E  0E3E               	movlw	62
  1684  0079A0                     u377:
  1685  0079A0  2EE8               	decfsz	wreg,f,c
  1686  0079A2  D7FE               	goto	u377
  1687  0079A4  2E01               	decfsz	??_LCD_writeChar& (0+255),f,c
  1688  0079A6  D7FC               	goto	u377
  1689                           
  1690                           ;LCD.c: 114: LATCbits.LC3 = 0;
  1691  0079A8  968B               	bcf	3979,3,c	;volatile
  1692  0079AA  0012               	return	
  1693  0079AC                     __end_of_LCD_writeChar:
  1694                           	opt stack 0
  1695                           prodl	equ	0xFF3
  1696                           wreg	equ	0xFE8
  1697                           status	equ	0xFD8
  1698                           
  1699 ;; *************** function _LCD_init *****************
  1700 ;; Defined at:
  1701 ;;		line 18 in file "../LCD.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         0       0       0       0       0       0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0
  1717 ;;      Temps:          1       0       0       0       0       0       0
  1718 ;;      Totals:         1       0       0       0       0       0       0
  1719 ;;Total ram usage:        1 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    1
  1722 ;; This function calls:
  1723 ;;		_Delay100ms
  1724 ;;		_place_lcd_cursor
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text15
  1731  007ECC                     __ptext15:
  1732                           	opt stack 0
  1733  007ECC                     _LCD_init:
  1734                           	opt stack 29
  1735                           
  1736                           ;LCD.c: 21: LATCbits.LC3 = 0;
  1737                           
  1738                           ;incstack = 0
  1739  007ECC  968B               	bcf	3979,3,c	;volatile
  1740                           
  1741                           ;LCD.c: 22: LATCbits.LC2 = 0;
  1742  007ECE  948B               	bcf	3979,2,c	;volatile
  1743                           
  1744                           ;LCD.c: 23: LATCbits.LC4 = 0;
  1745  007ED0  988B               	bcf	3979,4,c	;volatile
  1746                           
  1747                           ;LCD.c: 24: LATCbits.LC5 = 0;
  1748  007ED2  9A8B               	bcf	3979,5,c	;volatile
  1749                           
  1750                           ;LCD.c: 25: LATCbits.LC6 = 0;
  1751  007ED4  9C8B               	bcf	3979,6,c	;volatile
  1752                           
  1753                           ;LCD.c: 26: LATCbits.LC7 = 0;
  1754  007ED6  9E8B               	bcf	3979,7,c	;volatile
  1755                           
  1756                           ;LCD.c: 29: TRISCbits.RC3 = 0;
  1757  007ED8  9694               	bcf	3988,3,c	;volatile
  1758                           
  1759                           ;LCD.c: 30: TRISCbits.RC2 = 0;
  1760  007EDA  9494               	bcf	3988,2,c	;volatile
  1761                           
  1762                           ;LCD.c: 31: TRISCbits.RC4 = 0;
  1763  007EDC  9894               	bcf	3988,4,c	;volatile
  1764                           
  1765                           ;LCD.c: 32: TRISCbits.RC5 = 0;
  1766  007EDE  9A94               	bcf	3988,5,c	;volatile
  1767                           
  1768                           ;LCD.c: 33: TRISCbits.RC6 = 0;
  1769  007EE0  9C94               	bcf	3988,6,c	;volatile
  1770                           
  1771                           ;LCD.c: 34: TRISCbits.RC7 = 0;
  1772  007EE2  9E94               	bcf	3988,7,c	;volatile
  1773                           
  1774                           ;LCD.c: 37: Delay100ms();
  1775  007EE4  EC74  F03C         	call	_Delay100ms	;wreg free
  1776                           
  1777                           ;LCD.c: 40: PORTCbits.RC3 = 0;
  1778  007EE8  9682               	bcf	3970,3,c	;volatile
  1779                           
  1780                           ;LCD.c: 43: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x30; PORTCbits.RC2 = 0;
  1781  007EEA  8482               	bsf	3970,2,c	;volatile
  1782  007EEC  5082               	movf	3970,w,c	;volatile
  1783  007EEE  0B0F               	andlw	15
  1784  007EF0  0930               	iorlw	48
  1785  007EF2  6E82               	movwf	3970,c	;volatile
  1786  007EF4  9482               	bcf	3970,2,c	;volatile
  1787                           
  1788                           ;LCD.c: 44: _delay((unsigned long)((10)*(10000000/4000.0)));
  1789  007EF6  0E21               	movlw	33
  1790  007EF8  6E05               	movwf	??_LCD_init& (0+255),c
  1791  007EFA  0E76               	movlw	118
  1792  007EFC                     u387:
  1793  007EFC  2EE8               	decfsz	wreg,f,c
  1794  007EFE  D7FE               	goto	u387
  1795  007F00  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1796  007F02  D7FC               	goto	u387
  1797  007F04  D000               	nop2	
  1798                           
  1799                           ;LCD.c: 47: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x30; PORTCbits.RC2 = 0;
  1800  007F06  8482               	bsf	3970,2,c	;volatile
  1801  007F08  5082               	movf	3970,w,c	;volatile
  1802  007F0A  0B0F               	andlw	15
  1803  007F0C  0930               	iorlw	48
  1804  007F0E  6E82               	movwf	3970,c	;volatile
  1805  007F10  9482               	bcf	3970,2,c	;volatile
  1806                           
  1807                           ;LCD.c: 48: _delay((unsigned long)((10)*(10000000/4000.0)));
  1808  007F12  0E21               	movlw	33
  1809  007F14  6E05               	movwf	??_LCD_init& (0+255),c
  1810  007F16  0E76               	movlw	118
  1811  007F18                     u397:
  1812  007F18  2EE8               	decfsz	wreg,f,c
  1813  007F1A  D7FE               	goto	u397
  1814  007F1C  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1815  007F1E  D7FC               	goto	u397
  1816  007F20  D000               	nop2	
  1817                           
  1818                           ;LCD.c: 51: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x30; PORTCbits.RC2 = 0;
  1819  007F22  8482               	bsf	3970,2,c	;volatile
  1820  007F24  5082               	movf	3970,w,c	;volatile
  1821  007F26  0B0F               	andlw	15
  1822  007F28  0930               	iorlw	48
  1823  007F2A  6E82               	movwf	3970,c	;volatile
  1824  007F2C  9482               	bcf	3970,2,c	;volatile
  1825                           
  1826                           ;LCD.c: 52: _delay((unsigned long)((10)*(10000000/4000.0)));
  1827  007F2E  0E21               	movlw	33
  1828  007F30  6E05               	movwf	??_LCD_init& (0+255),c
  1829  007F32  0E76               	movlw	118
  1830  007F34                     u407:
  1831  007F34  2EE8               	decfsz	wreg,f,c
  1832  007F36  D7FE               	goto	u407
  1833  007F38  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1834  007F3A  D7FC               	goto	u407
  1835  007F3C  D000               	nop2	
  1836                           
  1837                           ;LCD.c: 55: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x20; PORTCbits.RC2 = 0;
  1838  007F3E  8482               	bsf	3970,2,c	;volatile
  1839  007F40  5082               	movf	3970,w,c	;volatile
  1840  007F42  0B0F               	andlw	15
  1841  007F44  0920               	iorlw	32
  1842  007F46  6E82               	movwf	3970,c	;volatile
  1843  007F48  9482               	bcf	3970,2,c	;volatile
  1844                           
  1845                           ;LCD.c: 56: _delay((unsigned long)((10)*(10000000/4000.0)));
  1846  007F4A  0E21               	movlw	33
  1847  007F4C  6E05               	movwf	??_LCD_init& (0+255),c
  1848  007F4E  0E76               	movlw	118
  1849  007F50                     u417:
  1850  007F50  2EE8               	decfsz	wreg,f,c
  1851  007F52  D7FE               	goto	u417
  1852  007F54  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1853  007F56  D7FC               	goto	u417
  1854  007F58  D000               	nop2	
  1855                           
  1856                           ;LCD.c: 59: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x20; PORTCbits.RC2 = 0;
  1857  007F5A  8482               	bsf	3970,2,c	;volatile
  1858  007F5C  5082               	movf	3970,w,c	;volatile
  1859  007F5E  0B0F               	andlw	15
  1860  007F60  0920               	iorlw	32
  1861  007F62  6E82               	movwf	3970,c	;volatile
  1862  007F64  9482               	bcf	3970,2,c	;volatile
  1863                           
  1864                           ;LCD.c: 60: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x80; PORTCbits.RC2 = 0;
  1865  007F66  8482               	bsf	3970,2,c	;volatile
  1866  007F68  5082               	movf	3970,w,c	;volatile
  1867  007F6A  0B0F               	andlw	15
  1868  007F6C  0980               	iorlw	128
  1869  007F6E  6E82               	movwf	3970,c	;volatile
  1870  007F70  9482               	bcf	3970,2,c	;volatile
  1871                           
  1872                           ;LCD.c: 61: _delay((unsigned long)((10)*(10000000/4000.0)));
  1873  007F72  0E21               	movlw	33
  1874  007F74  6E05               	movwf	??_LCD_init& (0+255),c
  1875  007F76  0E76               	movlw	118
  1876  007F78                     u427:
  1877  007F78  2EE8               	decfsz	wreg,f,c
  1878  007F7A  D7FE               	goto	u427
  1879  007F7C  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1880  007F7E  D7FC               	goto	u427
  1881  007F80  D000               	nop2	
  1882                           
  1883                           ;LCD.c: 64: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x00; PORTCbits.RC2 = 0;
  1884  007F82  8482               	bsf	3970,2,c	;volatile
  1885  007F84  5082               	movf	3970,w,c	;volatile
  1886  007F86  0B0F               	andlw	15
  1887  007F88  6E82               	movwf	3970,c	;volatile
  1888  007F8A  9482               	bcf	3970,2,c	;volatile
  1889                           
  1890                           ;LCD.c: 65: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0xF0; PORTCbits.RC2 = 0;
  1891  007F8C  8482               	bsf	3970,2,c	;volatile
  1892  007F8E  5082               	movf	3970,w,c	;volatile
  1893  007F90  0B0F               	andlw	15
  1894  007F92  09F0               	iorlw	240
  1895  007F94  6E82               	movwf	3970,c	;volatile
  1896  007F96  9482               	bcf	3970,2,c	;volatile
  1897                           
  1898                           ;LCD.c: 66: _delay((unsigned long)((10)*(10000000/4000.0)));
  1899  007F98  0E21               	movlw	33
  1900  007F9A  6E05               	movwf	??_LCD_init& (0+255),c
  1901  007F9C  0E76               	movlw	118
  1902  007F9E                     u437:
  1903  007F9E  2EE8               	decfsz	wreg,f,c
  1904  007FA0  D7FE               	goto	u437
  1905  007FA2  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1906  007FA4  D7FC               	goto	u437
  1907  007FA6  D000               	nop2	
  1908                           
  1909                           ;LCD.c: 69: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x00; PORTCbits.RC2 = 0;
  1910  007FA8  8482               	bsf	3970,2,c	;volatile
  1911  007FAA  5082               	movf	3970,w,c	;volatile
  1912  007FAC  0B0F               	andlw	15
  1913  007FAE  6E82               	movwf	3970,c	;volatile
  1914  007FB0  9482               	bcf	3970,2,c	;volatile
  1915                           
  1916                           ;LCD.c: 70: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x10; PORTCbits.RC2 = 0;
  1917  007FB2  8482               	bsf	3970,2,c	;volatile
  1918  007FB4  5082               	movf	3970,w,c	;volatile
  1919  007FB6  0B0F               	andlw	15
  1920  007FB8  0910               	iorlw	16
  1921  007FBA  6E82               	movwf	3970,c	;volatile
  1922  007FBC  9482               	bcf	3970,2,c	;volatile
  1923                           
  1924                           ;LCD.c: 71: _delay((unsigned long)((10)*(10000000/4000.0)));
  1925  007FBE  0E21               	movlw	33
  1926  007FC0  6E05               	movwf	??_LCD_init& (0+255),c
  1927  007FC2  0E76               	movlw	118
  1928  007FC4                     u447:
  1929  007FC4  2EE8               	decfsz	wreg,f,c
  1930  007FC6  D7FE               	goto	u447
  1931  007FC8  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1932  007FCA  D7FC               	goto	u447
  1933  007FCC  D000               	nop2	
  1934                           
  1935                           ;LCD.c: 74: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x00; PORTCbits.RC2 = 0;
  1936  007FCE  8482               	bsf	3970,2,c	;volatile
  1937  007FD0  5082               	movf	3970,w,c	;volatile
  1938  007FD2  0B0F               	andlw	15
  1939  007FD4  6E82               	movwf	3970,c	;volatile
  1940  007FD6  9482               	bcf	3970,2,c	;volatile
  1941                           
  1942                           ;LCD.c: 75: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x60; PORTCbits.RC2 = 0;
  1943  007FD8  8482               	bsf	3970,2,c	;volatile
  1944  007FDA  5082               	movf	3970,w,c	;volatile
  1945  007FDC  0B0F               	andlw	15
  1946  007FDE  0960               	iorlw	96
  1947  007FE0  6E82               	movwf	3970,c	;volatile
  1948  007FE2  9482               	bcf	3970,2,c	;volatile
  1949                           
  1950                           ;LCD.c: 76: _delay((unsigned long)((10)*(10000000/4000.0)));
  1951  007FE4  0E21               	movlw	33
  1952  007FE6  6E05               	movwf	??_LCD_init& (0+255),c
  1953  007FE8  0E76               	movlw	118
  1954  007FEA                     u457:
  1955  007FEA  2EE8               	decfsz	wreg,f,c
  1956  007FEC  D7FE               	goto	u457
  1957  007FEE  2E05               	decfsz	??_LCD_init& (0+255),f,c
  1958  007FF0  D7FC               	goto	u457
  1959  007FF2  D000               	nop2	
  1960                           
  1961                           ;LCD.c: 79: place_lcd_cursor(0,0);
  1962  007FF4  0E00               	movlw	0
  1963  007FF6  6E01               	movwf	place_lcd_cursor@y,c
  1964  007FF8  0E00               	movlw	0
  1965  007FFA  ECFA  F03C         	call	_place_lcd_cursor
  1966  007FFE  0012               	return	
  1967  008000                     __end_of_LCD_init:
  1968                           	opt stack 0
  1969                           prodl	equ	0xFF3
  1970                           wreg	equ	0xFE8
  1971                           status	equ	0xFD8
  1972                           
  1973 ;; *************** function _place_lcd_cursor *****************
  1974 ;; Defined at:
  1975 ;;		line 125 in file "../LCD.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  x               1    wreg     unsigned char 
  1978 ;;  y               1    0[COMRAM] unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  x               1    2[COMRAM] unsigned char 
  1981 ;;  position        1    3[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;		None               void
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, prodl, prodh
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1991 ;;      Params:         1       0       0       0       0       0       0
  1992 ;;      Locals:         2       0       0       0       0       0       0
  1993 ;;      Temps:          1       0       0       0       0       0       0
  1994 ;;      Totals:         4       0       0       0       0       0       0
  1995 ;;Total ram usage:        4 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;;		_LCD_init
  2002 ;;		_LCD_write
  2003 ;;		_i2c_Read
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text16
  2008  0079F4                     __ptext16:
  2009                           	opt stack 0
  2010  0079F4                     _place_lcd_cursor:
  2011                           	opt stack 30
  2012                           
  2013                           ;incstack = 0
  2014                           ;place_lcd_cursor@x stored from wreg
  2015  0079F4  6E03               	movwf	place_lcd_cursor@x,c
  2016                           
  2017                           ;LCD.c: 128: yPos = y;
  2018  0079F6  C001  F032         	movff	place_lcd_cursor@y,_yPos
  2019  0079FA  6A33               	clrf	_yPos+1,c
  2020                           
  2021                           ;LCD.c: 131: unsigned char position = (0x40*y)+x;
  2022  0079FC  5001               	movf	place_lcd_cursor@y,w,c
  2023  0079FE  0D40               	mullw	64
  2024  007A00  50F3               	movf	prodl,w,c
  2025  007A02  2403               	addwf	place_lcd_cursor@x,w,c
  2026  007A04  6E04               	movwf	place_lcd_cursor@position,c
  2027                           
  2028                           ;LCD.c: 132: LATCbits.LC3 = 0;
  2029  007A06  968B               	bcf	3979,3,c	;volatile
  2030                           
  2031                           ;LCD.c: 135: LATCbits.LC2 = 1;
  2032  007A08  848B               	bsf	3979,2,c	;volatile
  2033                           
  2034                           ;LCD.c: 136: LATC = LATC & 0b00001111;
  2035  007A0A  508B               	movf	3979,w,c	;volatile
  2036  007A0C  0B0F               	andlw	15
  2037  007A0E  6E8B               	movwf	3979,c	;volatile
  2038                           
  2039                           ;LCD.c: 137: LATC = (LATC | (position & 0b11110000)) | 0b10000000;
  2040  007A10  5004               	movf	place_lcd_cursor@position,w,c
  2041  007A12  0BF0               	andlw	240
  2042  007A14  108B               	iorwf	3979,w,c	;volatile
  2043  007A16  0980               	iorlw	128
  2044  007A18  6E8B               	movwf	3979,c	;volatile
  2045                           
  2046                           ;LCD.c: 138: LATCbits.LC2 = 0;
  2047  007A1A  948B               	bcf	3979,2,c	;volatile
  2048                           
  2049                           ;LCD.c: 141: LATCbits.LC2 = 1;
  2050  007A1C  848B               	bsf	3979,2,c	;volatile
  2051                           
  2052                           ;LCD.c: 142: LATC = (LATC & 0b00001111) | (position << 4);
  2053  007A1E  C004  F002         	movff	place_lcd_cursor@position,??_place_lcd_cursor
  2054  007A22  3A02               	swapf	??_place_lcd_cursor,f,c
  2055  007A24  0EF0               	movlw	240
  2056  007A26  1602               	andwf	??_place_lcd_cursor,f,c
  2057  007A28  508B               	movf	3979,w,c	;volatile
  2058  007A2A  0B0F               	andlw	15
  2059  007A2C  1002               	iorwf	??_place_lcd_cursor,w,c
  2060  007A2E  6E8B               	movwf	3979,c	;volatile
  2061                           
  2062                           ;LCD.c: 143: LATCbits.LC2 = 0;
  2063  007A30  948B               	bcf	3979,2,c	;volatile
  2064                           
  2065                           ;LCD.c: 144: _delay((unsigned long)((1)*(10000000/4000.0)));
  2066  007A32  0E04               	movlw	4
  2067  007A34  6E02               	movwf	??_place_lcd_cursor& (0+255),c
  2068  007A36  0E3E               	movlw	62
  2069  007A38                     u467:
  2070  007A38  2EE8               	decfsz	wreg,f,c
  2071  007A3A  D7FE               	goto	u467
  2072  007A3C  2E02               	decfsz	??_place_lcd_cursor& (0+255),f,c
  2073  007A3E  D7FC               	goto	u467
  2074  007A40  0012               	return	
  2075  007A42                     __end_of_place_lcd_cursor:
  2076                           	opt stack 0
  2077                           prodl	equ	0xFF3
  2078                           wreg	equ	0xFE8
  2079                           status	equ	0xFD8
  2080                           
  2081 ;; *************** function _Delay100ms *****************
  2082 ;; Defined at:
  2083 ;;		line 147 in file "../LCD.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  i               2    1[COMRAM] int 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;		None               void
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2097 ;;      Params:         0       0       0       0       0       0       0
  2098 ;;      Locals:         2       0       0       0       0       0       0
  2099 ;;      Temps:          1       0       0       0       0       0       0
  2100 ;;      Totals:         3       0       0       0       0       0       0
  2101 ;;Total ram usage:        3 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_LCD_init
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text17
  2111  0078E8                     __ptext17:
  2112                           	opt stack 0
  2113  0078E8                     _Delay100ms:
  2114                           	opt stack 29
  2115                           
  2116                           ;LCD.c: 149: for(i=0;i<100;i++)
  2117                           
  2118                           ;incstack = 0
  2119  0078E8  0E00               	movlw	0
  2120  0078EA  6E03               	movwf	Delay100ms@i+1,c
  2121  0078EC  0E00               	movlw	0
  2122  0078EE  6E02               	movwf	Delay100ms@i,c
  2123  0078F0  5003               	movf	Delay100ms@i+1,w,c
  2124  0078F2  0A80               	xorlw	128
  2125  0078F4  0F80               	addlw	-128
  2126  0078F6  0E64               	movlw	100
  2127  0078F8  B4D8               	btfsc	status,2,c
  2128  0078FA  5C02               	subwf	Delay100ms@i,w,c
  2129  0078FC  B0D8               	btfsc	status,0,c
  2130  0078FE  0012               	return	
  2131                           
  2132                           ;LCD.c: 150: {
  2133                           ;LCD.c: 151: _delay((unsigned long)((1)*(10000000/4000.0)));
  2134  007900  0E04               	movlw	4
  2135  007902  6E01               	movwf	??_Delay100ms& (0+255),c
  2136  007904  0E3E               	movlw	62
  2137  007906                     u477:
  2138  007906  2EE8               	decfsz	wreg,f,c
  2139  007908  D7FE               	goto	u477
  2140  00790A  2E01               	decfsz	??_Delay100ms& (0+255),f,c
  2141  00790C  D7FC               	goto	u477
  2142  00790E  4A02               	infsnz	Delay100ms@i,f,c
  2143  007910  2A03               	incf	Delay100ms@i+1,f,c
  2144  007912  D7EE               	goto	L1
  2145  007914                     __end_of_Delay100ms:
  2146                           	opt stack 0
  2147                           prodl	equ	0xFF3
  2148                           wreg	equ	0xFE8
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _EPWM_Port_Init *****************
  2152 ;; Defined at:
  2153 ;;		line 6 in file "../DCMotor.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2167 ;;      Params:         0       0       0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text18
  2181  007A42                     __ptext18:
  2182                           	opt stack 0
  2183  007A42                     _EPWM_Port_Init:
  2184                           	opt stack 30
  2185                           
  2186                           ;DCMotor.c: 8: LATA = LATA & 0x00;
  2187                           
  2188                           ;incstack = 0
  2189  007A42  0E00               	movlw	0
  2190  007A44  6E89               	movwf	3977,c	;volatile
  2191                           
  2192                           ;DCMotor.c: 9: TRISA = TRISA & 0xFF;
  2193  007A46  CF92 FF92          	movff	3986,3986	;volatile
  2194                           
  2195                           ;DCMotor.c: 10: ANSELA = ANSELA & 0x2F;
  2196  007A4A  010F               	movlb	15	; () banked
  2197  007A4C  5138               	movf	56,w,b	;volatile
  2198  007A4E  0B2F               	andlw	47
  2199  007A50  010F               	movlb	15	; () banked
  2200  007A52  6F38               	movwf	56,b	;volatile
  2201                           
  2202                           ; BSR set to: 15
  2203                           ;DCMotor.c: 12: LATB = LATB & 0x00;
  2204  007A54  0E00               	movlw	0
  2205  007A56  6E8A               	movwf	3978,c	;volatile
  2206                           
  2207                           ;DCMotor.c: 13: TRISB = TRISB & 0xDF;
  2208  007A58  5093               	movf	3987,w,c	;volatile
  2209  007A5A  0BDF               	andlw	223
  2210  007A5C  6E93               	movwf	3987,c	;volatile
  2211                           
  2212                           ;DCMotor.c: 14: ANSELB = ANSELB & 0x1F;
  2213  007A5E  010F               	movlb	15	; () banked
  2214  007A60  5139               	movf	57,w,b	;volatile
  2215  007A62  0B1F               	andlw	31
  2216  007A64  010F               	movlb	15	; () banked
  2217  007A66  6F39               	movwf	57,b	;volatile
  2218                           
  2219                           ; BSR set to: 15
  2220                           ;DCMotor.c: 15: WPUB = 0x00;
  2221  007A68  0E00               	movlw	0
  2222  007A6A  6E61               	movwf	3937,c	;volatile
  2223                           
  2224                           ; BSR set to: 15
  2225                           ;DCMotor.c: 17: LATCbits.LC1 = 0;
  2226  007A6C  928B               	bcf	3979,1,c	;volatile
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;DCMotor.c: 18: TRISCbits.RC1 = 0;
  2230  007A6E  9294               	bcf	3988,1,c	;volatile
  2231                           
  2232                           ; BSR set to: 15
  2233                           ;DCMotor.c: 19: ANSELCbits.ANSC2 = 0;
  2234  007A70  010F               	movlb	15	; () banked
  2235  007A72  953A               	bcf	58,2,b	;volatile
  2236                           
  2237                           ; BSR set to: 15
  2238                           ;DCMotor.c: 21: LATD = LATD & 0x00;
  2239  007A74  0E00               	movlw	0
  2240  007A76  6E8C               	movwf	3980,c	;volatile
  2241                           
  2242                           ;DCMotor.c: 22: TRISD = TRISD & 0xFB;
  2243  007A78  5095               	movf	3989,w,c	;volatile
  2244  007A7A  0BFB               	andlw	251
  2245  007A7C  6E95               	movwf	3989,c	;volatile
  2246                           
  2247                           ;DCMotor.c: 23: ANSELD = ANSELD & 0xFB;
  2248  007A7E  010F               	movlb	15	; () banked
  2249  007A80  513B               	movf	59,w,b	;volatile
  2250  007A82  0BFB               	andlw	251
  2251  007A84  010F               	movlb	15	; () banked
  2252  007A86  6F3B               	movwf	59,b	;volatile
  2253                           
  2254                           ; BSR set to: 15
  2255                           ;DCMotor.c: 25: LATE = LATE & 0x00;
  2256  007A88  0E00               	movlw	0
  2257  007A8A  6E8D               	movwf	3981,c	;volatile
  2258                           
  2259                           ; BSR set to: 15
  2260                           ;DCMotor.c: 26: TRISE = TRISE & 0x05;
  2261  007A8C  5096               	movf	3990,w,c	;volatile
  2262  007A8E  0B05               	andlw	5
  2263  007A90  6E96               	movwf	3990,c	;volatile
  2264                           
  2265                           ; BSR set to: 15
  2266                           ;DCMotor.c: 27: ANSELE = ANSELE & 0x05;
  2267  007A92  010F               	movlb	15	; () banked
  2268  007A94  513C               	movf	60,w,b	;volatile
  2269  007A96  0B05               	andlw	5
  2270  007A98  010F               	movlb	15	; () banked
  2271  007A9A  6F3C               	movwf	60,b	;volatile
  2272                           
  2273                           ; BSR set to: 15
  2274                           ;DCMotor.c: 29: INTCON2bits.nRBPU = 0x01;
  2275  007A9C  8EF1               	bsf	intcon2,7,c	;volatile
  2276                           
  2277                           ; BSR set to: 15
  2278  007A9E  0012               	return	
  2279  007AA0                     __end_of_EPWM_Port_Init:
  2280                           	opt stack 0
  2281                           prodl	equ	0xFF3
  2282                           intcon2	equ	0xFF1
  2283                           wreg	equ	0xFE8
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _EPWM2_Initialize *****************
  2287 ;; Defined at:
  2288 ;;		line 104 in file "../DCMotor.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg, status,2
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2302 ;;      Params:         0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text19
  2316  0078BE                     __ptext19:
  2317                           	opt stack 0
  2318  0078BE                     _EPWM2_Initialize:
  2319                           	opt stack 30
  2320                           
  2321                           ;DCMotor.c: 109: CCP2CON = 0xBC;
  2322                           
  2323                           ; BSR set to: 15
  2324                           ;incstack = 0
  2325  0078BE  0EBC               	movlw	188
  2326  0078C0  6E66               	movwf	3942,c	;volatile
  2327                           
  2328                           ;DCMotor.c: 112: ECCP2AS = 0x00;
  2329  0078C2  0E00               	movlw	0
  2330  0078C4  6E64               	movwf	3940,c	;volatile
  2331                           
  2332                           ;DCMotor.c: 115: PWM2CON = 0x80;
  2333  0078C6  0E80               	movlw	128
  2334  0078C8  6E65               	movwf	3941,c	;volatile
  2335                           
  2336                           ;DCMotor.c: 118: PSTR2CON = 0x00;
  2337  0078CA  0E00               	movlw	0
  2338  0078CC  6E63               	movwf	3939,c	;volatile
  2339                           
  2340                           ;DCMotor.c: 121: CCPR2L = 0x7F;
  2341  0078CE  0E7F               	movlw	127
  2342  0078D0  6E67               	movwf	3943,c	;volatile
  2343                           
  2344                           ;DCMotor.c: 124: CCPR2H = 0x00;
  2345  0078D2  0E00               	movlw	0
  2346  0078D4  6E68               	movwf	3944,c	;volatile
  2347                           
  2348                           ;DCMotor.c: 127: CCPTMRS0bits.C2TSEL = 0x1;
  2349  0078D6  010F               	movlb	15	; () banked
  2350  0078D8  5149               	movf	73,w,b	;volatile
  2351  0078DA  0BE7               	andlw	-25
  2352  0078DC  0908               	iorlw	8
  2353  0078DE  010F               	movlb	15	; () banked
  2354  0078E0  6F49               	movwf	73,b	;volatile
  2355                           
  2356                           ;DCMotor.c: 130: CCP2CON = 0b01001100;
  2357  0078E2  0E4C               	movlw	76
  2358  0078E4  6E66               	movwf	3942,c	;volatile
  2359                           
  2360                           ; BSR set to: 15
  2361  0078E6  0012               	return	
  2362  0078E8                     __end_of_EPWM2_Initialize:
  2363                           	opt stack 0
  2364                           prodl	equ	0xFF3
  2365                           intcon2	equ	0xFF1
  2366                           wreg	equ	0xFE8
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _EPWM1_Initialize *****************
  2370 ;; Defined at:
  2371 ;;		line 33 in file "../DCMotor.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;		None               void
  2378 ;; Registers used:
  2379 ;;		wreg, status,2
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2385 ;;      Params:         0       0       0       0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text20
  2399  007940                     __ptext20:
  2400                           	opt stack 0
  2401  007940                     _EPWM1_Initialize:
  2402                           	opt stack 30
  2403                           
  2404                           ;DCMotor.c: 38: CCP3CON = 0xBC;
  2405                           
  2406                           ; BSR set to: 15
  2407                           ;incstack = 0
  2408  007940  0EBC               	movlw	188
  2409  007942  010F               	movlb	15	; () banked
  2410  007944  6F5D               	movwf	93,b	;volatile
  2411                           
  2412                           ;DCMotor.c: 41: ECCP3AS = 0x00;
  2413  007946  0E00               	movlw	0
  2414  007948  010F               	movlb	15	; () banked
  2415  00794A  6F5B               	movwf	91,b	;volatile
  2416                           
  2417                           ;DCMotor.c: 44: PWM3CON = 0x80;
  2418  00794C  0E80               	movlw	128
  2419  00794E  010F               	movlb	15	; () banked
  2420  007950  6F5C               	movwf	92,b	;volatile
  2421                           
  2422                           ;DCMotor.c: 47: PSTR3CON = 0x00;
  2423  007952  0E00               	movlw	0
  2424  007954  010F               	movlb	15	; () banked
  2425  007956  6F5A               	movwf	90,b	;volatile
  2426                           
  2427                           ;DCMotor.c: 50: CCPR3L = 0x7F;
  2428  007958  0E7F               	movlw	127
  2429  00795A  010F               	movlb	15	; () banked
  2430  00795C  6F5E               	movwf	94,b	;volatile
  2431                           
  2432                           ;DCMotor.c: 53: CCPR3H = 0x00;
  2433  00795E  0E00               	movlw	0
  2434  007960  010F               	movlb	15	; () banked
  2435  007962  6F5F               	movwf	95,b	;volatile
  2436                           
  2437                           ;DCMotor.c: 56: CCPTMRS0bits.C3TSEL = 0x0;
  2438  007964  0E3F               	movlw	-193
  2439  007966  010F               	movlb	15	; () banked
  2440  007968  1749               	andwf	73,f,b	;volatile
  2441                           
  2442                           ;DCMotor.c: 59: CCP3CON = 0b01001100;
  2443  00796A  0E4C               	movlw	76
  2444  00796C  010F               	movlb	15	; () banked
  2445  00796E  6F5D               	movwf	93,b	;volatile
  2446                           
  2447                           ; BSR set to: 15
  2448  007970  0012               	return	
  2449  007972                     __end_of_EPWM1_Initialize:
  2450                           	opt stack 0
  2451  0000                     prodl	equ	0xFF3
  2452                           intcon2	equ	0xFF1
  2453                           wreg	equ	0xFE8
  2454                           status	equ	0xFD8
  2455                           prodl	equ	0xFF3
  2456                           intcon2	equ	0xFF1
  2457                           wreg	equ	0xFE8
  2458                           status	equ	0xFD8
  2459                           
  2460                           	psect	rparam
  2461  0000                     prodl	equ	0xFF3
  2462                           intcon2	equ	0xFF1
  2463                           wreg	equ	0xFE8
  2464                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EPWM1_LoadDutyValue
    _main->_EPWM2_LoadDutyValue
    _lineSensor_isWhiteLine1->_lineSensor_read
    _Switch_Direction2->_EPWM2_LoadDutyValue
    _EPWM2_LoadDutyValue->___fttol
    _Switch_Direction1->_EPWM1_LoadDutyValue
    _EPWM1_LoadDutyValue->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _LCD_init->_place_lcd_cursor

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   15754
                                             48 COMRAM     1     1      0
                   _EPWM1_Initialize
                _EPWM1_LoadDutyValue
                   _EPWM2_Initialize
                _EPWM2_LoadDutyValue
                     _EPWM_Port_Init
                           _LCD_init
                      _LCD_writeChar
                  _Switch_Direction1
                  _Switch_Direction2
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _lineSensor_init
            _lineSensor_isWhiteLine1
                   _place_lcd_cursor
 ---------------------------------------------------------------------------------
 (1) _lineSensor_isWhiteLine1                              1     1      0     116
                                              2 COMRAM     1     1      0
                    _lineSensor_read
 ---------------------------------------------------------------------------------
 (2) _lineSensor_read                                      2     0      2     101
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lineSensor_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch_Direction2                                    0     0      0    3699
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  6     4      2    3699
                                             42 COMRAM     6     4      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _Switch_Direction1                                    0     0      0    3699
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  6     4      2    3699
                                             42 COMRAM     6     4      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     251
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    1790
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    1484
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _LCD_writeChar                                        4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     406
                                              4 COMRAM     1     1      0
                         _Delay100ms
                   _place_lcd_cursor
 ---------------------------------------------------------------------------------
 (1) _place_lcd_cursor                                     4     3      1     376
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Delay100ms                                           3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_Port_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_Initialize
   _EPWM1_LoadDutyValue
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _EPWM2_Initialize
   _EPWM2_LoadDutyValue
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _EPWM_Port_Init
   _LCD_init
     _Delay100ms
     _place_lcd_cursor
   _LCD_writeChar
   _Switch_Direction1
     _EPWM1_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _Switch_Direction2
     _EPWM2_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _TMR2_Initialize
   _TMR4_Initialize
   _lineSensor_init
   _lineSensor_isWhiteLine1
     _lineSensor_read
   _place_lcd_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      33       1       53.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33       9        0.0%
DATA                 0      0      33      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon May 04 10:24:43 2015

      __size_of_EPWM2_LoadDutyValue 0080                                  u81 7CF6  
                      __CFG_CP0$OFF 000000                        __CFG_CP1$OFF 000000  
                      __CFG_CP2$OFF 000000                        __CFG_CP3$OFF 000000  
                       __CFG_LVP$ON 000000                                 l303 793C  
                               l297 78B0                                 l900 7C5C  
                               l910 7CB8                                 l902 7C66  
                               l912 7CC2                                 l904 7C84  
                               l908 7C9A                                 l932 7D0C  
                               l952 7D64                                 l962 7D8C  
                               l938 7D32                                 l956 7D74  
                               l982 79D0                                 l966 7D9C  
                               l896 7C4E                                 l992 7E00  
                      __CFG_CPB$OFF 000000                                 u101 7D1C  
                               u151 7DE6                                 u170 7E1E  
                               _PR2 000FBB                                 u407 7F34  
                               u175 7E16                                 _PR4 000F52  
                               u417 7F50                        __CFG_CPD$OFF 000000  
                               u427 7F78                                 u437 7F9E  
                               u447 7FC4                                 u367 7C32  
                               u457 7FEA                                 u377 79A0  
                               u467 7A38                                 u387 7EFC  
                               u477 7906                                 u397 7F18  
                   _TMR2_Initialize 784C                                 wreg 000FE8  
          __end_of_EPWM2_Initialize 78E8                          _Delay100ms 78E8  
                              l1010 7E6C                                l1020 7E94  
                              l1022 7EA0                                l1014 7E7C  
                              l1024 7EA4                                l1028 7EBA  
                              l1310 7C0A                                l1316 7C26  
                              l1318 7C2C                                _ADON 007E10  
                              _LATA 000F89                                _LATB 000F8A  
                              _LATC 000F8B                                _LATD 000F8C  
                              _LATE 000F8D                                _TMR2 000FBC  
                              _TMR4 000F53                                _WPUB 000F61  
                              _main 7BA6                        ___ftpack@arg 0001  
                              _yPos 0032                        ___ftpack@exp 0004  
                     __CFG_BORV$190 000000                                prodl 000FF3  
                              start 0000                       __CFG_IESO$OFF 000000  
             ??_EPWM1_LoadDutyValue 002D                        ___ftmul@cntr 001A  
                      ___ftmul@sign 001B                        ___fttol@exp1 002A  
                      ___fttol@lval 0026                    __end_of_LCD_init 8000  
                             ?_main 0001                     __end_of___ftmul 7DD6  
                   __end_of___fttol 7ECC                               _T2CON 000FBA  
                             _T4CON 000F51                               _PORTC 000F82  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TRISE 000F96                       __CFG_WRT0$OFF 000000  
                   _TMR4_Initialize 7888                       __CFG_WRT1$OFF 000000  
                     __CFG_WRT2$OFF 000000                       __CFG_WRT3$OFF 000000  
                    __CFG_EBTR0$OFF 000000                      __CFG_FCMEN$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                    __CFG_EBTR3$OFF 000000                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
            __size_of_LCD_writeChar 003A                      __CFG_EBTRB$OFF 000000  
                     ___awtoft@sign 000C                  __CFG_MCLRE$EXTMCLR 000000  
                     ___ftpack@sign 0005             __end_of_lineSensor_init 7842  
           __end_of_lineSensor_read 78BE                               status 000FD8  
                    __CFG_HFOFST$ON 000000                      __CFG_FOSC$HSHP 000000  
                    __CFG_PBADEN$ON 000000                     __initialization 7842  
                      __end_of_main 7C3E             __end_of_TMR2_Initialize 785C  
           __size_of_EPWM_Port_Init 005E                              ??_main 0031  
                     ___fttol@sign1 0025                       __activetblptr 000000  
           _lineSensor_isWhiteLine1 7914                         ?_Delay100ms 0001  
                            _ADCON0 000FC2                              _ADCON2 000FC0  
                            _ADRESL 000FC3                              _CCPR2H 000F68  
                            _CCPR3H 000F5F                              _CCPR2L 000F67  
                            _CCPR3L 000F5E                   place_lcd_cursor@x 0003  
                 place_lcd_cursor@y 0001                    __end_of___awtoft 79F4  
                            _ANSELA 000F38                              _ANSELB 000F39  
                            _ANSELC 000F3A                              _ANSELD 000F3B  
                            _ANSELE 000F3C                    __end_of___ftpack 7CE6  
                            _GODONE 007E11                      __CFG_WDTEN$OFF 000000  
                    __CFG_XINST$OFF 000000                       _LCD_writeChar 7972  
                      _CCPTMRS0bits 000F49                      __CFG_STVREN$ON 000000  
                         ??___ftmul 0013                           ??___fttol 0020  
           __end_of_TMR4_Initialize 78A0               ___ftmul@f3_as_product 0016  
               _EPWM2_LoadDutyValue 7AA0                    ?_lineSensor_init 0001  
                  ?_lineSensor_read 0001                          __accesstop 0060  
           __end_of__initialization 7846                           ?_LCD_init 0001  
                        ___awtoft@c 0009                      ?_LCD_writeChar 0001  
         __size_of_place_lcd_cursor 004E                          ___ftmul@f1 000D  
                        ___ftmul@f2 0010                   ?_EPWM1_Initialize 0001  
                        ___fttol@f1 001C                      __pcstackCOMRAM 0001  
              ?_EPWM2_LoadDutyValue 002B                 __size_of_Delay100ms 002C  
                ??_EPWM1_Initialize 0001                    ?_TMR2_Initialize 0001  
         ??_lineSensor_isWhiteLine1 0003                   ?_EPWM2_Initialize 0001  
                ??_EPWM2_Initialize 0001                     __CFG_PLLCFG$OFF 000000  
                        ??_LCD_init 0005                  __CFG_CCP2MX$PORTC1 000000  
             ??_EPWM2_LoadDutyValue 002D                  __CFG_CCP3MX$PORTB5 000000  
                           _CCP2CON 000F66                             _CCP3CON 000F5D  
                           _ECCP2AS 000F64                             _ECCP3AS 000F5B  
                    _EPWM_Port_Init 7A42                    ?_TMR4_Initialize 0001  
                         ?___awtoft 0009                           ?___ftpack 0001  
                           _PWM2CON 000F65                             _PWM3CON 000F5C  
                           _SSP2ADD 000F6E                             _SSP2BUF 000F6F  
       __end_of_EPWM1_LoadDutyValue 7BA6     __end_of_lineSensor_isWhiteLine1 7940  
                   ??_LCD_writeChar 0001                     __CFG_PWRTEN$OFF 000000  
                           __Hparam 0000                             __Lparam 0000  
            __end_of_EPWM_Port_Init 7AA0                             ___ftmul 7CE6  
                           ___fttol 7DD6                             __pcinit 7842  
                        ??___awtoft 000C                          ??___ftpack 0006  
                           __ramtop 0600                             __ptext0 7BA6  
                           __ptext1 7914                             __ptext2 78A0  
                           __ptext3 783C                             __ptext4 7888  
                           __ptext5 784C                             __ptext6 785C  
                           __ptext7 7AA0                             __ptext8 7870  
                           __ptext9 7B20                           _T2CONbits 000FBA  
                         _T4CONbits 000F51                        ??_Delay100ms 0001  
              end_of_initialization 7846              lineSensor_read@Channel 0001  
                  _place_lcd_cursor 79F4                     ?_EPWM_Port_Init 0001  
                __end_of_Delay100ms 7914                  LCD_writeChar@lower 0003  
                LCD_writeChar@upper 0002                           _PORTCbits 000F82  
                         _TRISCbits 000F94                           _TRISDbits 000F95  
                 __size_of_LCD_init 0134                         ___ftmul@exp 0019  
          place_lcd_cursor@position 0004                 start_initialization 7842  
         __size_of_EPWM1_Initialize 0032        EPWM1_LoadDutyValue@dutyValue 002B  
         __size_of_EPWM2_Initialize 002A            __size_of_lineSensor_init 0006  
          __size_of_lineSensor_read 001E                   __size_of___awtoft 0048  
                 __size_of___ftpack 00A8                         __pbssCOMRAM 0032  
          __size_of_TMR2_Initialize 0010         __end_of_EPWM2_LoadDutyValue 7B20  
          ?_lineSensor_isWhiteLine1 0001                            ?___ftmul 000D  
                          ?___fttol 001C                   _Switch_Direction1 7870  
                 _Switch_Direction2 785C                    __CFG_PRICLKEN$ON 000000  
                ?_Switch_Direction1 0001                  ?_Switch_Direction2 0001  
          __end_of_place_lcd_cursor 7A42                 ??_Switch_Direction1 0031  
               ??_Switch_Direction2 0031            __size_of_TMR4_Initialize 0018  
                       Delay100ms@i 0002                            _LATCbits 000F8B  
                          _LCD_init 7ECC                    ??_EPWM_Port_Init 0001  
             __end_of_LCD_writeChar 79AC                            _PIR1bits 000F9E  
                          _PIR5bits 000F7E        __size_of_EPWM1_LoadDutyValue 0086  
         __end_of_Switch_Direction1 7888           __end_of_Switch_Direction2 7870  
                  __CFG_WDTPS$32768 000000                   LCD_writeChar@data 0004  
                          _SSP2CON1 000F6C                            _SSP2CON2 000F6B  
                          _PSTR2CON 000F63                            _PSTR3CON 000F5A  
                          _SSP2STAT 000F6D                   ??_lineSensor_init 0001  
                 ??_lineSensor_read 0003                    _EPWM1_Initialize 7940  
                       _INTCON2bits 000FF1  lineSensor_isWhiteLine1@isWhiteLine 0003  
                 ??_TMR2_Initialize 0001                            __Hrparam 0000  
                  _EPWM2_Initialize 78BE                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000                   __CFG_P2BMX$PORTD2 000000  
                  __size_of___ftmul 00F0                    __size_of___fttol 00F6  
                          ___awtoft 79AC                            ___ftpack 7C3E  
                        _ANSELCbits 000F3A                            __ptext10 7DD6  
                          __ptext11 7CE6                            __ptext20 7940  
                          __ptext12 79AC                            __ptext13 7C3E  
                          __ptext14 7972                            __ptext15 7ECC  
                          __ptext16 79F4                            __ptext17 78E8  
                          __ptext18 7A42                            __ptext19 78BE  
                      _SSP2CON1bits 000F6C                        _SSP2CON2bits 000F6B  
                 ??_TMR4_Initialize 0001                       __size_of_main 0098  
        __size_of_Switch_Direction1 0018          __size_of_Switch_Direction2 0014  
      EPWM2_LoadDutyValue@dutyValue 002B                   __CFG_T3CMX$PORTC0 000000  
               _EPWM1_LoadDutyValue 7B20                   ?_place_lcd_cursor 0001  
  __size_of_lineSensor_isWhiteLine1 002C                  ??_place_lcd_cursor 0002  
                   _lineSensor_init 783C                     _lineSensor_read 78A0  
          __end_of_EPWM1_Initialize 7972                ?_EPWM1_LoadDutyValue 002B  
