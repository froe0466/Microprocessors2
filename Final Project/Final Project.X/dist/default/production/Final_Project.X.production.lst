

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri May 08 12:30:16 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataCOMRAM
    48  00118E                     __pidataCOMRAM:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _whiteLineThreshold
    52  00118E  7D                 	db	125
    53  0000                     _ADCON0	set	4034
    54  0000                     _ADCON2	set	4032
    55  0000                     _ADRESL	set	4035
    56  0000                     _ANSELA	set	3896
    57  0000                     _ANSELB	set	3897
    58  0000                     _ANSELCbits	set	3898
    59  0000                     _ANSELD	set	3899
    60  0000                     _ANSELDbits	set	3899
    61  0000                     _ANSELE	set	3900
    62  0000                     _CCP2CON	set	3942
    63  0000                     _CCP3CON	set	3933
    64  0000                     _CCPR2H	set	3944
    65  0000                     _CCPR2L	set	3943
    66  0000                     _CCPR3H	set	3935
    67  0000                     _CCPR3L	set	3934
    68  0000                     _CCPTMRS0bits	set	3913
    69  0000                     _ECCP2AS	set	3940
    70  0000                     _ECCP3AS	set	3931
    71  0000                     _INTCON2bits	set	4081
    72  0000                     _LATA	set	3977
    73  0000                     _LATAbits	set	3977
    74  0000                     _LATB	set	3978
    75  0000                     _LATC	set	3979
    76  0000                     _LATCbits	set	3979
    77  0000                     _LATD	set	3980
    78  0000                     _LATDbits	set	3980
    79  0000                     _LATE	set	3981
    80  0000                     _PIR1bits	set	3998
    81  0000                     _PIR5bits	set	3966
    82  0000                     _PORTAbits	set	3968
    83  0000                     _PORTC	set	3970
    84  0000                     _PORTCbits	set	3970
    85  0000                     _PR2	set	4027
    86  0000                     _PR4	set	3922
    87  0000                     _PSTR2CON	set	3939
    88  0000                     _PSTR3CON	set	3930
    89  0000                     _PWM2CON	set	3941
    90  0000                     _PWM3CON	set	3932
    91  0000                     _SSP2ADD	set	3950
    92  0000                     _SSP2BUF	set	3951
    93  0000                     _SSP2CON1	set	3948
    94  0000                     _SSP2CON1bits	set	3948
    95  0000                     _SSP2CON2	set	3947
    96  0000                     _SSP2CON2bits	set	3947
    97  0000                     _SSP2STAT	set	3949
    98  0000                     _T2CON	set	4026
    99  0000                     _T2CONbits	set	4026
   100  0000                     _T4CON	set	3921
   101  0000                     _T4CONbits	set	3921
   102  0000                     _T6CON	set	3914
   103  0000                     _TMR2	set	4028
   104  0000                     _TMR4	set	3923
   105  0000                     _TMR6	set	3916
   106  0000                     _TRISA	set	3986
   107  0000                     _TRISAbits	set	3986
   108  0000                     _TRISB	set	3987
   109  0000                     _TRISCbits	set	3988
   110  0000                     _TRISD	set	3989
   111  0000                     _TRISDbits	set	3989
   112  0000                     _TRISE	set	3990
   113  0000                     _WPUB	set	3937
   114  0000                     _ADON	set	32272
   115  0000                     _GODONE	set	32273
   116                           
   117                           	psect	smallconst
   118  000600                     __psmallconst:
   119                           	opt stack 0
   120  000600  00                 	db	0
   121  000601                     __stringdata:
   122                           	opt stack 0
   123  000601                     STR_1:
   124  000601  53                 	db	83	;'S'
   125  000602  74                 	db	116	;'t'
   126  000603  61                 	db	97	;'a'
   127  000604  72                 	db	114	;'r'
   128  000605  74                 	db	116	;'t'
   129  000606  00                 	db	0
   130  000607                     __end_of__stringdata:
   131                           	opt stack 0
   132                           
   133                           ; #config settings
   134  000607  00                 	db	0	; dummy byte at the end
   135  0000                     
   136                           	psect	cinit
   137  0010AE                     __pcinit:
   138                           	opt stack 0
   139  0010AE                     start_initialization:
   140                           	opt stack 0
   141  0010AE                     __initialization:
   142                           	opt stack 0
   143                           
   144                           ; Clear objects allocated to COMRAM (2 bytes)
   145  0010AE  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   146  0010B0  6A36               	clrf	__pbssCOMRAM& (0+255),c
   147                           
   148                           ; Initialize objects allocated to COMRAM (1 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  0010B2  0E8E               	movlw	low __pidataCOMRAM
   151  0010B4  6EF6               	movwf	tblptrl,c
   152  0010B6  0E11               	movlw	high __pidataCOMRAM
   153  0010B8  6EF7               	movwf	tblptrh,c
   154  0010BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  0010BC  6EF8               	movwf	tblptru,c
   156  0010BE  0009               	tblrd		*+	;fetch initializer
   157  0010C0  CFF5 F038          	movff	tablat,__pdataCOMRAM
   158  0010C4                     end_of_initialization:
   159                           	opt stack 0
   160  0010C4                     __end_of__initialization:
   161                           	opt stack 0
   162  0010C4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  0010C6  6EF8               	movwf	tblptru,c
   164  0010C8  0E06               	movlw	high __Lsmallconst
   165  0010CA  6EF7               	movwf	tblptrh,c
   166  0010CC  0100               	movlb	0
   167  0010CE  EF1D  F005         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           
   173                           	psect	bssCOMRAM
   174  000036                     __pbssCOMRAM:
   175                           	opt stack 0
   176  000036                     _yPos:
   177                           	opt stack 0
   178  000036                     	ds	2
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           
   184                           	psect	dataCOMRAM
   185  000038                     __pdataCOMRAM:
   186                           	opt stack 0
   187  000038                     _whiteLineThreshold:
   188                           	opt stack 0
   189  000038                     	ds	1
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           
   195                           	psect	cstackCOMRAM
   196  000001                     __pcstackCOMRAM:
   197                           	opt stack 0
   198  000001                     ??_LCD_writeChar:
   199  000001                     ??_Delay100ms:
   200  000001                     ??_i2c_Wait:
   201  000001                     ?___lwmod:
   202                           	opt stack 0
   203  000001                     ?___ftpack:
   204                           	opt stack 0
   205  000001                     place_lcd_cursor@y:
   206                           	opt stack 0
   207  000001                     ___lwmod@dividend:
   208                           	opt stack 0
   209  000001                     ___ftpack@arg:
   210                           	opt stack 0
   211                           
   212                           ; 3 bytes @ 0x0
   213  000001                     	ds	1
   214  000002                     ??_place_lcd_cursor:
   215  000002                     LCD_writeChar@upper:
   216                           	opt stack 0
   217  000002                     i2c_Write@data:
   218                           	opt stack 0
   219  000002                     Delay100ms@i:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x1
   223  000002                     	ds	1
   224  000003                     LCD_writeChar@lower:
   225                           	opt stack 0
   226  000003                     place_lcd_cursor@x:
   227                           	opt stack 0
   228  000003                     i2c_Command@reg:
   229                           	opt stack 0
   230  000003                     ___lwmod@divisor:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x2
   234  000003                     	ds	1
   235  000004                     LCD_writeChar@data:
   236                           	opt stack 0
   237  000004                     place_lcd_cursor@position:
   238                           	opt stack 0
   239  000004                     i2c_Command@command:
   240                           	opt stack 0
   241  000004                     ___ftpack@exp:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x3
   245  000004                     	ds	1
   246  000005                     ??_LCD_init:
   247  000005                     ??_i2c_Command:
   248  000005                     ___ftpack@sign:
   249                           	opt stack 0
   250  000005                     ___lwmod@counter:
   251                           	opt stack 0
   252  000005                     LCD_write@data:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x4
   256  000005                     	ds	1
   257  000006                     ??___ftpack:
   258  000006                     ?___lwdiv:
   259                           	opt stack 0
   260  000006                     i2c_Command@deviceAddress:
   261                           	opt stack 0
   262  000006                     ___lwdiv@dividend:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x5
   266  000006                     	ds	1
   267  000007                     ??_LCD_write:
   268                           
   269                           ; 0 bytes @ 0x6
   270  000007                     	ds	1
   271  000008                     ___lwdiv@divisor:
   272                           	opt stack 0
   273                           
   274                           ; 2 bytes @ 0x7
   275  000008                     	ds	1
   276  000009                     ?___awtoft:
   277                           	opt stack 0
   278  000009                     LCD_write@i:
   279                           	opt stack 0
   280  000009                     ___awtoft@c:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x8
   284  000009                     	ds	1
   285  00000A                     ___lwdiv@quotient:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x9
   289  00000A                     	ds	2
   290  00000C                     ___awtoft@sign:
   291                           	opt stack 0
   292  00000C                     ___lwdiv@counter:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0xB
   296  00000C                     	ds	1
   297  00000D                     ?___ftmul:
   298                           	opt stack 0
   299  00000D                     i2c_Read@reg:
   300                           	opt stack 0
   301  00000D                     ___ftmul@f1:
   302                           	opt stack 0
   303                           
   304                           ; 3 bytes @ 0xC
   305  00000D                     	ds	1
   306  00000E                     _i2c_Read$1987:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0xD
   310  00000E                     	ds	2
   311  000010                     i2c_Read@rangeInCm:
   312                           	opt stack 0
   313  000010                     ___ftmul@f2:
   314                           	opt stack 0
   315                           
   316                           ; 3 bytes @ 0xF
   317  000010                     	ds	2
   318  000012                     i2c_Read@rangeInCm1:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x11
   322  000012                     	ds	1
   323  000013                     ??___ftmul:
   324                           
   325                           ; 0 bytes @ 0x12
   326  000013                     	ds	1
   327  000014                     i2c_Read@deviceAddress:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x13
   331  000014                     	ds	1
   332  000015                     i2c_Read@range:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x14
   336  000015                     	ds	1
   337  000016                     ___ftmul@f3_as_product:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0x15
   341  000016                     	ds	3
   342  000019                     ___ftmul@exp:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x18
   346  000019                     	ds	1
   347  00001A                     ___ftmul@cntr:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x19
   351  00001A                     	ds	1
   352  00001B                     ___ftmul@sign:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x1A
   356  00001B                     	ds	1
   357  00001C                     ?___fttol:
   358                           	opt stack 0
   359  00001C                     ___fttol@f1:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x1B
   363  00001C                     	ds	4
   364  000020                     ??___fttol:
   365                           
   366                           ; 0 bytes @ 0x1F
   367  000020                     	ds	5
   368  000025                     ___fttol@sign1:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x24
   372  000025                     	ds	1
   373  000026                     ___fttol@lval:
   374                           	opt stack 0
   375                           
   376                           ; 4 bytes @ 0x25
   377  000026                     	ds	4
   378  00002A                     ___fttol@exp1:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x29
   382  00002A                     	ds	1
   383  00002B                     EPWM1_LoadDutyValue@dutyValue:
   384                           	opt stack 0
   385  00002B                     EPWM2_LoadDutyValue@dutyValue:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x2A
   389  00002B                     	ds	2
   390  00002D                     ??_EPWM1_LoadDutyValue:
   391  00002D                     ??_EPWM2_LoadDutyValue:
   392                           
   393                           ; 0 bytes @ 0x2C
   394  00002D                     	ds	4
   395  000031                     ??_Turn_Right:
   396  000031                     ??_Turn_Left:
   397  000031                     Drive_Forward@speed:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x30
   401  000031                     	ds	1
   402  000032                     Turn_Right@speed:
   403                           	opt stack 0
   404  000032                     Turn_Left@speed:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x31
   408  000032                     	ds	1
   409  000033                     ??_Drive_Forward:
   410  000033                     Turn_Right@i:
   411                           	opt stack 0
   412  000033                     Turn_Left@i:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x32
   416  000033                     	ds	1
   417  000034                     Drive_Forward@distance:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x33
   421  000034                     	ds	1
   422  000035                     main@readResult:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x34
   426  000035                     	ds	1
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   434 ;;
   435 ;; *************** function _main *****************
   436 ;; Defined at:
   437 ;;		line 17 in file "../Driver.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  readResult      1   52[COMRAM] unsigned char 
   442 ;; Return value:  Size  Location     Type
   443 ;;		None               void
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   451 ;;      Params:         0       0       0       0       0       0       0
   452 ;;      Locals:         1       0       0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0       0       0
   454 ;;      Totals:         1       0       0       0       0       0       0
   455 ;;Total ram usage:        1 bytes
   456 ;; Hardware stack levels required when called:    5
   457 ;; This function calls:
   458 ;;		_Drive_Forward
   459 ;;		_EPWM1_Initialize
   460 ;;		_EPWM2_Initialize
   461 ;;		_EPWM_Port_Init
   462 ;;		_LCD_init
   463 ;;		_LCD_write
   464 ;;		_LCD_writeChar
   465 ;;		_Stop
   466 ;;		_TMR2_Initialize
   467 ;;		_TMR4_Initialize
   468 ;;		_Turn_Left
   469 ;;		_Turn_Right
   470 ;;		_i2c_Command
   471 ;;		_i2c_Init
   472 ;;		_i2c_Port_Init
   473 ;;		_i2c_Read
   474 ;;		_lineSensor_init
   475 ;;		_place_lcd_cursor
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text0
   482  000A3A                     __ptext0:
   483                           	opt stack 0
   484  000A3A                     _main:
   485                           	opt stack 26
   486                           
   487                           ;Driver.c: 20: EPWM_Port_Init();
   488                           
   489                           ;incstack = 0
   490  000A3A  EC94  F006         	call	_EPWM_Port_Init	;wreg free
   491                           
   492                           ;Driver.c: 23: EPWM1_Initialize();
   493  000A3E  EC13  F008         	call	_EPWM1_Initialize	;wreg free
   494                           
   495                           ;Driver.c: 24: TMR2_Initialize();
   496  000A42  ECA4  F008         	call	_TMR2_Initialize	;wreg free
   497                           
   498                           ;Driver.c: 27: EPWM2_Initialize();
   499  000A46  EC42  F008         	call	_EPWM2_Initialize	;wreg free
   500                           
   501                           ;Driver.c: 28: TMR4_Initialize();
   502  000A4A  EC87  F008         	call	_TMR4_Initialize	;wreg free
   503                           
   504                           ;Driver.c: 30: Stop();
   505  000A4E  EC69  F008         	call	_Stop	;wreg free
   506                           
   507                           ;Driver.c: 33: LCD_init();
   508  000A52  EC04  F003         	call	_LCD_init	;wreg free
   509                           
   510                           ;Driver.c: 34: place_lcd_cursor(0,0);
   511  000A56  0E00               	movlw	0
   512  000A58  6E01               	movwf	place_lcd_cursor@y,c
   513  000A5A  0E00               	movlw	0
   514  000A5C  EC44  F007         	call	_place_lcd_cursor
   515                           
   516                           ;Driver.c: 37: i2c_Port_Init();
   517  000A60  EC93  F008         	call	_i2c_Port_Init	;wreg free
   518                           
   519                           ;Driver.c: 38: i2c_Init();
   520  000A64  EC7B  F008         	call	_i2c_Init	;wreg free
   521                           
   522                           ;Driver.c: 41: lineSensor_init();
   523  000A68  ECC4  F008         	call	_lineSensor_init	;wreg free
   524                           
   525                           ;Driver.c: 44: LCD_write("Start");
   526  000A6C  0E06               	movlw	high STR_1
   527  000A6E  6E06               	movwf	LCD_write@data+1,c
   528  000A70  0E01               	movlw	low STR_1
   529  000A72  6E05               	movwf	LCD_write@data,c
   530  000A74  EC12  F006         	call	_LCD_write	;wreg free
   531                           
   532                           ;Driver.c: 46: Drive_Forward(100,45);
   533  000A78  0E00               	movlw	0
   534  000A7A  6E32               	movwf	Drive_Forward@speed+1,c
   535  000A7C  0E2D               	movlw	45
   536  000A7E  6E31               	movwf	Drive_Forward@speed,c
   537  000A80  0E64               	movlw	100
   538  000A82  ECD5  F007         	call	_Drive_Forward
   539                           
   540                           ;Driver.c: 48: Stop();
   541  000A86  EC69  F008         	call	_Stop	;wreg free
   542                           
   543                           ;Driver.c: 50: Turn_Left(60);
   544  000A8A  0E3C               	movlw	60
   545  000A8C  ECF0  F006         	call	_Turn_Left
   546                           
   547                           ;Driver.c: 52: Stop();
   548  000A90  EC69  F008         	call	_Stop	;wreg free
   549                           
   550                           ;Driver.c: 54: Turn_Right(60);
   551  000A94  0E3C               	movlw	60
   552  000A96  ECC3  F006         	call	_Turn_Right
   553  000A9A                     l1885:
   554                           
   555                           ;Driver.c: 58: {
   556                           ;Driver.c: 59: char readResult = 0;
   557  000A9A  0E00               	movlw	0
   558  000A9C  6E35               	movwf	main@readResult,c
   559                           
   560                           ;Driver.c: 62: i2c_Command(0xE0,0x00,0x51);
   561  000A9E  0E00               	movlw	0
   562  000AA0  6E03               	movwf	i2c_Command@reg,c
   563  000AA2  0E51               	movlw	81
   564  000AA4  6E04               	movwf	i2c_Command@command,c
   565  000AA6  0EE0               	movlw	224
   566  000AA8  EC6B  F007         	call	_i2c_Command
   567                           
   568                           ;Driver.c: 63: readResult = i2c_Read(0xE0,0x02);
   569  000AAC  0E02               	movlw	2
   570  000AAE  6E0D               	movwf	i2c_Read@reg,c
   571  000AB0  0EE0               	movlw	224
   572  000AB2  EC9E  F003         	call	_i2c_Read
   573  000AB6  6E35               	movwf	main@readResult,c
   574                           
   575                           ;Driver.c: 66: if(readResult > 15)
   576  000AB8  0E0F               	movlw	15
   577  000ABA  6435               	cpfsgt	main@readResult,c
   578  000ABC  D010               	goto	l1899
   579                           
   580                           ;Driver.c: 67: {
   581                           ;Driver.c: 68: place_lcd_cursor(8,1);
   582  000ABE  0E01               	movlw	1
   583  000AC0  6E01               	movwf	place_lcd_cursor@y,c
   584  000AC2  0E08               	movlw	8
   585  000AC4  EC44  F007         	call	_place_lcd_cursor
   586                           
   587                           ;Driver.c: 69: LCD_writeChar('T');
   588  000AC8  0E54               	movlw	84
   589  000ACA  ECF6  F007         	call	_LCD_writeChar
   590                           
   591                           ;Driver.c: 71: Drive_Forward(50,55);
   592  000ACE  0E00               	movlw	0
   593  000AD0  6E32               	movwf	Drive_Forward@speed+1,c
   594  000AD2  0E37               	movlw	55
   595  000AD4  6E31               	movwf	Drive_Forward@speed,c
   596  000AD6  0E32               	movlw	50
   597  000AD8  ECD5  F007         	call	_Drive_Forward
   598                           
   599                           ;Driver.c: 74: }
   600  000ADC  D7DE               	goto	l1885
   601  000ADE                     l1899:
   602                           
   603                           ;Driver.c: 75: else
   604                           ;Driver.c: 76: {
   605                           ;Driver.c: 77: place_lcd_cursor(8,1);
   606  000ADE  0E01               	movlw	1
   607  000AE0  6E01               	movwf	place_lcd_cursor@y,c
   608  000AE2  0E08               	movlw	8
   609  000AE4  EC44  F007         	call	_place_lcd_cursor
   610                           
   611                           ;Driver.c: 78: LCD_writeChar('F');
   612  000AE8  0E46               	movlw	70
   613  000AEA  ECF6  F007         	call	_LCD_writeChar
   614                           
   615                           ;Driver.c: 80: Turn_Left(55);
   616  000AEE  0E37               	movlw	55
   617  000AF0  ECF0  F006         	call	_Turn_Left
   618  000AF4  D7D2               	goto	l1885
   619  000AF6                     __end_of_main:
   620                           	opt stack 0
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           
   626 ;; *************** function _lineSensor_init *****************
   627 ;; Defined at:
   628 ;;		line 7 in file "../LineSensor.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;		None               void
   635 ;; Registers used:
   636 ;;		wreg, status,2
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   642 ;;      Params:         0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text1
   656  001188                     __ptext1:
   657                           	opt stack 0
   658  001188                     _lineSensor_init:
   659                           	opt stack 30
   660                           
   661                           ;LineSensor.c: 9: ADCON2=0b10001010;
   662                           
   663                           ;incstack = 0
   664  001188  0E8A               	movlw	138
   665  00118A  6EC0               	movwf	4032,c	;volatile
   666  00118C  0012               	return	
   667  00118E                     __end_of_lineSensor_init:
   668                           	opt stack 0
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           
   674 ;; *************** function _i2c_Read *****************
   675 ;; Defined at:
   676 ;;		line 118 in file "../i2c.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  deviceAddres    1    wreg     unsigned char 
   679 ;;  reg             1   12[COMRAM] unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  deviceAddres    1   19[COMRAM] unsigned char 
   682 ;;  range           2   20[COMRAM] unsigned int 
   683 ;;  rangeInCm1      2   17[COMRAM] unsigned int 
   684 ;;  rangeInCm       2   15[COMRAM] unsigned int 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      unsigned char 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   694 ;;      Params:         1       0       0       0       0       0       0
   695 ;;      Locals:         9       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0
   697 ;;      Totals:        10       0       0       0       0       0       0
   698 ;;Total ram usage:       10 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    2
   701 ;; This function calls:
   702 ;;		_LCD_writeChar
   703 ;;		___lwdiv
   704 ;;		___lwmod
   705 ;;		_i2c_Restart
   706 ;;		_i2c_Start
   707 ;;		_i2c_Stop
   708 ;;		_i2c_Wait
   709 ;;		_i2c_Write
   710 ;;		_place_lcd_cursor
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text2
   717  00073C                     __ptext2:
   718                           	opt stack 0
   719  00073C                     _i2c_Read:
   720                           	opt stack 28
   721                           
   722                           ;incstack = 0
   723                           ;i2c_Read@deviceAddress stored from wreg
   724  00073C  6E14               	movwf	i2c_Read@deviceAddress,c
   725                           
   726                           ;i2c.c: 120: unsigned int rangeInCm = 0;
   727  00073E  0E00               	movlw	0
   728  000740  6E11               	movwf	i2c_Read@rangeInCm+1,c
   729  000742  0E00               	movlw	0
   730  000744  6E10               	movwf	i2c_Read@rangeInCm,c
   731                           
   732                           ;i2c.c: 121: unsigned int rangeInCm1 = 0;
   733  000746  0E00               	movlw	0
   734  000748  6E13               	movwf	i2c_Read@rangeInCm1+1,c
   735  00074A  0E00               	movlw	0
   736  00074C  6E12               	movwf	i2c_Read@rangeInCm1,c
   737                           
   738                           ;i2c.c: 122: unsigned int range;
   739                           ;i2c.c: 125: i2c_Start();
   740  00074E  ECBE  F008         	call	_i2c_Start	;wreg free
   741                           
   742                           ;i2c.c: 126: i2c_Write(deviceAddress);
   743  000752  5014               	movf	i2c_Read@deviceAddress,w,c
   744  000754  ECB2  F008         	call	_i2c_Write
   745                           
   746                           ;i2c.c: 127: i2c_Wait();
   747  000758  EC9C  F008         	call	_i2c_Wait	;wreg free
   748                           
   749                           ;i2c.c: 128: i2c_Write(reg);
   750  00075C  500D               	movf	i2c_Read@reg,w,c
   751  00075E  ECB2  F008         	call	_i2c_Write
   752                           
   753                           ;i2c.c: 129: i2c_Restart();
   754  000762  ECAC  F008         	call	_i2c_Restart	;wreg free
   755                           
   756                           ;i2c.c: 130: i2c_Write(deviceAddress + 1);
   757  000766  2814               	incf	i2c_Read@deviceAddress,w,c
   758  000768  ECB2  F008         	call	_i2c_Write
   759                           
   760                           ;i2c.c: 131: i2c_Wait();
   761  00076C  EC9C  F008         	call	_i2c_Wait	;wreg free
   762                           
   763                           ;i2c.c: 134: SSP2CON2bits.RCEN = 1;
   764  000770  866B               	bsf	3947,3,c	;volatile
   765                           
   766                           ;i2c.c: 135: i2c_Wait();
   767  000772  EC9C  F008         	call	_i2c_Wait	;wreg free
   768                           
   769                           ;i2c.c: 136: rangeInCm = SSP2BUF;
   770  000776  CF6F F010          	movff	3951,i2c_Read@rangeInCm	;volatile
   771  00077A  6A11               	clrf	i2c_Read@rangeInCm+1,c
   772                           
   773                           ;i2c.c: 139: SSP2CON2bits.ACKDT = 0;
   774  00077C  9A6B               	bcf	3947,5,c	;volatile
   775                           
   776                           ;i2c.c: 140: SSP2CON2bits.ACKEN = 1;
   777  00077E  886B               	bsf	3947,4,c	;volatile
   778                           
   779                           ;i2c.c: 142: i2c_Wait();
   780  000780  EC9C  F008         	call	_i2c_Wait	;wreg free
   781                           
   782                           ;i2c.c: 145: SSP2CON2bits.RCEN = 1;
   783  000784  866B               	bsf	3947,3,c	;volatile
   784                           
   785                           ;i2c.c: 146: i2c_Wait();
   786  000786  EC9C  F008         	call	_i2c_Wait	;wreg free
   787                           
   788                           ;i2c.c: 148: rangeInCm1 = SSP2BUF;
   789  00078A  CF6F F012          	movff	3951,i2c_Read@rangeInCm1	;volatile
   790  00078E  6A13               	clrf	i2c_Read@rangeInCm1+1,c
   791                           
   792                           ;i2c.c: 151: SSP2CON2bits.ACKDT = 1;
   793  000790  8A6B               	bsf	3947,5,c	;volatile
   794                           
   795                           ;i2c.c: 152: SSP2CON2bits.ACKEN = 1;
   796  000792  886B               	bsf	3947,4,c	;volatile
   797                           
   798                           ;i2c.c: 154: i2c_Wait();
   799  000794  EC9C  F008         	call	_i2c_Wait	;wreg free
   800                           
   801                           ;i2c.c: 155: i2c_Stop();
   802  000798  ECB8  F008         	call	_i2c_Stop	;wreg free
   803                           
   804                           ;i2c.c: 157: range = rangeInCm<<8;
   805  00079C  5010               	movf	i2c_Read@rangeInCm,w,c
   806  00079E  6E16               	movwf	i2c_Read@range+1,c
   807  0007A0  6A15               	clrf	i2c_Read@range,c
   808                           
   809                           ;i2c.c: 158: range = range + rangeInCm1;
   810  0007A2  5012               	movf	i2c_Read@rangeInCm1,w,c
   811  0007A4  2415               	addwf	i2c_Read@range,w,c
   812  0007A6  6E15               	movwf	i2c_Read@range,c
   813  0007A8  5013               	movf	i2c_Read@rangeInCm1+1,w,c
   814  0007AA  2016               	addwfc	i2c_Read@range+1,w,c
   815  0007AC  6E16               	movwf	i2c_Read@range+1,c
   816                           
   817                           ;i2c.c: 161: place_lcd_cursor(0,1);
   818  0007AE  0E01               	movlw	1
   819  0007B0  6E01               	movwf	place_lcd_cursor@y,c
   820  0007B2  0E00               	movlw	0
   821  0007B4  EC44  F007         	call	_place_lcd_cursor
   822                           
   823                           ;i2c.c: 162: LCD_writeChar((range / 100) + 0x30);
   824  0007B8  C015  F006         	movff	i2c_Read@range,___lwdiv@dividend
   825  0007BC  C016  F007         	movff	i2c_Read@range+1,___lwdiv@dividend+1
   826  0007C0  0E00               	movlw	0
   827  0007C2  6E09               	movwf	___lwdiv@divisor+1,c
   828  0007C4  0E64               	movlw	100
   829  0007C6  6E08               	movwf	___lwdiv@divisor,c
   830  0007C8  EC1B  F007         	call	___lwdiv	;wreg free
   831  0007CC  5006               	movf	?___lwdiv,w,c
   832  0007CE  0F30               	addlw	48
   833  0007D0  ECF6  F007         	call	_LCD_writeChar
   834                           
   835                           ;i2c.c: 163: place_lcd_cursor(1,1);
   836  0007D4  0E01               	movlw	1
   837  0007D6  6E01               	movwf	place_lcd_cursor@y,c
   838  0007D8  0E01               	movlw	1
   839  0007DA  EC44  F007         	call	_place_lcd_cursor
   840                           
   841                           ;i2c.c: 164: LCD_writeChar(((range % 100) / 10) + 0x30);
   842  0007DE  0E00               	movlw	0
   843  0007E0  6E04               	movwf	___lwmod@divisor+1,c
   844  0007E2  0E64               	movlw	100
   845  0007E4  6E03               	movwf	___lwmod@divisor,c
   846  0007E6  C015  F001         	movff	i2c_Read@range,___lwmod@dividend
   847  0007EA  C016  F002         	movff	i2c_Read@range+1,___lwmod@dividend+1
   848  0007EE  ECB4  F007         	call	___lwmod	;wreg free
   849  0007F2  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   850  0007F6  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   851  0007FA  0E00               	movlw	0
   852  0007FC  6E09               	movwf	___lwdiv@divisor+1,c
   853  0007FE  0E0A               	movlw	10
   854  000800  6E08               	movwf	___lwdiv@divisor,c
   855  000802  EC1B  F007         	call	___lwdiv	;wreg free
   856  000806  5006               	movf	?___lwdiv,w,c
   857  000808  0F30               	addlw	48
   858  00080A  ECF6  F007         	call	_LCD_writeChar
   859                           
   860                           ;i2c.c: 165: place_lcd_cursor(2,1);
   861  00080E  0E01               	movlw	1
   862  000810  6E01               	movwf	place_lcd_cursor@y,c
   863  000812  0E02               	movlw	2
   864  000814  EC44  F007         	call	_place_lcd_cursor
   865                           
   866                           ;i2c.c: 166: LCD_writeChar(((range % 100) % 10) + 0x30);
   867  000818  0E00               	movlw	0
   868  00081A  6E04               	movwf	___lwmod@divisor+1,c
   869  00081C  0E64               	movlw	100
   870  00081E  6E03               	movwf	___lwmod@divisor,c
   871  000820  C015  F001         	movff	i2c_Read@range,___lwmod@dividend
   872  000824  C016  F002         	movff	i2c_Read@range+1,___lwmod@dividend+1
   873  000828  ECB4  F007         	call	___lwmod	;wreg free
   874  00082C  C001  F00E         	movff	?___lwmod,_i2c_Read$1987
   875  000830  C002  F00F         	movff	?___lwmod+1,_i2c_Read$1987+1
   876                           
   877                           ;i2c.c: 166: LCD_writeChar(((range % 100) % 10) + 0x30);
   878  000834  C00E  F001         	movff	_i2c_Read$1987,___lwmod@dividend
   879  000838  C00F  F002         	movff	_i2c_Read$1987+1,___lwmod@dividend+1
   880  00083C  0E00               	movlw	0
   881  00083E  6E04               	movwf	___lwmod@divisor+1,c
   882  000840  0E0A               	movlw	10
   883  000842  6E03               	movwf	___lwmod@divisor,c
   884  000844  ECB4  F007         	call	___lwmod	;wreg free
   885  000848  5001               	movf	?___lwmod,w,c
   886  00084A  0F30               	addlw	48
   887  00084C  ECF6  F007         	call	_LCD_writeChar
   888                           
   889                           ;i2c.c: 168: return range;
   890  000850  5015               	movf	i2c_Read@range,w,c
   891  000852  0012               	return	
   892  000854                     __end_of_i2c_Read:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           
   899 ;; *************** function _i2c_Restart *****************
   900 ;; Defined at:
   901 ;;		line 81 in file "../i2c.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;		None               void
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   915 ;;      Params:         0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    1
   922 ;; This function calls:
   923 ;;		_i2c_Wait
   924 ;; This function is called by:
   925 ;;		_i2c_Read
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930  001158                     __ptext3:
   931                           	opt stack 0
   932  001158                     _i2c_Restart:
   933                           	opt stack 28
   934                           
   935                           ;i2c.c: 82: i2c_Wait();
   936                           
   937                           ;incstack = 0
   938  001158  EC9C  F008         	call	_i2c_Wait	;wreg free
   939                           
   940                           ;i2c.c: 83: SSP2CON2bits.RSEN=1;
   941  00115C  826B               	bsf	3947,1,c	;volatile
   942  00115E                     l272:
   943  00115E  A26B               	btfss	3947,1,c	;volatile
   944  001160  0012               	return	
   945  001162  D7FD               	goto	l272
   946  001164                     __end_of_i2c_Restart:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           
   953 ;; *************** function ___lwmod *****************
   954 ;; Defined at:
   955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  dividend        2    0[COMRAM] unsigned int 
   958 ;;  divisor         2    2[COMRAM] unsigned int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  counter         1    4[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2    0[COMRAM] unsigned int 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         4       0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         5       0       0       0       0       0       0
   974 ;;Total ram usage:        5 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_i2c_Read
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text4
   984  000F68                     __ptext4:
   985                           	opt stack 0
   986  000F68                     ___lwmod:
   987                           	opt stack 29
   988                           
   989                           ;incstack = 0
   990  000F68  5004               	movf	___lwmod@divisor+1,w,c
   991  000F6A  1003               	iorwf	___lwmod@divisor,w,c
   992  000F6C  B4D8               	btfsc	status,2,c
   993  000F6E  D018               	goto	l860
   994  000F70  0E01               	movlw	1
   995  000F72  6E05               	movwf	___lwmod@counter,c
   996  000F74  D004               	goto	l1661
   997  000F76                     l1659:
   998  000F76  90D8               	bcf	status,0,c
   999  000F78  3603               	rlcf	___lwmod@divisor,f,c
  1000  000F7A  3604               	rlcf	___lwmod@divisor+1,f,c
  1001  000F7C  2A05               	incf	___lwmod@counter,f,c
  1002  000F7E                     l1661:
  1003  000F7E  AE04               	btfss	___lwmod@divisor+1,7,c
  1004  000F80  D7FA               	goto	l1659
  1005  000F82                     l1663:
  1006  000F82  5003               	movf	___lwmod@divisor,w,c
  1007  000F84  5C01               	subwf	___lwmod@dividend,w,c
  1008  000F86  5004               	movf	___lwmod@divisor+1,w,c
  1009  000F88  5802               	subwfb	___lwmod@dividend+1,w,c
  1010  000F8A  A0D8               	btfss	status,0,c
  1011  000F8C  D004               	goto	l1667
  1012  000F8E  5003               	movf	___lwmod@divisor,w,c
  1013  000F90  5E01               	subwf	___lwmod@dividend,f,c
  1014  000F92  5004               	movf	___lwmod@divisor+1,w,c
  1015  000F94  5A02               	subwfb	___lwmod@dividend+1,f,c
  1016  000F96                     l1667:
  1017  000F96  90D8               	bcf	status,0,c
  1018  000F98  3204               	rrcf	___lwmod@divisor+1,f,c
  1019  000F9A  3203               	rrcf	___lwmod@divisor,f,c
  1020  000F9C  2E05               	decfsz	___lwmod@counter,f,c
  1021  000F9E  D7F1               	goto	l1663
  1022  000FA0                     l860:
  1023  000FA0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1024  000FA4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1025  000FA8  0012               	return	
  1026  000FAA                     __end_of___lwmod:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           status	equ	0xFD8
  1033                           
  1034 ;; *************** function ___lwdiv *****************
  1035 ;; Defined at:
  1036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  dividend        2    5[COMRAM] unsigned int 
  1039 ;;  divisor         2    7[COMRAM] unsigned int 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  quotient        2    9[COMRAM] unsigned int 
  1042 ;;  counter         1   11[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  2    5[COMRAM] unsigned int 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         4       0       0       0       0       0       0
  1053 ;;      Locals:         3       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         7       0       0       0       0       0       0
  1056 ;;Total ram usage:        7 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_i2c_Read
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text5
  1066  000E36                     __ptext5:
  1067                           	opt stack 0
  1068  000E36                     ___lwdiv:
  1069                           	opt stack 29
  1070                           
  1071                           ;incstack = 0
  1072  000E36  0E00               	movlw	0
  1073  000E38  6E0B               	movwf	___lwdiv@quotient+1,c
  1074  000E3A  0E00               	movlw	0
  1075  000E3C  6E0A               	movwf	___lwdiv@quotient,c
  1076  000E3E  5009               	movf	___lwdiv@divisor+1,w,c
  1077  000E40  1008               	iorwf	___lwdiv@divisor,w,c
  1078  000E42  B4D8               	btfsc	status,2,c
  1079  000E44  D01C               	goto	l850
  1080  000E46  0E01               	movlw	1
  1081  000E48  6E0C               	movwf	___lwdiv@counter,c
  1082  000E4A  D004               	goto	l1641
  1083  000E4C                     l1639:
  1084  000E4C  90D8               	bcf	status,0,c
  1085  000E4E  3608               	rlcf	___lwdiv@divisor,f,c
  1086  000E50  3609               	rlcf	___lwdiv@divisor+1,f,c
  1087  000E52  2A0C               	incf	___lwdiv@counter,f,c
  1088  000E54                     l1641:
  1089  000E54  AE09               	btfss	___lwdiv@divisor+1,7,c
  1090  000E56  D7FA               	goto	l1639
  1091  000E58                     l1643:
  1092  000E58  90D8               	bcf	status,0,c
  1093  000E5A  360A               	rlcf	___lwdiv@quotient,f,c
  1094  000E5C  360B               	rlcf	___lwdiv@quotient+1,f,c
  1095  000E5E  5008               	movf	___lwdiv@divisor,w,c
  1096  000E60  5C06               	subwf	___lwdiv@dividend,w,c
  1097  000E62  5009               	movf	___lwdiv@divisor+1,w,c
  1098  000E64  5807               	subwfb	___lwdiv@dividend+1,w,c
  1099  000E66  A0D8               	btfss	status,0,c
  1100  000E68  D005               	goto	l1651
  1101  000E6A  5008               	movf	___lwdiv@divisor,w,c
  1102  000E6C  5E06               	subwf	___lwdiv@dividend,f,c
  1103  000E6E  5009               	movf	___lwdiv@divisor+1,w,c
  1104  000E70  5A07               	subwfb	___lwdiv@dividend+1,f,c
  1105  000E72  800A               	bsf	___lwdiv@quotient,0,c
  1106  000E74                     l1651:
  1107  000E74  90D8               	bcf	status,0,c
  1108  000E76  3209               	rrcf	___lwdiv@divisor+1,f,c
  1109  000E78  3208               	rrcf	___lwdiv@divisor,f,c
  1110  000E7A  2E0C               	decfsz	___lwdiv@counter,f,c
  1111  000E7C  D7ED               	goto	l1643
  1112  000E7E                     l850:
  1113  000E7E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1114  000E82  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1115  000E86  0012               	return	
  1116  000E88                     __end_of___lwdiv:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           status	equ	0xFD8
  1123                           
  1124 ;; *************** function _i2c_Port_Init *****************
  1125 ;; Defined at:
  1126 ;;		line 17 in file "../i2c.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		None
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text6
  1154  001126                     __ptext6:
  1155                           	opt stack 0
  1156  001126                     _i2c_Port_Init:
  1157                           	opt stack 30
  1158                           
  1159                           ;i2c.c: 33: LATDbits.LD0 = 0;
  1160                           
  1161                           ;incstack = 0
  1162  001126  908C               	bcf	3980,0,c	;volatile
  1163                           
  1164                           ;i2c.c: 34: LATDbits.LD1 = 0;
  1165  001128  928C               	bcf	3980,1,c	;volatile
  1166                           
  1167                           ;i2c.c: 35: TRISDbits.RD0 = 0;
  1168  00112A  9095               	bcf	3989,0,c	;volatile
  1169                           
  1170                           ;i2c.c: 36: TRISDbits.RD1 = 0;
  1171  00112C  9295               	bcf	3989,1,c	;volatile
  1172                           
  1173                           ;i2c.c: 37: ANSELDbits.ANSD0 = 0;
  1174  00112E  010F               	movlb	15	; () banked
  1175  001130  913B               	bcf	59,0,b	;volatile
  1176                           
  1177                           ;i2c.c: 38: ANSELDbits.ANSD1 = 0;
  1178  001132  010F               	movlb	15	; () banked
  1179  001134  933B               	bcf	59,1,b	;volatile
  1180                           
  1181                           ; BSR set to: 15
  1182  001136  0012               	return	
  1183  001138                     __end_of_i2c_Port_Init:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           status	equ	0xFD8
  1190                           
  1191 ;; *************** function _i2c_Init *****************
  1192 ;; Defined at:
  1193 ;;		line 51 in file "../i2c.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;		None               void
  1200 ;; Registers used:
  1201 ;;		wreg, status,2
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1207 ;;      Params:         0       0       0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text7
  1221  0010F6                     __ptext7:
  1222                           	opt stack 0
  1223  0010F6                     _i2c_Init:
  1224                           	opt stack 30
  1225                           
  1226                           ;i2c.c: 55: TRISDbits.TRISD0=1;
  1227                           
  1228                           ; BSR set to: 15
  1229                           ;incstack = 0
  1230  0010F6  8095               	bsf	3989,0,c	;volatile
  1231                           
  1232                           ;i2c.c: 56: TRISDbits.TRISD1=1;
  1233  0010F8  8295               	bsf	3989,1,c	;volatile
  1234                           
  1235                           ;i2c.c: 57: SSP2CON1bits.SSPEN = 1;
  1236  0010FA  8A6C               	bsf	3948,5,c	;volatile
  1237                           
  1238                           ;i2c.c: 58: SSP2CON1 = 0b00101000;
  1239  0010FC  0E28               	movlw	40
  1240  0010FE  6E6C               	movwf	3948,c	;volatile
  1241                           
  1242                           ;i2c.c: 59: SSP2CON2 = 0;
  1243  001100  0E00               	movlw	0
  1244  001102  6E6B               	movwf	3947,c	;volatile
  1245                           
  1246                           ;i2c.c: 62: SSP2ADD = 39;
  1247  001104  0E27               	movlw	39
  1248  001106  6E6E               	movwf	3950,c	;volatile
  1249                           
  1250                           ;i2c.c: 64: SSP2STAT = 0b10000000;
  1251  001108  0E80               	movlw	128
  1252  00110A  6E6D               	movwf	3949,c	;volatile
  1253  00110C  0012               	return	
  1254  00110E                     __end_of_i2c_Init:
  1255                           	opt stack 0
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           status	equ	0xFD8
  1261                           
  1262 ;; *************** function _i2c_Command *****************
  1263 ;; Defined at:
  1264 ;;		line 102 in file "../i2c.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  deviceAddres    1    wreg     unsigned char 
  1267 ;;  reg             1    2[COMRAM] unsigned char 
  1268 ;;  command         1    3[COMRAM] unsigned char 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  deviceAddres    1    5[COMRAM] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;		None               void
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1280 ;;      Params:         2       0       0       0       0       0       0
  1281 ;;      Locals:         1       0       0       0       0       0       0
  1282 ;;      Temps:          1       0       0       0       0       0       0
  1283 ;;      Totals:         4       0       0       0       0       0       0
  1284 ;;Total ram usage:        4 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		_i2c_Start
  1289 ;;		_i2c_Stop
  1290 ;;		_i2c_Wait
  1291 ;;		_i2c_Write
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text8
  1298  000ED6                     __ptext8:
  1299                           	opt stack 0
  1300  000ED6                     _i2c_Command:
  1301                           	opt stack 28
  1302                           
  1303                           ;incstack = 0
  1304                           ;i2c_Command@deviceAddress stored from wreg
  1305  000ED6  6E06               	movwf	i2c_Command@deviceAddress,c
  1306                           
  1307                           ;i2c.c: 104: i2c_Start();
  1308  000ED8  ECBE  F008         	call	_i2c_Start	;wreg free
  1309                           
  1310                           ;i2c.c: 105: i2c_Write(deviceAddress);
  1311  000EDC  5006               	movf	i2c_Command@deviceAddress,w,c
  1312  000EDE  ECB2  F008         	call	_i2c_Write
  1313                           
  1314                           ;i2c.c: 106: i2c_Wait();
  1315  000EE2  EC9C  F008         	call	_i2c_Wait	;wreg free
  1316                           
  1317                           ;i2c.c: 107: i2c_Write(reg);
  1318  000EE6  5003               	movf	i2c_Command@reg,w,c
  1319  000EE8  ECB2  F008         	call	_i2c_Write
  1320                           
  1321                           ;i2c.c: 108: i2c_Wait();
  1322  000EEC  EC9C  F008         	call	_i2c_Wait	;wreg free
  1323                           
  1324                           ;i2c.c: 109: i2c_Write(command);
  1325  000EF0  5004               	movf	i2c_Command@command,w,c
  1326  000EF2  ECB2  F008         	call	_i2c_Write
  1327                           
  1328                           ;i2c.c: 110: i2c_Wait();
  1329  000EF6  EC9C  F008         	call	_i2c_Wait	;wreg free
  1330                           
  1331                           ;i2c.c: 111: i2c_Stop();
  1332  000EFA  ECB8  F008         	call	_i2c_Stop	;wreg free
  1333                           
  1334                           ;i2c.c: 114: _delay((unsigned long)((50)*(10000000/4000.0)));
  1335  000EFE  0EA3               	movlw	163
  1336  000F00  6E05               	movwf	??_i2c_Command& (0+255),c
  1337  000F02  0E55               	movlw	85
  1338  000F04                     u627:
  1339  000F04  2EE8               	decfsz	wreg,f,c
  1340  000F06  D7FE               	goto	u627
  1341  000F08  2E05               	decfsz	??_i2c_Command& (0+255),f,c
  1342  000F0A  D7FC               	goto	u627
  1343  000F0C  F000               	nop	
  1344                           
  1345                           ;i2c.c: 115: _delay((unsigned long)((50)*(10000000/4000.0)));
  1346  000F0E  0EA3               	movlw	163
  1347  000F10  6E05               	movwf	??_i2c_Command& (0+255),c
  1348  000F12  0E55               	movlw	85
  1349  000F14                     u637:
  1350  000F14  2EE8               	decfsz	wreg,f,c
  1351  000F16  D7FE               	goto	u637
  1352  000F18  2E05               	decfsz	??_i2c_Command& (0+255),f,c
  1353  000F1A  D7FC               	goto	u637
  1354  000F1C  F000               	nop	
  1355  000F1E  0012               	return	
  1356  000F20                     __end_of_i2c_Command:
  1357                           	opt stack 0
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           wreg	equ	0xFE8
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _i2c_Write *****************
  1366 ;; Defined at:
  1367 ;;		line 96 in file "../i2c.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  data            1    wreg     unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  data            1    1[COMRAM] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1381 ;;      Params:         0       0       0       0       0       0       0
  1382 ;;      Locals:         1       0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0
  1384 ;;      Totals:         1       0       0       0       0       0       0
  1385 ;;Total ram usage:        1 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    1
  1388 ;; This function calls:
  1389 ;;		_i2c_Wait
  1390 ;; This function is called by:
  1391 ;;		_i2c_Command
  1392 ;;		_i2c_Read
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text9
  1397  001164                     __ptext9:
  1398                           	opt stack 0
  1399  001164                     _i2c_Write:
  1400                           	opt stack 28
  1401                           
  1402                           ;incstack = 0
  1403                           ;i2c_Write@data stored from wreg
  1404  001164  6E02               	movwf	i2c_Write@data,c
  1405                           
  1406                           ;i2c.c: 98: i2c_Wait();
  1407  001166  EC9C  F008         	call	_i2c_Wait	;wreg free
  1408                           
  1409                           ;i2c.c: 99: SSP2BUF = data;
  1410  00116A  C002  FF6F         	movff	i2c_Write@data,3951	;volatile
  1411  00116E  0012               	return	
  1412  001170                     __end_of_i2c_Write:
  1413                           	opt stack 0
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           wreg	equ	0xFE8
  1419                           status	equ	0xFD8
  1420                           
  1421 ;; *************** function _i2c_Stop *****************
  1422 ;; Defined at:
  1423 ;;		line 88 in file "../i2c.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;		None               void
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; Hardware stack levels required when called:    1
  1444 ;; This function calls:
  1445 ;;		_i2c_Wait
  1446 ;; This function is called by:
  1447 ;;		_i2c_Command
  1448 ;;		_i2c_Read
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text10
  1453  001170                     __ptext10:
  1454                           	opt stack 0
  1455  001170                     _i2c_Stop:
  1456                           	opt stack 28
  1457                           
  1458                           ;i2c.c: 90: i2c_Wait();
  1459                           
  1460                           ;incstack = 0
  1461  001170  EC9C  F008         	call	_i2c_Wait	;wreg free
  1462                           
  1463                           ;i2c.c: 91: SSP2CON2bits.PEN=1;
  1464  001174  846B               	bsf	3947,2,c	;volatile
  1465  001176                     l278:
  1466  001176  A46B               	btfss	3947,2,c	;volatile
  1467  001178  0012               	return	
  1468  00117A  D7FD               	goto	l278
  1469  00117C                     __end_of_i2c_Stop:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           wreg	equ	0xFE8
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _i2c_Start *****************
  1479 ;; Defined at:
  1480 ;;		line 73 in file "../i2c.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;		None               void
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1494 ;;      Params:         0       0       0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    1
  1501 ;; This function calls:
  1502 ;;		_i2c_Wait
  1503 ;; This function is called by:
  1504 ;;		_i2c_Command
  1505 ;;		_i2c_Read
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text11
  1510  00117C                     __ptext11:
  1511                           	opt stack 0
  1512  00117C                     _i2c_Start:
  1513                           	opt stack 28
  1514                           
  1515                           ;i2c.c: 75: i2c_Wait();
  1516                           
  1517                           ;incstack = 0
  1518  00117C  EC9C  F008         	call	_i2c_Wait	;wreg free
  1519                           
  1520                           ;i2c.c: 76: SSP2CON2bits.SEN=1;
  1521  001180  806B               	bsf	3947,0,c	;volatile
  1522  001182                     l266:
  1523  001182  A06B               	btfss	3947,0,c	;volatile
  1524  001184  0012               	return	
  1525  001186  D7FD               	goto	l266
  1526  001188                     __end_of_i2c_Start:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           wreg	equ	0xFE8
  1533                           status	equ	0xFD8
  1534                           
  1535 ;; *************** function _i2c_Wait *****************
  1536 ;; Defined at:
  1537 ;;		line 68 in file "../i2c.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1551 ;;      Params:         0       0       0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0       0       0
  1554 ;;      Totals:         1       0       0       0       0       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_i2c_Start
  1561 ;;		_i2c_Restart
  1562 ;;		_i2c_Stop
  1563 ;;		_i2c_Write
  1564 ;;		_i2c_Command
  1565 ;;		_i2c_Read
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text12
  1570  001138                     __ptext12:
  1571                           	opt stack 0
  1572  001138                     _i2c_Wait:
  1573                           	opt stack 28
  1574  001138                     l1575:
  1575  001138  CF6B F001          	movff	3947,??_i2c_Wait	;volatile
  1576  00113C  0E1F               	movlw	31
  1577  00113E  1601               	andwf	??_i2c_Wait,f,c
  1578  001140  B4D8               	btfsc	status,2,c
  1579  001142  B46D               	btfsc	3949,2,c	;volatile
  1580  001144  D7F9               	goto	l1575
  1581  001146  0012               	return	
  1582  001148                     __end_of_i2c_Wait:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           wreg	equ	0xFE8
  1589                           status	equ	0xFD8
  1590                           
  1591 ;; *************** function _Turn_Right *****************
  1592 ;; Defined at:
  1593 ;;		line 174 in file "../DCMotor.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  speed           1    wreg     unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  speed           1   49[COMRAM] unsigned char 
  1598 ;;  i               2   50[COMRAM] int 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;		None               void
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, prodl, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1608 ;;      Params:         0       0       0       0       0       0       0
  1609 ;;      Locals:         3       0       0       0       0       0       0
  1610 ;;      Temps:          1       0       0       0       0       0       0
  1611 ;;      Totals:         4       0       0       0       0       0       0
  1612 ;;Total ram usage:        4 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    4
  1615 ;; This function calls:
  1616 ;;		_EPWM1_LoadDutyValue
  1617 ;;		_EPWM2_LoadDutyValue
  1618 ;;		_Stop
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text13
  1625  000D86                     __ptext13:
  1626                           	opt stack 0
  1627  000D86                     _Turn_Right:
  1628                           	opt stack 26
  1629                           
  1630                           ;incstack = 0
  1631                           ;Turn_Right@speed stored from wreg
  1632  000D86  6E32               	movwf	Turn_Right@speed,c
  1633                           
  1634                           ;DCMotor.c: 176: CCP2CON = 0b11001100;
  1635  000D88  0ECC               	movlw	204
  1636  000D8A  6E66               	movwf	3942,c	;volatile
  1637                           
  1638                           ;DCMotor.c: 177: CCP3CON = 0b11001100;
  1639  000D8C  0ECC               	movlw	204
  1640  000D8E  010F               	movlb	15	; () banked
  1641  000D90  6F5D               	movwf	93,b	;volatile
  1642                           
  1643                           ; BSR set to: 15
  1644                           ;DCMotor.c: 179: EPWM1_LoadDutyValue(00);
  1645  000D92  0E00               	movlw	0
  1646  000D94  6E2C               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
  1647  000D96  0E00               	movlw	0
  1648  000D98  6E2B               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  1649  000D9A  ECCF  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1650                           
  1651                           ;DCMotor.c: 180: EPWM2_LoadDutyValue(speed);
  1652  000D9E  C032  F02B         	movff	Turn_Right@speed,EPWM2_LoadDutyValue@dutyValue
  1653  000DA2  6A2C               	clrf	EPWM2_LoadDutyValue@dutyValue+1,c
  1654  000DA4  EC54  F006         	call	_EPWM2_LoadDutyValue	;wreg free
  1655                           
  1656                           ;DCMotor.c: 182: for(int i =0; i<50; i++)
  1657  000DA8  0E00               	movlw	0
  1658  000DAA  6E34               	movwf	Turn_Right@i+1,c
  1659  000DAC  0E00               	movlw	0
  1660  000DAE  6E33               	movwf	Turn_Right@i,c
  1661  000DB0  5034               	movf	Turn_Right@i+1,w,c
  1662  000DB2  0A80               	xorlw	128
  1663  000DB4  0F80               	addlw	-128
  1664  000DB6  0E32               	movlw	50
  1665  000DB8  B4D8               	btfsc	status,2,c
  1666  000DBA  5C33               	subwf	Turn_Right@i,w,c
  1667  000DBC  B0D8               	btfsc	status,0,c
  1668  000DBE  D00B               	goto	l1247
  1669                           
  1670                           ;DCMotor.c: 183: {
  1671                           ;DCMotor.c: 184: _delay((unsigned long)((10)*(10000000/4000.0)));
  1672  000DC0  0E21               	movlw	33
  1673  000DC2  6E31               	movwf	??_Turn_Right& (0+255),c
  1674  000DC4  0E76               	movlw	118
  1675  000DC6                     u647:
  1676  000DC6  2EE8               	decfsz	wreg,f,c
  1677  000DC8  D7FE               	goto	u647
  1678  000DCA  2E31               	decfsz	??_Turn_Right& (0+255),f,c
  1679  000DCC  D7FC               	goto	u647
  1680  000DCE  D000               	nop2	
  1681  000DD0  4A33               	infsnz	Turn_Right@i,f,c
  1682  000DD2  2A34               	incf	Turn_Right@i+1,f,c
  1683  000DD4  D7ED               	goto	L1
  1684  000DD6                     l1247:
  1685                           
  1686                           ;DCMotor.c: 185: }
  1687                           ;DCMotor.c: 186: Stop();
  1688  000DD6  EC69  F008         	call	_Stop	;wreg free
  1689                           
  1690                           ;DCMotor.c: 188: Stop();
  1691  000DDA  EC69  F008         	call	_Stop	;wreg free
  1692  000DDE  0012               	return	
  1693  000DE0                     __end_of_Turn_Right:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           tblptrh	equ	0xFF7
  1697                           tblptrl	equ	0xFF6
  1698                           tablat	equ	0xFF5
  1699                           wreg	equ	0xFE8
  1700                           status	equ	0xFD8
  1701                           
  1702 ;; *************** function _Turn_Left *****************
  1703 ;; Defined at:
  1704 ;;		line 191 in file "../DCMotor.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  speed           1    wreg     unsigned char 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  speed           1   49[COMRAM] unsigned char 
  1709 ;;  i               2   50[COMRAM] int 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;		None               void
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, prodl, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1719 ;;      Params:         0       0       0       0       0       0       0
  1720 ;;      Locals:         3       0       0       0       0       0       0
  1721 ;;      Temps:          1       0       0       0       0       0       0
  1722 ;;      Totals:         4       0       0       0       0       0       0
  1723 ;;Total ram usage:        4 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    4
  1726 ;; This function calls:
  1727 ;;		_EPWM1_LoadDutyValue
  1728 ;;		_EPWM2_LoadDutyValue
  1729 ;;		_Stop
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text14
  1736  000DE0                     __ptext14:
  1737                           	opt stack 0
  1738  000DE0                     _Turn_Left:
  1739                           	opt stack 26
  1740                           
  1741                           ;incstack = 0
  1742                           ;Turn_Left@speed stored from wreg
  1743  000DE0  6E32               	movwf	Turn_Left@speed,c
  1744                           
  1745                           ;DCMotor.c: 193: CCP2CON = 0b11001100;
  1746  000DE2  0ECC               	movlw	204
  1747  000DE4  6E66               	movwf	3942,c	;volatile
  1748                           
  1749                           ;DCMotor.c: 194: CCP3CON = 0b11001100;
  1750  000DE6  0ECC               	movlw	204
  1751  000DE8  010F               	movlb	15	; () banked
  1752  000DEA  6F5D               	movwf	93,b	;volatile
  1753                           
  1754                           ; BSR set to: 15
  1755                           ;DCMotor.c: 196: EPWM1_LoadDutyValue(speed);
  1756  000DEC  C032  F02B         	movff	Turn_Left@speed,EPWM1_LoadDutyValue@dutyValue
  1757  000DF0  6A2C               	clrf	EPWM1_LoadDutyValue@dutyValue+1,c
  1758  000DF2  ECCF  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  1759                           
  1760                           ;DCMotor.c: 197: EPWM2_LoadDutyValue(00);
  1761  000DF6  0E00               	movlw	0
  1762  000DF8  6E2C               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
  1763  000DFA  0E00               	movlw	0
  1764  000DFC  6E2B               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  1765  000DFE  EC54  F006         	call	_EPWM2_LoadDutyValue	;wreg free
  1766                           
  1767                           ;DCMotor.c: 199: for(int i =0; i<150; i++)
  1768  000E02  0E00               	movlw	0
  1769  000E04  6E34               	movwf	Turn_Left@i+1,c
  1770  000E06  0E00               	movlw	0
  1771  000E08  6E33               	movwf	Turn_Left@i,c
  1772  000E0A  5034               	movf	Turn_Left@i+1,w,c
  1773  000E0C  0A80               	xorlw	128
  1774  000E0E  0F80               	addlw	-128
  1775  000E10  0E96               	movlw	150
  1776  000E12  B4D8               	btfsc	status,2,c
  1777  000E14  5C33               	subwf	Turn_Left@i,w,c
  1778  000E16  B0D8               	btfsc	status,0,c
  1779  000E18  D00B               	goto	l1265
  1780                           
  1781                           ;DCMotor.c: 200: {
  1782                           ;DCMotor.c: 201: _delay((unsigned long)((10)*(10000000/4000.0)));
  1783  000E1A  0E21               	movlw	33
  1784  000E1C  6E31               	movwf	??_Turn_Left& (0+255),c
  1785  000E1E  0E76               	movlw	118
  1786  000E20                     u657:
  1787  000E20  2EE8               	decfsz	wreg,f,c
  1788  000E22  D7FE               	goto	u657
  1789  000E24  2E31               	decfsz	??_Turn_Left& (0+255),f,c
  1790  000E26  D7FC               	goto	u657
  1791  000E28  D000               	nop2	
  1792  000E2A  4A33               	infsnz	Turn_Left@i,f,c
  1793  000E2C  2A34               	incf	Turn_Left@i+1,f,c
  1794  000E2E  D7ED               	goto	L2
  1795  000E30                     l1265:
  1796                           
  1797                           ;DCMotor.c: 202: }
  1798                           ;DCMotor.c: 203: Stop();
  1799  000E30  EC69  F008         	call	_Stop	;wreg free
  1800  000E34  0012               	return	
  1801  000E36                     __end_of_Turn_Left:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           wreg	equ	0xFE8
  1808                           status	equ	0xFD8
  1809                           
  1810 ;; *************** function _TMR4_Initialize *****************
  1811 ;; Defined at:
  1812 ;;		line 144 in file "../DCMotor.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;		None               void
  1819 ;; Registers used:
  1820 ;;		wreg, status,2
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1826 ;;      Params:         0       0       0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text15
  1840  00110E                     __ptext15:
  1841                           	opt stack 0
  1842  00110E                     _TMR4_Initialize:
  1843                           	opt stack 30
  1844                           
  1845                           ;DCMotor.c: 149: T4CON = 0x00;
  1846                           
  1847                           ;incstack = 0
  1848  00110E  0E00               	movlw	0
  1849  001110  010F               	movlb	15	; () banked
  1850  001112  6F51               	movwf	81,b	;volatile
  1851                           
  1852                           ;DCMotor.c: 152: PR4 = 0xA0;
  1853  001114  0EA0               	movlw	160
  1854  001116  010F               	movlb	15	; () banked
  1855  001118  6F52               	movwf	82,b	;volatile
  1856                           
  1857                           ; BSR set to: 15
  1858                           ;DCMotor.c: 155: TMR4 = 0xFF;
  1859  00111A  010F               	movlb	15	; () banked
  1860  00111C  6953               	setf	83,b	;volatile
  1861                           
  1862                           ; BSR set to: 15
  1863                           ;DCMotor.c: 158: PIR5bits.TMR4IF = 0;
  1864  00111E  907E               	bcf	3966,0,c	;volatile
  1865                           
  1866                           ; BSR set to: 15
  1867                           ;DCMotor.c: 161: T4CONbits.TMR4ON = 1;
  1868  001120  010F               	movlb	15	; () banked
  1869  001122  8551               	bsf	81,2,b	;volatile
  1870                           
  1871                           ; BSR set to: 15
  1872  001124  0012               	return	
  1873  001126                     __end_of_TMR4_Initialize:
  1874                           	opt stack 0
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           wreg	equ	0xFE8
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _TMR2_Initialize *****************
  1883 ;; Defined at:
  1884 ;;		line 74 in file "../DCMotor.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg, status,2
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1898 ;;      Params:         0       0       0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0
  1901 ;;      Totals:         0       0       0       0       0       0       0
  1902 ;;Total ram usage:        0 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; This function calls:
  1905 ;;		Nothing
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text16
  1912  001148                     __ptext16:
  1913                           	opt stack 0
  1914  001148                     _TMR2_Initialize:
  1915                           	opt stack 30
  1916                           
  1917                           ;DCMotor.c: 79: T2CON = 0x00;
  1918                           
  1919                           ; BSR set to: 15
  1920                           ;incstack = 0
  1921  001148  0E00               	movlw	0
  1922  00114A  6EBA               	movwf	4026,c	;volatile
  1923                           
  1924                           ;DCMotor.c: 82: PR2 = 0xA0;
  1925  00114C  0EA0               	movlw	160
  1926  00114E  6EBB               	movwf	4027,c	;volatile
  1927                           
  1928                           ;DCMotor.c: 85: TMR2 = 0xFF;
  1929  001150  68BC               	setf	4028,c	;volatile
  1930                           
  1931                           ;DCMotor.c: 88: PIR1bits.TMR2IF = 0;
  1932  001152  929E               	bcf	3998,1,c	;volatile
  1933                           
  1934                           ;DCMotor.c: 91: T2CONbits.TMR2ON = 1;
  1935  001154  84BA               	bsf	4026,2,c	;volatile
  1936  001156  0012               	return	
  1937  001158                     __end_of_TMR2_Initialize:
  1938                           	opt stack 0
  1939                           tblptru	equ	0xFF8
  1940                           tblptrh	equ	0xFF7
  1941                           tblptrl	equ	0xFF6
  1942                           tablat	equ	0xFF5
  1943                           wreg	equ	0xFE8
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _LCD_write *****************
  1947 ;; Defined at:
  1948 ;;		line 82 in file "../LCD.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  data            2    4[COMRAM] PTR unsigned char 
  1951 ;;		 -> STR_1(6), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  i               2    8[COMRAM] int 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;		None               void
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1963 ;;      Params:         2       0       0       0       0       0       0
  1964 ;;      Locals:         2       0       0       0       0       0       0
  1965 ;;      Temps:          2       0       0       0       0       0       0
  1966 ;;      Totals:         6       0       0       0       0       0       0
  1967 ;;Total ram usage:        6 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    1
  1970 ;; This function calls:
  1971 ;;		_LCD_writeChar
  1972 ;;		_place_lcd_cursor
  1973 ;; This function is called by:
  1974 ;;		_main
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text17
  1979  000C24                     __ptext17:
  1980                           	opt stack 0
  1981  000C24                     _LCD_write:
  1982                           	opt stack 29
  1983                           
  1984                           ;LCD.c: 86: for(int i=0; data[i]!='\0'; i++)
  1985                           
  1986                           ;incstack = 0
  1987  000C24  0E00               	movlw	0
  1988  000C26  6E0A               	movwf	LCD_write@i+1,c
  1989  000C28  0E00               	movlw	0
  1990  000C2A  6E09               	movwf	LCD_write@i,c
  1991  000C2C  D02B               	goto	l1779
  1992  000C2E                     l1769:
  1993                           
  1994                           ;LCD.c: 87: {
  1995                           ;LCD.c: 88: if(data[i] == '\n')
  1996  000C2E  C005  F007         	movff	LCD_write@data,??_LCD_write
  1997  000C32  C006  F008         	movff	LCD_write@data+1,??_LCD_write+1
  1998  000C36  5009               	movf	LCD_write@i,w,c
  1999  000C38  2607               	addwf	??_LCD_write,f,c
  2000  000C3A  500A               	movf	LCD_write@i+1,w,c
  2001  000C3C  2208               	addwfc	??_LCD_write+1,f,c
  2002  000C3E  C007  FFF6         	movff	??_LCD_write,tblptrl
  2003  000C42  C008  FFF7         	movff	??_LCD_write+1,tblptrh
  2004  000C46                     	if	0	;tblptru may be non-zero
  2005  000C46                     	endif
  2006  000C46                     	if	0	;tblptru may be non-zero
  2007  000C46                     	endif
  2008  000C46  0008               	tblrd		*
  2009  000C48  50F5               	movf	tablat,w,c
  2010  000C4A  0A0A               	xorlw	10
  2011  000C4C  A4D8               	btfss	status,2,c
  2012  000C4E  D008               	goto	l1775
  2013                           
  2014                           ;LCD.c: 89: {
  2015                           ;LCD.c: 91: ++yPos;
  2016  000C50  4A36               	infsnz	_yPos,f,c
  2017  000C52  2A37               	incf	_yPos+1,f,c
  2018                           
  2019                           ;LCD.c: 92: place_lcd_cursor(0,yPos);
  2020  000C54  C036  F001         	movff	_yPos,place_lcd_cursor@y
  2021  000C58  0E00               	movlw	0
  2022  000C5A  EC44  F007         	call	_place_lcd_cursor
  2023                           
  2024                           ;LCD.c: 93: }
  2025  000C5E  D010               	goto	l1777
  2026  000C60                     l1775:
  2027                           
  2028                           ;LCD.c: 94: else
  2029                           ;LCD.c: 95: {
  2030                           ;LCD.c: 97: LCD_writeChar(data[i]);
  2031  000C60  C005  F007         	movff	LCD_write@data,??_LCD_write
  2032  000C64  C006  F008         	movff	LCD_write@data+1,??_LCD_write+1
  2033  000C68  5009               	movf	LCD_write@i,w,c
  2034  000C6A  2607               	addwf	??_LCD_write,f,c
  2035  000C6C  500A               	movf	LCD_write@i+1,w,c
  2036  000C6E  2208               	addwfc	??_LCD_write+1,f,c
  2037  000C70  C007  FFF6         	movff	??_LCD_write,tblptrl
  2038  000C74  C008  FFF7         	movff	??_LCD_write+1,tblptrh
  2039  000C78                     	if	0	;tblptru may be non-zero
  2040  000C78                     	endif
  2041  000C78                     	if	0	;tblptru may be non-zero
  2042  000C78                     	endif
  2043  000C78  0008               	tblrd		*
  2044  000C7A  50F5               	movf	tablat,w,c
  2045  000C7C  ECF6  F007         	call	_LCD_writeChar
  2046  000C80                     l1777:
  2047  000C80  4A09               	infsnz	LCD_write@i,f,c
  2048  000C82  2A0A               	incf	LCD_write@i+1,f,c
  2049  000C84                     l1779:
  2050  000C84  C005  F007         	movff	LCD_write@data,??_LCD_write
  2051  000C88  C006  F008         	movff	LCD_write@data+1,??_LCD_write+1
  2052  000C8C  5009               	movf	LCD_write@i,w,c
  2053  000C8E  2607               	addwf	??_LCD_write,f,c
  2054  000C90  500A               	movf	LCD_write@i+1,w,c
  2055  000C92  2208               	addwfc	??_LCD_write+1,f,c
  2056  000C94  C007  FFF6         	movff	??_LCD_write,tblptrl
  2057  000C98  C008  FFF7         	movff	??_LCD_write+1,tblptrh
  2058  000C9C                     	if	0	;tblptru may be non-zero
  2059  000C9C                     	endif
  2060  000C9C                     	if	0	;tblptru may be non-zero
  2061  000C9C                     	endif
  2062  000C9C  0008               	tblrd		*
  2063  000C9E  50F5               	movf	tablat,w,c
  2064  000CA0  0900               	iorlw	0
  2065  000CA2  B4D8               	btfsc	status,2,c
  2066  000CA4  0012               	return	
  2067  000CA6  D7C3               	goto	l1769
  2068  000CA8                     __end_of_LCD_write:
  2069                           	opt stack 0
  2070                           tblptru	equ	0xFF8
  2071                           tblptrh	equ	0xFF7
  2072                           tblptrl	equ	0xFF6
  2073                           tablat	equ	0xFF5
  2074                           wreg	equ	0xFE8
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _LCD_writeChar *****************
  2078 ;; Defined at:
  2079 ;;		line 103 in file "../LCD.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  data            1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  data            1    3[COMRAM] unsigned char 
  2084 ;;  lower           1    2[COMRAM] unsigned char 
  2085 ;;  upper           1    1[COMRAM] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;		None               void
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2095 ;;      Params:         0       0       0       0       0       0       0
  2096 ;;      Locals:         3       0       0       0       0       0       0
  2097 ;;      Temps:          1       0       0       0       0       0       0
  2098 ;;      Totals:         4       0       0       0       0       0       0
  2099 ;;Total ram usage:        4 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;;		_LCD_write
  2106 ;;		_i2c_Read
  2107 ;;		_LCD_convertWrite
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text18
  2112  000FEC                     __ptext18:
  2113                           	opt stack 0
  2114  000FEC                     _LCD_writeChar:
  2115                           	opt stack 29
  2116                           
  2117                           ;incstack = 0
  2118                           ;LCD_writeChar@data stored from wreg
  2119  000FEC  6E04               	movwf	LCD_writeChar@data,c
  2120                           
  2121                           ;LCD.c: 106: unsigned char upper = data & 0b11110000;
  2122  000FEE  5004               	movf	LCD_writeChar@data,w,c
  2123  000FF0  0BF0               	andlw	240
  2124  000FF2  6E02               	movwf	LCD_writeChar@upper,c
  2125                           
  2126                           ;LCD.c: 107: unsigned char lower = (data << 4);
  2127  000FF4  3804               	swapf	LCD_writeChar@data,w,c
  2128  000FF6  0BF0               	andlw	240
  2129  000FF8  6E03               	movwf	LCD_writeChar@lower,c
  2130                           
  2131                           ;LCD.c: 110: LATCbits.LC3 = 1;
  2132  000FFA  868B               	bsf	3979,3,c	;volatile
  2133                           
  2134                           ;LCD.c: 111: LATCbits.LC2 = 1; LATC = (LATC & 0b00001111) | upper; LATCbits.LC2 = 0;
  2135  000FFC  848B               	bsf	3979,2,c	;volatile
  2136  000FFE  508B               	movf	3979,w,c	;volatile
  2137  001000  0B0F               	andlw	15
  2138  001002  1002               	iorwf	LCD_writeChar@upper,w,c
  2139  001004  6E8B               	movwf	3979,c	;volatile
  2140  001006  948B               	bcf	3979,2,c	;volatile
  2141                           
  2142                           ;LCD.c: 112: LATCbits.LC2 = 1; LATC = (LATC & 0b00001111) | lower; LATCbits.LC2 = 0;
  2143  001008  848B               	bsf	3979,2,c	;volatile
  2144  00100A  508B               	movf	3979,w,c	;volatile
  2145  00100C  0B0F               	andlw	15
  2146  00100E  1003               	iorwf	LCD_writeChar@lower,w,c
  2147  001010  6E8B               	movwf	3979,c	;volatile
  2148  001012  948B               	bcf	3979,2,c	;volatile
  2149                           
  2150                           ;LCD.c: 113: _delay((unsigned long)((1)*(10000000/4000.0)));
  2151  001014  0E04               	movlw	4
  2152  001016  6E01               	movwf	??_LCD_writeChar& (0+255),c
  2153  001018  0E3E               	movlw	62
  2154  00101A                     u667:
  2155  00101A  2EE8               	decfsz	wreg,f,c
  2156  00101C  D7FE               	goto	u667
  2157  00101E  2E01               	decfsz	??_LCD_writeChar& (0+255),f,c
  2158  001020  D7FC               	goto	u667
  2159                           
  2160                           ;LCD.c: 114: LATCbits.LC3 = 0;
  2161  001022  968B               	bcf	3979,3,c	;volatile
  2162  001024  0012               	return	
  2163  001026                     __end_of_LCD_writeChar:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           wreg	equ	0xFE8
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _LCD_init *****************
  2173 ;; Defined at:
  2174 ;;		line 18 in file "../LCD.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2188 ;;      Params:         0       0       0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0
  2190 ;;      Temps:          1       0       0       0       0       0       0
  2191 ;;      Totals:         1       0       0       0       0       0       0
  2192 ;;Total ram usage:        1 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    1
  2195 ;; This function calls:
  2196 ;;		_Delay100ms
  2197 ;;		_place_lcd_cursor
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text19
  2204  000608                     __ptext19:
  2205                           	opt stack 0
  2206  000608                     _LCD_init:
  2207                           	opt stack 29
  2208                           
  2209                           ;LCD.c: 21: LATCbits.LC3 = 0;
  2210                           
  2211                           ;incstack = 0
  2212  000608  968B               	bcf	3979,3,c	;volatile
  2213                           
  2214                           ;LCD.c: 22: LATCbits.LC2 = 0;
  2215  00060A  948B               	bcf	3979,2,c	;volatile
  2216                           
  2217                           ;LCD.c: 23: LATCbits.LC4 = 0;
  2218  00060C  988B               	bcf	3979,4,c	;volatile
  2219                           
  2220                           ;LCD.c: 24: LATCbits.LC5 = 0;
  2221  00060E  9A8B               	bcf	3979,5,c	;volatile
  2222                           
  2223                           ;LCD.c: 25: LATCbits.LC6 = 0;
  2224  000610  9C8B               	bcf	3979,6,c	;volatile
  2225                           
  2226                           ;LCD.c: 26: LATCbits.LC7 = 0;
  2227  000612  9E8B               	bcf	3979,7,c	;volatile
  2228                           
  2229                           ;LCD.c: 29: TRISCbits.RC3 = 0;
  2230  000614  9694               	bcf	3988,3,c	;volatile
  2231                           
  2232                           ;LCD.c: 30: TRISCbits.RC2 = 0;
  2233  000616  9494               	bcf	3988,2,c	;volatile
  2234                           
  2235                           ;LCD.c: 31: TRISCbits.RC4 = 0;
  2236  000618  9894               	bcf	3988,4,c	;volatile
  2237                           
  2238                           ;LCD.c: 32: TRISCbits.RC5 = 0;
  2239  00061A  9A94               	bcf	3988,5,c	;volatile
  2240                           
  2241                           ;LCD.c: 33: TRISCbits.RC6 = 0;
  2242  00061C  9C94               	bcf	3988,6,c	;volatile
  2243                           
  2244                           ;LCD.c: 34: TRISCbits.RC7 = 0;
  2245  00061E  9E94               	bcf	3988,7,c	;volatile
  2246                           
  2247                           ;LCD.c: 37: Delay100ms();
  2248  000620  EC2C  F008         	call	_Delay100ms	;wreg free
  2249                           
  2250                           ;LCD.c: 40: PORTCbits.RC3 = 0;
  2251  000624  9682               	bcf	3970,3,c	;volatile
  2252                           
  2253                           ;LCD.c: 43: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x30; PORTCbits.RC2 = 0;
  2254  000626  8482               	bsf	3970,2,c	;volatile
  2255  000628  5082               	movf	3970,w,c	;volatile
  2256  00062A  0B0F               	andlw	15
  2257  00062C  0930               	iorlw	48
  2258  00062E  6E82               	movwf	3970,c	;volatile
  2259  000630  9482               	bcf	3970,2,c	;volatile
  2260                           
  2261                           ;LCD.c: 44: _delay((unsigned long)((10)*(10000000/4000.0)));
  2262  000632  0E21               	movlw	33
  2263  000634  6E05               	movwf	??_LCD_init& (0+255),c
  2264  000636  0E76               	movlw	118
  2265  000638                     u677:
  2266  000638  2EE8               	decfsz	wreg,f,c
  2267  00063A  D7FE               	goto	u677
  2268  00063C  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2269  00063E  D7FC               	goto	u677
  2270  000640  D000               	nop2	
  2271                           
  2272                           ;LCD.c: 47: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x30; PORTCbits.RC2 = 0;
  2273  000642  8482               	bsf	3970,2,c	;volatile
  2274  000644  5082               	movf	3970,w,c	;volatile
  2275  000646  0B0F               	andlw	15
  2276  000648  0930               	iorlw	48
  2277  00064A  6E82               	movwf	3970,c	;volatile
  2278  00064C  9482               	bcf	3970,2,c	;volatile
  2279                           
  2280                           ;LCD.c: 48: _delay((unsigned long)((10)*(10000000/4000.0)));
  2281  00064E  0E21               	movlw	33
  2282  000650  6E05               	movwf	??_LCD_init& (0+255),c
  2283  000652  0E76               	movlw	118
  2284  000654                     u687:
  2285  000654  2EE8               	decfsz	wreg,f,c
  2286  000656  D7FE               	goto	u687
  2287  000658  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2288  00065A  D7FC               	goto	u687
  2289  00065C  D000               	nop2	
  2290                           
  2291                           ;LCD.c: 51: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x30; PORTCbits.RC2 = 0;
  2292  00065E  8482               	bsf	3970,2,c	;volatile
  2293  000660  5082               	movf	3970,w,c	;volatile
  2294  000662  0B0F               	andlw	15
  2295  000664  0930               	iorlw	48
  2296  000666  6E82               	movwf	3970,c	;volatile
  2297  000668  9482               	bcf	3970,2,c	;volatile
  2298                           
  2299                           ;LCD.c: 52: _delay((unsigned long)((10)*(10000000/4000.0)));
  2300  00066A  0E21               	movlw	33
  2301  00066C  6E05               	movwf	??_LCD_init& (0+255),c
  2302  00066E  0E76               	movlw	118
  2303  000670                     u697:
  2304  000670  2EE8               	decfsz	wreg,f,c
  2305  000672  D7FE               	goto	u697
  2306  000674  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2307  000676  D7FC               	goto	u697
  2308  000678  D000               	nop2	
  2309                           
  2310                           ;LCD.c: 55: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x20; PORTCbits.RC2 = 0;
  2311  00067A  8482               	bsf	3970,2,c	;volatile
  2312  00067C  5082               	movf	3970,w,c	;volatile
  2313  00067E  0B0F               	andlw	15
  2314  000680  0920               	iorlw	32
  2315  000682  6E82               	movwf	3970,c	;volatile
  2316  000684  9482               	bcf	3970,2,c	;volatile
  2317                           
  2318                           ;LCD.c: 56: _delay((unsigned long)((10)*(10000000/4000.0)));
  2319  000686  0E21               	movlw	33
  2320  000688  6E05               	movwf	??_LCD_init& (0+255),c
  2321  00068A  0E76               	movlw	118
  2322  00068C                     u707:
  2323  00068C  2EE8               	decfsz	wreg,f,c
  2324  00068E  D7FE               	goto	u707
  2325  000690  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2326  000692  D7FC               	goto	u707
  2327  000694  D000               	nop2	
  2328                           
  2329                           ;LCD.c: 59: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x20; PORTCbits.RC2 = 0;
  2330  000696  8482               	bsf	3970,2,c	;volatile
  2331  000698  5082               	movf	3970,w,c	;volatile
  2332  00069A  0B0F               	andlw	15
  2333  00069C  0920               	iorlw	32
  2334  00069E  6E82               	movwf	3970,c	;volatile
  2335  0006A0  9482               	bcf	3970,2,c	;volatile
  2336                           
  2337                           ;LCD.c: 60: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x80; PORTCbits.RC2 = 0;
  2338  0006A2  8482               	bsf	3970,2,c	;volatile
  2339  0006A4  5082               	movf	3970,w,c	;volatile
  2340  0006A6  0B0F               	andlw	15
  2341  0006A8  0980               	iorlw	128
  2342  0006AA  6E82               	movwf	3970,c	;volatile
  2343  0006AC  9482               	bcf	3970,2,c	;volatile
  2344                           
  2345                           ;LCD.c: 61: _delay((unsigned long)((10)*(10000000/4000.0)));
  2346  0006AE  0E21               	movlw	33
  2347  0006B0  6E05               	movwf	??_LCD_init& (0+255),c
  2348  0006B2  0E76               	movlw	118
  2349  0006B4                     u717:
  2350  0006B4  2EE8               	decfsz	wreg,f,c
  2351  0006B6  D7FE               	goto	u717
  2352  0006B8  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2353  0006BA  D7FC               	goto	u717
  2354  0006BC  D000               	nop2	
  2355                           
  2356                           ;LCD.c: 64: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x00; PORTCbits.RC2 = 0;
  2357  0006BE  8482               	bsf	3970,2,c	;volatile
  2358  0006C0  5082               	movf	3970,w,c	;volatile
  2359  0006C2  0B0F               	andlw	15
  2360  0006C4  6E82               	movwf	3970,c	;volatile
  2361  0006C6  9482               	bcf	3970,2,c	;volatile
  2362                           
  2363                           ;LCD.c: 65: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0xF0; PORTCbits.RC2 = 0;
  2364  0006C8  8482               	bsf	3970,2,c	;volatile
  2365  0006CA  5082               	movf	3970,w,c	;volatile
  2366  0006CC  0B0F               	andlw	15
  2367  0006CE  09F0               	iorlw	240
  2368  0006D0  6E82               	movwf	3970,c	;volatile
  2369  0006D2  9482               	bcf	3970,2,c	;volatile
  2370                           
  2371                           ;LCD.c: 66: _delay((unsigned long)((10)*(10000000/4000.0)));
  2372  0006D4  0E21               	movlw	33
  2373  0006D6  6E05               	movwf	??_LCD_init& (0+255),c
  2374  0006D8  0E76               	movlw	118
  2375  0006DA                     u727:
  2376  0006DA  2EE8               	decfsz	wreg,f,c
  2377  0006DC  D7FE               	goto	u727
  2378  0006DE  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2379  0006E0  D7FC               	goto	u727
  2380  0006E2  D000               	nop2	
  2381                           
  2382                           ;LCD.c: 69: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x00; PORTCbits.RC2 = 0;
  2383  0006E4  8482               	bsf	3970,2,c	;volatile
  2384  0006E6  5082               	movf	3970,w,c	;volatile
  2385  0006E8  0B0F               	andlw	15
  2386  0006EA  6E82               	movwf	3970,c	;volatile
  2387  0006EC  9482               	bcf	3970,2,c	;volatile
  2388                           
  2389                           ;LCD.c: 70: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x10; PORTCbits.RC2 = 0;
  2390  0006EE  8482               	bsf	3970,2,c	;volatile
  2391  0006F0  5082               	movf	3970,w,c	;volatile
  2392  0006F2  0B0F               	andlw	15
  2393  0006F4  0910               	iorlw	16
  2394  0006F6  6E82               	movwf	3970,c	;volatile
  2395  0006F8  9482               	bcf	3970,2,c	;volatile
  2396                           
  2397                           ;LCD.c: 71: _delay((unsigned long)((10)*(10000000/4000.0)));
  2398  0006FA  0E21               	movlw	33
  2399  0006FC  6E05               	movwf	??_LCD_init& (0+255),c
  2400  0006FE  0E76               	movlw	118
  2401  000700                     u737:
  2402  000700  2EE8               	decfsz	wreg,f,c
  2403  000702  D7FE               	goto	u737
  2404  000704  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2405  000706  D7FC               	goto	u737
  2406  000708  D000               	nop2	
  2407                           
  2408                           ;LCD.c: 74: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x00; PORTCbits.RC2 = 0;
  2409  00070A  8482               	bsf	3970,2,c	;volatile
  2410  00070C  5082               	movf	3970,w,c	;volatile
  2411  00070E  0B0F               	andlw	15
  2412  000710  6E82               	movwf	3970,c	;volatile
  2413  000712  9482               	bcf	3970,2,c	;volatile
  2414                           
  2415                           ;LCD.c: 75: PORTCbits.RC2 = 1; PORTC = (PORTC & 0b00001111) | 0x60; PORTCbits.RC2 = 0;
  2416  000714  8482               	bsf	3970,2,c	;volatile
  2417  000716  5082               	movf	3970,w,c	;volatile
  2418  000718  0B0F               	andlw	15
  2419  00071A  0960               	iorlw	96
  2420  00071C  6E82               	movwf	3970,c	;volatile
  2421  00071E  9482               	bcf	3970,2,c	;volatile
  2422                           
  2423                           ;LCD.c: 76: _delay((unsigned long)((10)*(10000000/4000.0)));
  2424  000720  0E21               	movlw	33
  2425  000722  6E05               	movwf	??_LCD_init& (0+255),c
  2426  000724  0E76               	movlw	118
  2427  000726                     u747:
  2428  000726  2EE8               	decfsz	wreg,f,c
  2429  000728  D7FE               	goto	u747
  2430  00072A  2E05               	decfsz	??_LCD_init& (0+255),f,c
  2431  00072C  D7FC               	goto	u747
  2432  00072E  D000               	nop2	
  2433                           
  2434                           ;LCD.c: 79: place_lcd_cursor(0,0);
  2435  000730  0E00               	movlw	0
  2436  000732  6E01               	movwf	place_lcd_cursor@y,c
  2437  000734  0E00               	movlw	0
  2438  000736  EC44  F007         	call	_place_lcd_cursor
  2439  00073A  0012               	return	
  2440  00073C                     __end_of_LCD_init:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           wreg	equ	0xFE8
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _place_lcd_cursor *****************
  2450 ;; Defined at:
  2451 ;;		line 125 in file "../LCD.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  x               1    wreg     unsigned char 
  2454 ;;  y               1    0[COMRAM] unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  x               1    2[COMRAM] unsigned char 
  2457 ;;  position        1    3[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;		None               void
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0, prodl, prodh
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2467 ;;      Params:         1       0       0       0       0       0       0
  2468 ;;      Locals:         2       0       0       0       0       0       0
  2469 ;;      Temps:          1       0       0       0       0       0       0
  2470 ;;      Totals:         4       0       0       0       0       0       0
  2471 ;;Total ram usage:        4 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;;		_LCD_init
  2478 ;;		_LCD_write
  2479 ;;		_i2c_Read
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text20
  2484  000E88                     __ptext20:
  2485                           	opt stack 0
  2486  000E88                     _place_lcd_cursor:
  2487                           	opt stack 30
  2488                           
  2489                           ;incstack = 0
  2490                           ;place_lcd_cursor@x stored from wreg
  2491  000E88  6E03               	movwf	place_lcd_cursor@x,c
  2492                           
  2493                           ;LCD.c: 128: yPos = y;
  2494  000E8A  C001  F036         	movff	place_lcd_cursor@y,_yPos
  2495  000E8E  6A37               	clrf	_yPos+1,c
  2496                           
  2497                           ;LCD.c: 131: unsigned char position = (0x40*y)+x;
  2498  000E90  5001               	movf	place_lcd_cursor@y,w,c
  2499  000E92  0D40               	mullw	64
  2500  000E94  50F3               	movf	prodl,w,c
  2501  000E96  2403               	addwf	place_lcd_cursor@x,w,c
  2502  000E98  6E04               	movwf	place_lcd_cursor@position,c
  2503                           
  2504                           ;LCD.c: 132: LATCbits.LC3 = 0;
  2505  000E9A  968B               	bcf	3979,3,c	;volatile
  2506                           
  2507                           ;LCD.c: 135: LATCbits.LC2 = 1;
  2508  000E9C  848B               	bsf	3979,2,c	;volatile
  2509                           
  2510                           ;LCD.c: 136: LATC = LATC & 0b00001111;
  2511  000E9E  508B               	movf	3979,w,c	;volatile
  2512  000EA0  0B0F               	andlw	15
  2513  000EA2  6E8B               	movwf	3979,c	;volatile
  2514                           
  2515                           ;LCD.c: 137: LATC = (LATC | (position & 0b11110000)) | 0b10000000;
  2516  000EA4  5004               	movf	place_lcd_cursor@position,w,c
  2517  000EA6  0BF0               	andlw	240
  2518  000EA8  108B               	iorwf	3979,w,c	;volatile
  2519  000EAA  0980               	iorlw	128
  2520  000EAC  6E8B               	movwf	3979,c	;volatile
  2521                           
  2522                           ;LCD.c: 138: LATCbits.LC2 = 0;
  2523  000EAE  948B               	bcf	3979,2,c	;volatile
  2524                           
  2525                           ;LCD.c: 141: LATCbits.LC2 = 1;
  2526  000EB0  848B               	bsf	3979,2,c	;volatile
  2527                           
  2528                           ;LCD.c: 142: LATC = (LATC & 0b00001111) | (position << 4);
  2529  000EB2  C004  F002         	movff	place_lcd_cursor@position,??_place_lcd_cursor
  2530  000EB6  3A02               	swapf	??_place_lcd_cursor,f,c
  2531  000EB8  0EF0               	movlw	240
  2532  000EBA  1602               	andwf	??_place_lcd_cursor,f,c
  2533  000EBC  508B               	movf	3979,w,c	;volatile
  2534  000EBE  0B0F               	andlw	15
  2535  000EC0  1002               	iorwf	??_place_lcd_cursor,w,c
  2536  000EC2  6E8B               	movwf	3979,c	;volatile
  2537                           
  2538                           ;LCD.c: 143: LATCbits.LC2 = 0;
  2539  000EC4  948B               	bcf	3979,2,c	;volatile
  2540                           
  2541                           ;LCD.c: 144: _delay((unsigned long)((1)*(10000000/4000.0)));
  2542  000EC6  0E04               	movlw	4
  2543  000EC8  6E02               	movwf	??_place_lcd_cursor& (0+255),c
  2544  000ECA  0E3E               	movlw	62
  2545  000ECC                     u757:
  2546  000ECC  2EE8               	decfsz	wreg,f,c
  2547  000ECE  D7FE               	goto	u757
  2548  000ED0  2E02               	decfsz	??_place_lcd_cursor& (0+255),f,c
  2549  000ED2  D7FC               	goto	u757
  2550  000ED4  0012               	return	
  2551  000ED6                     __end_of_place_lcd_cursor:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodl	equ	0xFF3
  2558                           wreg	equ	0xFE8
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _Delay100ms *****************
  2562 ;; Defined at:
  2563 ;;		line 147 in file "../LCD.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  i               2    1[COMRAM] int 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;		None               void
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2577 ;;      Params:         0       0       0       0       0       0       0
  2578 ;;      Locals:         2       0       0       0       0       0       0
  2579 ;;      Temps:          1       0       0       0       0       0       0
  2580 ;;      Totals:         3       0       0       0       0       0       0
  2581 ;;Total ram usage:        3 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_LCD_init
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text21
  2591  001058                     __ptext21:
  2592                           	opt stack 0
  2593  001058                     _Delay100ms:
  2594                           	opt stack 29
  2595                           
  2596                           ;LCD.c: 149: for(i=0;i<100;i++)
  2597                           
  2598                           ;incstack = 0
  2599  001058  0E00               	movlw	0
  2600  00105A  6E03               	movwf	Delay100ms@i+1,c
  2601  00105C  0E00               	movlw	0
  2602  00105E  6E02               	movwf	Delay100ms@i,c
  2603  001060  5003               	movf	Delay100ms@i+1,w,c
  2604  001062  0A80               	xorlw	128
  2605  001064  0F80               	addlw	-128
  2606  001066  0E64               	movlw	100
  2607  001068  B4D8               	btfsc	status,2,c
  2608  00106A  5C02               	subwf	Delay100ms@i,w,c
  2609  00106C  B0D8               	btfsc	status,0,c
  2610  00106E  0012               	return	
  2611                           
  2612                           ;LCD.c: 150: {
  2613                           ;LCD.c: 151: _delay((unsigned long)((1)*(10000000/4000.0)));
  2614  001070  0E04               	movlw	4
  2615  001072  6E01               	movwf	??_Delay100ms& (0+255),c
  2616  001074  0E3E               	movlw	62
  2617  001076                     u767:
  2618  001076  2EE8               	decfsz	wreg,f,c
  2619  001078  D7FE               	goto	u767
  2620  00107A  2E01               	decfsz	??_Delay100ms& (0+255),f,c
  2621  00107C  D7FC               	goto	u767
  2622  00107E  4A02               	infsnz	Delay100ms@i,f,c
  2623  001080  2A03               	incf	Delay100ms@i+1,f,c
  2624  001082  D7EE               	goto	L3
  2625  001084                     __end_of_Delay100ms:
  2626                           	opt stack 0
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           prodl	equ	0xFF3
  2632                           wreg	equ	0xFE8
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _EPWM_Port_Init *****************
  2636 ;; Defined at:
  2637 ;;		line 6 in file "../DCMotor.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;		None               void
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2651 ;;      Params:         0       0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0
  2654 ;;      Totals:         0       0       0       0       0       0       0
  2655 ;;Total ram usage:        0 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text22
  2665  000D28                     __ptext22:
  2666                           	opt stack 0
  2667  000D28                     _EPWM_Port_Init:
  2668                           	opt stack 30
  2669                           
  2670                           ;DCMotor.c: 8: LATA = LATA & 0x00;
  2671                           
  2672                           ;incstack = 0
  2673  000D28  0E00               	movlw	0
  2674  000D2A  6E89               	movwf	3977,c	;volatile
  2675                           
  2676                           ;DCMotor.c: 9: TRISA = TRISA & 0xFF;
  2677  000D2C  CF92 FF92          	movff	3986,3986	;volatile
  2678                           
  2679                           ;DCMotor.c: 10: ANSELA = ANSELA & 0x2F;
  2680  000D30  010F               	movlb	15	; () banked
  2681  000D32  5138               	movf	56,w,b	;volatile
  2682  000D34  0B2F               	andlw	47
  2683  000D36  010F               	movlb	15	; () banked
  2684  000D38  6F38               	movwf	56,b	;volatile
  2685                           
  2686                           ; BSR set to: 15
  2687                           ;DCMotor.c: 12: LATB = LATB & 0x00;
  2688  000D3A  0E00               	movlw	0
  2689  000D3C  6E8A               	movwf	3978,c	;volatile
  2690                           
  2691                           ;DCMotor.c: 13: TRISB = TRISB & 0xDF;
  2692  000D3E  5093               	movf	3987,w,c	;volatile
  2693  000D40  0BDF               	andlw	223
  2694  000D42  6E93               	movwf	3987,c	;volatile
  2695                           
  2696                           ;DCMotor.c: 14: ANSELB = ANSELB & 0x1F;
  2697  000D44  010F               	movlb	15	; () banked
  2698  000D46  5139               	movf	57,w,b	;volatile
  2699  000D48  0B1F               	andlw	31
  2700  000D4A  010F               	movlb	15	; () banked
  2701  000D4C  6F39               	movwf	57,b	;volatile
  2702                           
  2703                           ; BSR set to: 15
  2704                           ;DCMotor.c: 15: WPUB = 0x00;
  2705  000D4E  0E00               	movlw	0
  2706  000D50  6E61               	movwf	3937,c	;volatile
  2707                           
  2708                           ; BSR set to: 15
  2709                           ;DCMotor.c: 17: LATCbits.LC1 = 0;
  2710  000D52  928B               	bcf	3979,1,c	;volatile
  2711                           
  2712                           ; BSR set to: 15
  2713                           ;DCMotor.c: 18: TRISCbits.RC1 = 0;
  2714  000D54  9294               	bcf	3988,1,c	;volatile
  2715                           
  2716                           ; BSR set to: 15
  2717                           ;DCMotor.c: 19: ANSELCbits.ANSC2 = 0;
  2718  000D56  010F               	movlb	15	; () banked
  2719  000D58  953A               	bcf	58,2,b	;volatile
  2720                           
  2721                           ; BSR set to: 15
  2722                           ;DCMotor.c: 21: LATD = LATD & 0x00;
  2723  000D5A  0E00               	movlw	0
  2724  000D5C  6E8C               	movwf	3980,c	;volatile
  2725                           
  2726                           ;DCMotor.c: 22: TRISD = TRISD & 0xFB;
  2727  000D5E  5095               	movf	3989,w,c	;volatile
  2728  000D60  0BFB               	andlw	251
  2729  000D62  6E95               	movwf	3989,c	;volatile
  2730                           
  2731                           ;DCMotor.c: 23: ANSELD = ANSELD & 0xFB;
  2732  000D64  010F               	movlb	15	; () banked
  2733  000D66  513B               	movf	59,w,b	;volatile
  2734  000D68  0BFB               	andlw	251
  2735  000D6A  010F               	movlb	15	; () banked
  2736  000D6C  6F3B               	movwf	59,b	;volatile
  2737                           
  2738                           ; BSR set to: 15
  2739                           ;DCMotor.c: 25: LATE = LATE & 0x00;
  2740  000D6E  0E00               	movlw	0
  2741  000D70  6E8D               	movwf	3981,c	;volatile
  2742                           
  2743                           ; BSR set to: 15
  2744                           ;DCMotor.c: 26: TRISE = TRISE & 0x05;
  2745  000D72  5096               	movf	3990,w,c	;volatile
  2746  000D74  0B05               	andlw	5
  2747  000D76  6E96               	movwf	3990,c	;volatile
  2748                           
  2749                           ; BSR set to: 15
  2750                           ;DCMotor.c: 27: ANSELE = ANSELE & 0x05;
  2751  000D78  010F               	movlb	15	; () banked
  2752  000D7A  513C               	movf	60,w,b	;volatile
  2753  000D7C  0B05               	andlw	5
  2754  000D7E  010F               	movlb	15	; () banked
  2755  000D80  6F3C               	movwf	60,b	;volatile
  2756                           
  2757                           ; BSR set to: 15
  2758                           ;DCMotor.c: 29: INTCON2bits.nRBPU = 0x01;
  2759  000D82  8EF1               	bsf	intcon2,7,c	;volatile
  2760                           
  2761                           ; BSR set to: 15
  2762  000D84  0012               	return	
  2763  000D86                     __end_of_EPWM_Port_Init:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodl	equ	0xFF3
  2770                           intcon2	equ	0xFF1
  2771                           wreg	equ	0xFE8
  2772                           status	equ	0xFD8
  2773                           
  2774 ;; *************** function _EPWM2_Initialize *****************
  2775 ;; Defined at:
  2776 ;;		line 104 in file "../DCMotor.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;		None               void
  2783 ;; Registers used:
  2784 ;;		wreg, status,2
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         0       0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text23
  2804  001084                     __ptext23:
  2805                           	opt stack 0
  2806  001084                     _EPWM2_Initialize:
  2807                           	opt stack 30
  2808                           
  2809                           ;DCMotor.c: 109: CCP2CON = 0xBC;
  2810                           
  2811                           ; BSR set to: 15
  2812                           ;incstack = 0
  2813  001084  0EBC               	movlw	188
  2814  001086  6E66               	movwf	3942,c	;volatile
  2815                           
  2816                           ;DCMotor.c: 112: ECCP2AS = 0x00;
  2817  001088  0E00               	movlw	0
  2818  00108A  6E64               	movwf	3940,c	;volatile
  2819                           
  2820                           ;DCMotor.c: 115: PWM2CON = 0x80;
  2821  00108C  0E80               	movlw	128
  2822  00108E  6E65               	movwf	3941,c	;volatile
  2823                           
  2824                           ;DCMotor.c: 118: PSTR2CON = 0x00;
  2825  001090  0E00               	movlw	0
  2826  001092  6E63               	movwf	3939,c	;volatile
  2827                           
  2828                           ;DCMotor.c: 121: CCPR2L = 0x7F;
  2829  001094  0E7F               	movlw	127
  2830  001096  6E67               	movwf	3943,c	;volatile
  2831                           
  2832                           ;DCMotor.c: 124: CCPR2H = 0x00;
  2833  001098  0E00               	movlw	0
  2834  00109A  6E68               	movwf	3944,c	;volatile
  2835                           
  2836                           ;DCMotor.c: 127: CCPTMRS0bits.C2TSEL = 0x1;
  2837  00109C  010F               	movlb	15	; () banked
  2838  00109E  5149               	movf	73,w,b	;volatile
  2839  0010A0  0BE7               	andlw	-25
  2840  0010A2  0908               	iorlw	8
  2841  0010A4  010F               	movlb	15	; () banked
  2842  0010A6  6F49               	movwf	73,b	;volatile
  2843                           
  2844                           ;DCMotor.c: 130: CCP2CON = 0b11001100;
  2845  0010A8  0ECC               	movlw	204
  2846  0010AA  6E66               	movwf	3942,c	;volatile
  2847                           
  2848                           ; BSR set to: 15
  2849  0010AC  0012               	return	
  2850  0010AE                     __end_of_EPWM2_Initialize:
  2851                           	opt stack 0
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           prodl	equ	0xFF3
  2857                           intcon2	equ	0xFF1
  2858                           wreg	equ	0xFE8
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _EPWM1_Initialize *****************
  2862 ;; Defined at:
  2863 ;;		line 33 in file "../DCMotor.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		wreg, status,2
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2877 ;;      Params:         0       0       0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text24
  2891  001026                     __ptext24:
  2892                           	opt stack 0
  2893  001026                     _EPWM1_Initialize:
  2894                           	opt stack 30
  2895                           
  2896                           ;DCMotor.c: 38: CCP3CON = 0xBC;
  2897                           
  2898                           ; BSR set to: 15
  2899                           ;incstack = 0
  2900  001026  0EBC               	movlw	188
  2901  001028  010F               	movlb	15	; () banked
  2902  00102A  6F5D               	movwf	93,b	;volatile
  2903                           
  2904                           ;DCMotor.c: 41: ECCP3AS = 0x00;
  2905  00102C  0E00               	movlw	0
  2906  00102E  010F               	movlb	15	; () banked
  2907  001030  6F5B               	movwf	91,b	;volatile
  2908                           
  2909                           ;DCMotor.c: 44: PWM3CON = 0x80;
  2910  001032  0E80               	movlw	128
  2911  001034  010F               	movlb	15	; () banked
  2912  001036  6F5C               	movwf	92,b	;volatile
  2913                           
  2914                           ;DCMotor.c: 47: PSTR3CON = 0x00;
  2915  001038  0E00               	movlw	0
  2916  00103A  010F               	movlb	15	; () banked
  2917  00103C  6F5A               	movwf	90,b	;volatile
  2918                           
  2919                           ;DCMotor.c: 50: CCPR3L = 0x7F;
  2920  00103E  0E7F               	movlw	127
  2921  001040  010F               	movlb	15	; () banked
  2922  001042  6F5E               	movwf	94,b	;volatile
  2923                           
  2924                           ;DCMotor.c: 53: CCPR3H = 0x00;
  2925  001044  0E00               	movlw	0
  2926  001046  010F               	movlb	15	; () banked
  2927  001048  6F5F               	movwf	95,b	;volatile
  2928                           
  2929                           ;DCMotor.c: 56: CCPTMRS0bits.C3TSEL = 0x0;
  2930  00104A  0E3F               	movlw	-193
  2931  00104C  010F               	movlb	15	; () banked
  2932  00104E  1749               	andwf	73,f,b	;volatile
  2933                           
  2934                           ;DCMotor.c: 59: CCP3CON = 0b11001100;
  2935  001050  0ECC               	movlw	204
  2936  001052  010F               	movlb	15	; () banked
  2937  001054  6F5D               	movwf	93,b	;volatile
  2938                           
  2939                           ; BSR set to: 15
  2940  001056  0012               	return	
  2941  001058                     __end_of_EPWM1_Initialize:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodl	equ	0xFF3
  2948                           intcon2	equ	0xFF1
  2949                           wreg	equ	0xFE8
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _Drive_Forward *****************
  2953 ;; Defined at:
  2954 ;;		line 206 in file "../DCMotor.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  distance        1    wreg     unsigned char 
  2957 ;;  speed           2   48[COMRAM] int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  distance        1   51[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;		None               void
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0, prodl, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2969 ;;      Params:         2       0       0       0       0       0       0
  2970 ;;      Locals:         1       0       0       0       0       0       0
  2971 ;;      Temps:          1       0       0       0       0       0       0
  2972 ;;      Totals:         4       0       0       0       0       0       0
  2973 ;;Total ram usage:        4 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    4
  2976 ;; This function calls:
  2977 ;;		_EPWM1_LoadDutyValue
  2978 ;;		_EPWM2_LoadDutyValue
  2979 ;;		_Stop
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text25
  2986  000FAA                     __ptext25:
  2987                           	opt stack 0
  2988  000FAA                     _Drive_Forward:
  2989                           	opt stack 26
  2990                           
  2991                           ; BSR set to: 15
  2992                           ;incstack = 0
  2993                           ;Drive_Forward@distance stored from wreg
  2994  000FAA  6E34               	movwf	Drive_Forward@distance,c
  2995                           
  2996                           ;DCMotor.c: 208: CCP2CON = 0b11001100;
  2997  000FAC  0ECC               	movlw	204
  2998  000FAE  6E66               	movwf	3942,c	;volatile
  2999                           
  3000                           ;DCMotor.c: 209: CCP3CON = 0b11001100;
  3001  000FB0  0ECC               	movlw	204
  3002  000FB2  010F               	movlb	15	; () banked
  3003  000FB4  6F5D               	movwf	93,b	;volatile
  3004                           
  3005                           ;DCMotor.c: 211: while(distance > 0)
  3006  000FB6  D015               	goto	l1275
  3007  000FB8                     l1269:
  3008                           
  3009                           ;DCMotor.c: 212: {
  3010                           ;DCMotor.c: 213: EPWM1_LoadDutyValue(speed);
  3011  000FB8  C031  F02B         	movff	Drive_Forward@speed,EPWM1_LoadDutyValue@dutyValue
  3012  000FBC  C032  F02C         	movff	Drive_Forward@speed+1,EPWM1_LoadDutyValue@dutyValue+1
  3013  000FC0  ECCF  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  3014                           
  3015                           ;DCMotor.c: 214: EPWM2_LoadDutyValue(speed);
  3016  000FC4  C031  F02B         	movff	Drive_Forward@speed,EPWM2_LoadDutyValue@dutyValue
  3017  000FC8  C032  F02C         	movff	Drive_Forward@speed+1,EPWM2_LoadDutyValue@dutyValue+1
  3018  000FCC  EC54  F006         	call	_EPWM2_LoadDutyValue	;wreg free
  3019                           
  3020                           ;DCMotor.c: 216: _delay((unsigned long)((10)*(10000000/4000.0)));
  3021  000FD0  0E21               	movlw	33
  3022  000FD2  6E33               	movwf	??_Drive_Forward& (0+255),c
  3023  000FD4  0E76               	movlw	118
  3024  000FD6                     u777:
  3025  000FD6  2EE8               	decfsz	wreg,f,c
  3026  000FD8  D7FE               	goto	u777
  3027  000FDA  2E33               	decfsz	??_Drive_Forward& (0+255),f,c
  3028  000FDC  D7FC               	goto	u777
  3029  000FDE  D000               	nop2	
  3030                           
  3031                           ;DCMotor.c: 217: distance--;
  3032  000FE0  0634               	decf	Drive_Forward@distance,f,c
  3033  000FE2                     l1275:
  3034  000FE2  6634               	tstfsz	Drive_Forward@distance,c
  3035  000FE4  D7E9               	goto	l1269
  3036                           
  3037                           ;DCMotor.c: 218: }
  3038                           ;DCMotor.c: 219: Stop();
  3039  000FE6  EC69  F008         	call	_Stop	;wreg free
  3040  000FEA  0012               	return	
  3041  000FEC                     __end_of_Drive_Forward:
  3042                           	opt stack 0
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodl	equ	0xFF3
  3048                           intcon2	equ	0xFF1
  3049                           wreg	equ	0xFE8
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _Stop *****************
  3053 ;; Defined at:
  3054 ;;		line 238 in file "../DCMotor.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0, prodl, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3068 ;;      Params:         0       0       0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    3
  3075 ;; This function calls:
  3076 ;;		_EPWM1_LoadDutyValue
  3077 ;;		_EPWM2_LoadDutyValue
  3078 ;; This function is called by:
  3079 ;;		_Turn_Right
  3080 ;;		_Turn_Left
  3081 ;;		_Drive_Forward
  3082 ;;		_main
  3083 ;;		_Drive_Reverse
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text26
  3088  0010D2                     __ptext26:
  3089                           	opt stack 0
  3090  0010D2                     _Stop:
  3091                           	opt stack 26
  3092                           
  3093                           ;DCMotor.c: 242: CCP2CON = 0b11001100;
  3094                           
  3095                           ;incstack = 0
  3096  0010D2  0ECC               	movlw	204
  3097  0010D4  6E66               	movwf	3942,c	;volatile
  3098                           
  3099                           ;DCMotor.c: 243: CCP3CON = 0b11001100;
  3100  0010D6  0ECC               	movlw	204
  3101  0010D8  010F               	movlb	15	; () banked
  3102  0010DA  6F5D               	movwf	93,b	;volatile
  3103                           
  3104                           ; BSR set to: 15
  3105                           ;DCMotor.c: 245: EPWM1_LoadDutyValue(00);
  3106  0010DC  0E00               	movlw	0
  3107  0010DE  6E2C               	movwf	EPWM1_LoadDutyValue@dutyValue+1,c
  3108  0010E0  0E00               	movlw	0
  3109  0010E2  6E2B               	movwf	EPWM1_LoadDutyValue@dutyValue,c
  3110  0010E4  ECCF  F005         	call	_EPWM1_LoadDutyValue	;wreg free
  3111                           
  3112                           ;DCMotor.c: 246: EPWM2_LoadDutyValue(00);
  3113  0010E8  0E00               	movlw	0
  3114  0010EA  6E2C               	movwf	EPWM2_LoadDutyValue@dutyValue+1,c
  3115  0010EC  0E00               	movlw	0
  3116  0010EE  6E2B               	movwf	EPWM2_LoadDutyValue@dutyValue,c
  3117  0010F0  EC54  F006         	call	_EPWM2_LoadDutyValue	;wreg free
  3118  0010F4  0012               	return	
  3119  0010F6                     __end_of_Stop:
  3120                           	opt stack 0
  3121                           tblptru	equ	0xFF8
  3122                           tblptrh	equ	0xFF7
  3123                           tblptrl	equ	0xFF6
  3124                           tablat	equ	0xFF5
  3125                           prodl	equ	0xFF3
  3126                           intcon2	equ	0xFF1
  3127                           wreg	equ	0xFE8
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _EPWM2_LoadDutyValue *****************
  3131 ;; Defined at:
  3132 ;;		line 133 in file "../DCMotor.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  dutyValue       2   42[COMRAM] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;		None               void
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, prodl, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3146 ;;      Params:         2       0       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0
  3148 ;;      Temps:          4       0       0       0       0       0       0
  3149 ;;      Totals:         6       0       0       0       0       0       0
  3150 ;;Total ram usage:        6 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		___awtoft
  3155 ;;		___ftmul
  3156 ;;		___fttol
  3157 ;; This function is called by:
  3158 ;;		_Turn_Right
  3159 ;;		_Turn_Left
  3160 ;;		_Drive_Forward
  3161 ;;		_Stop
  3162 ;;		_Switch_Direction2
  3163 ;;		_Drive_Reverse
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text27
  3168  000CA8                     __ptext27:
  3169                           	opt stack 0
  3170  000CA8                     _EPWM2_LoadDutyValue:
  3171                           	opt stack 26
  3172                           
  3173                           ;DCMotor.c: 135: dutyValue = dutyValue * 6.4;
  3174                           
  3175                           ;incstack = 0
  3176  000CA8  0ECD               	movlw	205
  3177  000CAA  6E10               	movwf	___ftmul@f2,c
  3178  000CAC  0ECC               	movlw	204
  3179  000CAE  6E11               	movwf	___ftmul@f2+1,c
  3180  000CB0  0E40               	movlw	64
  3181  000CB2  6E12               	movwf	___ftmul@f2+2,c
  3182  000CB4  C02B  F009         	movff	EPWM2_LoadDutyValue@dutyValue,___awtoft@c
  3183  000CB8  C02C  F00A         	movff	EPWM2_LoadDutyValue@dutyValue+1,___awtoft@c+1
  3184  000CBC  EC90  F007         	call	___awtoft	;wreg free
  3185  000CC0  C009  F00D         	movff	?___awtoft,___ftmul@f1
  3186  000CC4  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  3187  000CC8  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  3188  000CCC  ECA5  F004         	call	___ftmul	;wreg free
  3189  000CD0  C00D  F01C         	movff	?___ftmul,___fttol@f1
  3190  000CD4  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  3191  000CD8  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  3192  000CDC  EC2A  F004         	call	___fttol	;wreg free
  3193  000CE0  C01C  F02D         	movff	?___fttol,??_EPWM2_LoadDutyValue
  3194  000CE4  C01D  F02E         	movff	?___fttol+1,??_EPWM2_LoadDutyValue+1
  3195  000CE8  C01E  F02F         	movff	?___fttol+2,??_EPWM2_LoadDutyValue+2
  3196  000CEC  C01F  F030         	movff	?___fttol+3,??_EPWM2_LoadDutyValue+3
  3197  000CF0  C02D  F02B         	movff	??_EPWM2_LoadDutyValue,EPWM2_LoadDutyValue@dutyValue
  3198  000CF4  C02E  F02C         	movff	??_EPWM2_LoadDutyValue+1,EPWM2_LoadDutyValue@dutyValue+1
  3199                           
  3200                           ;DCMotor.c: 138: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3201  000CF8  C02B  F02D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3202  000CFC  C02C  F02E         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3203  000D00  342E               	rlcf	??_EPWM2_LoadDutyValue+1,w,c
  3204  000D02  322E               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3205  000D04  322D               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3206  000D06  342E               	rlcf	??_EPWM2_LoadDutyValue+1,w,c
  3207  000D08  322E               	rrcf	??_EPWM2_LoadDutyValue+1,f,c
  3208  000D0A  322D               	rrcf	??_EPWM2_LoadDutyValue,f,c
  3209  000D0C  502D               	movf	??_EPWM2_LoadDutyValue,w,c
  3210  000D0E  6E67               	movwf	3943,c	;volatile
  3211                           
  3212                           ;DCMotor.c: 141: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3213  000D10  C02B  F02D         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3214  000D14  0E03               	movlw	3
  3215  000D16  162D               	andwf	??_EPWM2_LoadDutyValue,f,c
  3216  000D18  3A2D               	swapf	??_EPWM2_LoadDutyValue,f,c
  3217  000D1A  0EF0               	movlw	240
  3218  000D1C  162D               	andwf	??_EPWM2_LoadDutyValue,f,c
  3219  000D1E  5066               	movf	3942,w,c	;volatile
  3220  000D20  0BCF               	andlw	207
  3221  000D22  102D               	iorwf	??_EPWM2_LoadDutyValue,w,c
  3222  000D24  6E66               	movwf	3942,c	;volatile
  3223  000D26  0012               	return	
  3224  000D28                     __end_of_EPWM2_LoadDutyValue:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodl	equ	0xFF3
  3231                           intcon2	equ	0xFF1
  3232                           wreg	equ	0xFE8
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _EPWM1_LoadDutyValue *****************
  3236 ;; Defined at:
  3237 ;;		line 63 in file "../DCMotor.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  dutyValue       2   42[COMRAM] int 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;		None               void
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, prodl, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3251 ;;      Params:         2       0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0
  3253 ;;      Temps:          4       0       0       0       0       0       0
  3254 ;;      Totals:         6       0       0       0       0       0       0
  3255 ;;Total ram usage:        6 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    2
  3258 ;; This function calls:
  3259 ;;		___awtoft
  3260 ;;		___ftmul
  3261 ;;		___fttol
  3262 ;; This function is called by:
  3263 ;;		_Turn_Right
  3264 ;;		_Turn_Left
  3265 ;;		_Drive_Forward
  3266 ;;		_Stop
  3267 ;;		_Switch_Direction1
  3268 ;;		_Drive_Reverse
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text28
  3273  000B9E                     __ptext28:
  3274                           	opt stack 0
  3275  000B9E                     _EPWM1_LoadDutyValue:
  3276                           	opt stack 26
  3277                           
  3278                           ;DCMotor.c: 65: dutyValue = dutyValue * 6.4;
  3279                           
  3280                           ;incstack = 0
  3281  000B9E  0ECD               	movlw	205
  3282  000BA0  6E10               	movwf	___ftmul@f2,c
  3283  000BA2  0ECC               	movlw	204
  3284  000BA4  6E11               	movwf	___ftmul@f2+1,c
  3285  000BA6  0E40               	movlw	64
  3286  000BA8  6E12               	movwf	___ftmul@f2+2,c
  3287  000BAA  C02B  F009         	movff	EPWM1_LoadDutyValue@dutyValue,___awtoft@c
  3288  000BAE  C02C  F00A         	movff	EPWM1_LoadDutyValue@dutyValue+1,___awtoft@c+1
  3289  000BB2  EC90  F007         	call	___awtoft	;wreg free
  3290  000BB6  C009  F00D         	movff	?___awtoft,___ftmul@f1
  3291  000BBA  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  3292  000BBE  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  3293  000BC2  ECA5  F004         	call	___ftmul	;wreg free
  3294  000BC6  C00D  F01C         	movff	?___ftmul,___fttol@f1
  3295  000BCA  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  3296  000BCE  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  3297  000BD2  EC2A  F004         	call	___fttol	;wreg free
  3298  000BD6  C01C  F02D         	movff	?___fttol,??_EPWM1_LoadDutyValue
  3299  000BDA  C01D  F02E         	movff	?___fttol+1,??_EPWM1_LoadDutyValue+1
  3300  000BDE  C01E  F02F         	movff	?___fttol+2,??_EPWM1_LoadDutyValue+2
  3301  000BE2  C01F  F030         	movff	?___fttol+3,??_EPWM1_LoadDutyValue+3
  3302  000BE6  C02D  F02B         	movff	??_EPWM1_LoadDutyValue,EPWM1_LoadDutyValue@dutyValue
  3303  000BEA  C02E  F02C         	movff	??_EPWM1_LoadDutyValue+1,EPWM1_LoadDutyValue@dutyValue+1
  3304                           
  3305                           ;DCMotor.c: 68: CCPR3L = ((dutyValue & 0x03FC)>>2);
  3306  000BEE  C02B  F02D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3307  000BF2  C02C  F02E         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  3308  000BF6  342E               	rlcf	??_EPWM1_LoadDutyValue+1,w,c
  3309  000BF8  322E               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3310  000BFA  322D               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3311  000BFC  342E               	rlcf	??_EPWM1_LoadDutyValue+1,w,c
  3312  000BFE  322E               	rrcf	??_EPWM1_LoadDutyValue+1,f,c
  3313  000C00  322D               	rrcf	??_EPWM1_LoadDutyValue,f,c
  3314  000C02  502D               	movf	??_EPWM1_LoadDutyValue,w,c
  3315  000C04  010F               	movlb	15	; () banked
  3316  000C06  6F5E               	movwf	94,b	;volatile
  3317                           
  3318                           ; BSR set to: 15
  3319                           ;DCMotor.c: 71: CCP3CON = (CCP3CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3320  000C08  C02B  F02D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  3321  000C0C  0E03               	movlw	3
  3322  000C0E  162D               	andwf	??_EPWM1_LoadDutyValue,f,c
  3323  000C10  3A2D               	swapf	??_EPWM1_LoadDutyValue,f,c
  3324  000C12  0EF0               	movlw	240
  3325  000C14  162D               	andwf	??_EPWM1_LoadDutyValue,f,c
  3326  000C16  010F               	movlb	15	; () banked
  3327  000C18  515D               	movf	93,w,b	;volatile
  3328  000C1A  0BCF               	andlw	207
  3329  000C1C  102D               	iorwf	??_EPWM1_LoadDutyValue,w,c
  3330  000C1E  010F               	movlb	15	; () banked
  3331  000C20  6F5D               	movwf	93,b	;volatile
  3332                           
  3333                           ; BSR set to: 15
  3334  000C22  0012               	return	
  3335  000C24                     __end_of_EPWM1_LoadDutyValue:
  3336                           	opt stack 0
  3337                           tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodl	equ	0xFF3
  3342                           intcon2	equ	0xFF1
  3343                           wreg	equ	0xFE8
  3344                           status	equ	0xFD8
  3345                           
  3346 ;; *************** function ___fttol *****************
  3347 ;; Defined at:
  3348 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  f1              3   27[COMRAM] float 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  lval            4   37[COMRAM] unsigned long 
  3353 ;;  exp1            1   41[COMRAM] unsigned char 
  3354 ;;  sign1           1   36[COMRAM] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  4   27[COMRAM] long 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3364 ;;      Params:         4       0       0       0       0       0       0
  3365 ;;      Locals:         6       0       0       0       0       0       0
  3366 ;;      Temps:          5       0       0       0       0       0       0
  3367 ;;      Totals:        15       0       0       0       0       0       0
  3368 ;;Total ram usage:       15 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; This function calls:
  3371 ;;		Nothing
  3372 ;; This function is called by:
  3373 ;;		_EPWM1_LoadDutyValue
  3374 ;;		_EPWM2_LoadDutyValue
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text29
  3379  000854                     __ptext29:
  3380                           	opt stack 0
  3381  000854                     ___fttol:
  3382                           	opt stack 27
  3383                           
  3384                           ; BSR set to: 15
  3385                           ;incstack = 0
  3386  000854  C01E  F020         	movff	___fttol@f1+2,??___fttol
  3387  000858  6A21               	clrf	(??___fttol+1)& (0+255),c
  3388  00085A  6A22               	clrf	(??___fttol+2)& (0+255),c
  3389  00085C  341D               	rlcf	___fttol@f1+1,w,c
  3390  00085E  3620               	rlcf	??___fttol& (0+255),f,c
  3391  000860  E301               	bnc	u151
  3392  000862  8021               	bsf	(??___fttol+1)& (0+255),0,c
  3393  000864                     u151:
  3394  000864  5020               	movf	??___fttol,w,c
  3395  000866  6E2A               	movwf	___fttol@exp1,c
  3396  000868  662A               	tstfsz	___fttol@exp1& (0+255),c
  3397  00086A  D009               	goto	l1019
  3398  00086C  0E00               	movlw	0
  3399  00086E  6E1C               	movwf	?___fttol,c
  3400  000870  0E00               	movlw	0
  3401  000872  6E1D               	movwf	?___fttol+1,c
  3402  000874  0E00               	movlw	0
  3403  000876  6E1E               	movwf	?___fttol+2,c
  3404  000878  0E00               	movlw	0
  3405  00087A  6E1F               	movwf	?___fttol+3,c
  3406  00087C  0012               	return	
  3407  00087E                     l1019:
  3408  00087E  0E17               	movlw	23
  3409  000880  6E20               	movwf	??___fttol& (0+255),c
  3410  000882  C01C  F021         	movff	___fttol@f1,??___fttol+1
  3411  000886  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  3412  00088A  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  3413  00088E  2820               	incf	??___fttol,w,c
  3414  000890  6E24               	movwf	(??___fttol+4)& (0+255),c
  3415  000892  D004               	goto	u170
  3416  000894                     u175:
  3417  000894  90D8               	bcf	status,0,c
  3418  000896  3223               	rrcf	??___fttol+3,f,c
  3419  000898  3222               	rrcf	??___fttol+2,f,c
  3420  00089A  3221               	rrcf	??___fttol+1,f,c
  3421  00089C                     u170:
  3422  00089C  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  3423  00089E  D7FA               	goto	u175
  3424  0008A0  5021               	movf	??___fttol+1,w,c
  3425  0008A2  6E25               	movwf	___fttol@sign1,c
  3426  0008A4  8E1D               	bsf	___fttol@f1+1,7,c
  3427  0008A6  0EFF               	movlw	255
  3428  0008A8  161C               	andwf	___fttol@f1,f,c
  3429  0008AA  0EFF               	movlw	255
  3430  0008AC  161D               	andwf	___fttol@f1+1,f,c
  3431  0008AE  0E00               	movlw	0
  3432  0008B0  161E               	andwf	___fttol@f1+2,f,c
  3433  0008B2  501C               	movf	___fttol@f1,w,c
  3434  0008B4  6E26               	movwf	___fttol@lval,c
  3435  0008B6  501D               	movf	___fttol@f1+1,w,c
  3436  0008B8  6E27               	movwf	___fttol@lval+1,c
  3437  0008BA  501E               	movf	___fttol@f1+2,w,c
  3438  0008BC  6E28               	movwf	___fttol@lval+2,c
  3439  0008BE  6A29               	clrf	___fttol@lval+3,c
  3440  0008C0  0E8E               	movlw	142
  3441  0008C2  5E2A               	subwf	___fttol@exp1,f,c
  3442  0008C4  AE2A               	btfss	___fttol@exp1,7,c
  3443  0008C6  D019               	goto	l1041
  3444  0008C8  502A               	movf	___fttol@exp1,w,c
  3445  0008CA  0A80               	xorlw	128
  3446  0008CC  6E20               	movwf	??___fttol& (0+255),c
  3447  0008CE  0EF1               	movlw	241
  3448  0008D0  0A80               	xorlw	128
  3449  0008D2  5C20               	subwf	??___fttol,w,c
  3450  0008D4  B0D8               	btfsc	status,0,c
  3451  0008D6  D009               	goto	l1037
  3452  0008D8  0E00               	movlw	0
  3453  0008DA  6E1C               	movwf	?___fttol,c
  3454  0008DC  0E00               	movlw	0
  3455  0008DE  6E1D               	movwf	?___fttol+1,c
  3456  0008E0  0E00               	movlw	0
  3457  0008E2  6E1E               	movwf	?___fttol+2,c
  3458  0008E4  0E00               	movlw	0
  3459  0008E6  6E1F               	movwf	?___fttol+3,c
  3460  0008E8  0012               	return	
  3461  0008EA                     l1037:
  3462  0008EA  90D8               	bcf	status,0,c
  3463  0008EC  3229               	rrcf	___fttol@lval+3,f,c
  3464  0008EE  3228               	rrcf	___fttol@lval+2,f,c
  3465  0008F0  3227               	rrcf	___fttol@lval+1,f,c
  3466  0008F2  3226               	rrcf	___fttol@lval,f,c
  3467  0008F4  3E2A               	incfsz	___fttol@exp1,f,c
  3468  0008F6  D7F9               	goto	l1037
  3469  0008F8  D014               	goto	l1051
  3470  0008FA                     l1041:
  3471  0008FA  0E17               	movlw	23
  3472  0008FC  642A               	cpfsgt	___fttol@exp1,c
  3473  0008FE  D00F               	goto	l1049
  3474  000900  0E00               	movlw	0
  3475  000902  6E1C               	movwf	?___fttol,c
  3476  000904  0E00               	movlw	0
  3477  000906  6E1D               	movwf	?___fttol+1,c
  3478  000908  0E00               	movlw	0
  3479  00090A  6E1E               	movwf	?___fttol+2,c
  3480  00090C  0E00               	movlw	0
  3481  00090E  6E1F               	movwf	?___fttol+3,c
  3482  000910  0012               	return	
  3483  000912                     l1047:
  3484  000912  90D8               	bcf	status,0,c
  3485  000914  3626               	rlcf	___fttol@lval,f,c
  3486  000916  3627               	rlcf	___fttol@lval+1,f,c
  3487  000918  3628               	rlcf	___fttol@lval+2,f,c
  3488  00091A  3629               	rlcf	___fttol@lval+3,f,c
  3489  00091C  062A               	decf	___fttol@exp1,f,c
  3490  00091E                     l1049:
  3491  00091E  662A               	tstfsz	___fttol@exp1,c
  3492  000920  D7F8               	goto	l1047
  3493  000922                     l1051:
  3494  000922  5025               	movf	___fttol@sign1,w,c
  3495  000924  B4D8               	btfsc	status,2,c
  3496  000926  D008               	goto	l1055
  3497  000928  1E29               	comf	___fttol@lval+3,f,c
  3498  00092A  1E28               	comf	___fttol@lval+2,f,c
  3499  00092C  1E27               	comf	___fttol@lval+1,f,c
  3500  00092E  6C26               	negf	___fttol@lval,c
  3501  000930  0E00               	movlw	0
  3502  000932  2227               	addwfc	___fttol@lval+1,f,c
  3503  000934  2228               	addwfc	___fttol@lval+2,f,c
  3504  000936  2229               	addwfc	___fttol@lval+3,f,c
  3505  000938                     l1055:
  3506  000938  C026  F01C         	movff	___fttol@lval,?___fttol
  3507  00093C  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  3508  000940  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  3509  000944  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  3510  000948  0012               	return	
  3511  00094A                     __end_of___fttol:
  3512                           	opt stack 0
  3513                           tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           prodl	equ	0xFF3
  3518                           intcon2	equ	0xFF1
  3519                           wreg	equ	0xFE8
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function ___ftmul *****************
  3523 ;; Defined at:
  3524 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  f1              3   12[COMRAM] float 
  3527 ;;  f2              3   15[COMRAM] float 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  f3_as_produc    3   21[COMRAM] unsigned um
  3530 ;;  sign            1   26[COMRAM] unsigned char 
  3531 ;;  cntr            1   25[COMRAM] unsigned char 
  3532 ;;  exp             1   24[COMRAM] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  3   12[COMRAM] float 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3542 ;;      Params:         6       0       0       0       0       0       0
  3543 ;;      Locals:         6       0       0       0       0       0       0
  3544 ;;      Temps:          3       0       0       0       0       0       0
  3545 ;;      Totals:        15       0       0       0       0       0       0
  3546 ;;Total ram usage:       15 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    1
  3549 ;; This function calls:
  3550 ;;		___ftpack
  3551 ;; This function is called by:
  3552 ;;		_EPWM1_LoadDutyValue
  3553 ;;		_EPWM2_LoadDutyValue
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text30
  3558  00094A                     __ptext30:
  3559                           	opt stack 0
  3560  00094A                     ___ftmul:
  3561                           	opt stack 26
  3562                           
  3563                           ;incstack = 0
  3564  00094A  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3565  00094E  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3566  000950  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3567  000952  340E               	rlcf	___ftmul@f1+1,w,c
  3568  000954  3613               	rlcf	??___ftmul& (0+255),f,c
  3569  000956  E301               	bnc	u81
  3570  000958  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3571  00095A                     u81:
  3572  00095A  5013               	movf	??___ftmul,w,c
  3573  00095C  6E19               	movwf	___ftmul@exp,c
  3574  00095E  6619               	tstfsz	___ftmul@exp& (0+255),c
  3575  000960  D007               	goto	l959
  3576  000962  0E00               	movlw	0
  3577  000964  6E0D               	movwf	?___ftmul,c
  3578  000966  0E00               	movlw	0
  3579  000968  6E0E               	movwf	?___ftmul+1,c
  3580  00096A  0E00               	movlw	0
  3581  00096C  6E0F               	movwf	?___ftmul+2,c
  3582  00096E  0012               	return	
  3583  000970                     l959:
  3584  000970  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3585  000974  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3586  000976  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3587  000978  3411               	rlcf	___ftmul@f2+1,w,c
  3588  00097A  3613               	rlcf	??___ftmul& (0+255),f,c
  3589  00097C  E301               	bnc	u101
  3590  00097E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3591  000980                     u101:
  3592  000980  5013               	movf	??___ftmul,w,c
  3593  000982  6E1B               	movwf	___ftmul@sign,c
  3594  000984  661B               	tstfsz	___ftmul@sign& (0+255),c
  3595  000986  D007               	goto	l965
  3596  000988  0E00               	movlw	0
  3597  00098A  6E0D               	movwf	?___ftmul,c
  3598  00098C  0E00               	movlw	0
  3599  00098E  6E0E               	movwf	?___ftmul+1,c
  3600  000990  0E00               	movlw	0
  3601  000992  6E0F               	movwf	?___ftmul+2,c
  3602  000994  0012               	return	
  3603  000996                     l965:
  3604  000996  501B               	movf	___ftmul@sign,w,c
  3605  000998  0F7B               	addlw	123
  3606  00099A  2619               	addwf	___ftmul@exp,f,c
  3607  00099C  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3608  0009A0  5012               	movf	___ftmul@f2+2,w,c
  3609  0009A2  1A1B               	xorwf	___ftmul@sign,f,c
  3610  0009A4  0E80               	movlw	128
  3611  0009A6  161B               	andwf	___ftmul@sign,f,c
  3612  0009A8  8E0E               	bsf	___ftmul@f1+1,7,c
  3613  0009AA  8E11               	bsf	___ftmul@f2+1,7,c
  3614  0009AC  0EFF               	movlw	255
  3615  0009AE  1610               	andwf	___ftmul@f2,f,c
  3616  0009B0  0EFF               	movlw	255
  3617  0009B2  1611               	andwf	___ftmul@f2+1,f,c
  3618  0009B4  0E00               	movlw	0
  3619  0009B6  1612               	andwf	___ftmul@f2+2,f,c
  3620  0009B8  0E00               	movlw	0
  3621  0009BA  6E16               	movwf	___ftmul@f3_as_product,c
  3622  0009BC  0E00               	movlw	0
  3623  0009BE  6E17               	movwf	___ftmul@f3_as_product+1,c
  3624  0009C0  0E00               	movlw	0
  3625  0009C2  6E18               	movwf	___ftmul@f3_as_product+2,c
  3626  0009C4  0E07               	movlw	7
  3627  0009C6  6E1A               	movwf	___ftmul@cntr,c
  3628  0009C8                     l979:
  3629  0009C8  A00D               	btfss	___ftmul@f1,0,c
  3630  0009CA  D006               	goto	l983
  3631  0009CC  5010               	movf	___ftmul@f2,w,c
  3632  0009CE  2616               	addwf	___ftmul@f3_as_product,f,c
  3633  0009D0  5011               	movf	___ftmul@f2+1,w,c
  3634  0009D2  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  3635  0009D4  5012               	movf	___ftmul@f2+2,w,c
  3636  0009D6  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  3637  0009D8                     l983:
  3638  0009D8  90D8               	bcf	status,0,c
  3639  0009DA  320F               	rrcf	___ftmul@f1+2,f,c
  3640  0009DC  320E               	rrcf	___ftmul@f1+1,f,c
  3641  0009DE  320D               	rrcf	___ftmul@f1,f,c
  3642  0009E0  90D8               	bcf	status,0,c
  3643  0009E2  3610               	rlcf	___ftmul@f2,f,c
  3644  0009E4  3611               	rlcf	___ftmul@f2+1,f,c
  3645  0009E6  3612               	rlcf	___ftmul@f2+2,f,c
  3646  0009E8  2E1A               	decfsz	___ftmul@cntr,f,c
  3647  0009EA  D7EE               	goto	l979
  3648  0009EC  0E09               	movlw	9
  3649  0009EE  6E1A               	movwf	___ftmul@cntr,c
  3650  0009F0                     l989:
  3651  0009F0  A00D               	btfss	___ftmul@f1,0,c
  3652  0009F2  D006               	goto	l993
  3653  0009F4  5010               	movf	___ftmul@f2,w,c
  3654  0009F6  2616               	addwf	___ftmul@f3_as_product,f,c
  3655  0009F8  5011               	movf	___ftmul@f2+1,w,c
  3656  0009FA  2217               	addwfc	___ftmul@f3_as_product+1,f,c
  3657  0009FC  5012               	movf	___ftmul@f2+2,w,c
  3658  0009FE  2218               	addwfc	___ftmul@f3_as_product+2,f,c
  3659  000A00                     l993:
  3660  000A00  90D8               	bcf	status,0,c
  3661  000A02  320F               	rrcf	___ftmul@f1+2,f,c
  3662  000A04  320E               	rrcf	___ftmul@f1+1,f,c
  3663  000A06  320D               	rrcf	___ftmul@f1,f,c
  3664  000A08  90D8               	bcf	status,0,c
  3665  000A0A  3218               	rrcf	___ftmul@f3_as_product+2,f,c
  3666  000A0C  3217               	rrcf	___ftmul@f3_as_product+1,f,c
  3667  000A0E  3216               	rrcf	___ftmul@f3_as_product,f,c
  3668  000A10  2E1A               	decfsz	___ftmul@cntr,f,c
  3669  000A12  D7EE               	goto	l989
  3670  000A14  C016  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3671  000A18  C017  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3672  000A1C  C018  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3673  000A20  C019  F004         	movff	___ftmul@exp,___ftpack@exp
  3674  000A24  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3675  000A28  EC7B  F005         	call	___ftpack	;wreg free
  3676  000A2C  C001  F00D         	movff	?___ftpack,?___ftmul
  3677  000A30  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3678  000A34  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3679  000A38  0012               	return	
  3680  000A3A                     __end_of___ftmul:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodl	equ	0xFF3
  3687                           intcon2	equ	0xFF1
  3688                           wreg	equ	0xFE8
  3689                           status	equ	0xFD8
  3690                           
  3691 ;; *************** function ___awtoft *****************
  3692 ;; Defined at:
  3693 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  c               2    8[COMRAM] int 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  sign            1   11[COMRAM] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  3    8[COMRAM] float 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, prodl, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3707 ;;      Params:         3       0       0       0       0       0       0
  3708 ;;      Locals:         1       0       0       0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0
  3710 ;;      Totals:         4       0       0       0       0       0       0
  3711 ;;Total ram usage:        4 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    1
  3714 ;; This function calls:
  3715 ;;		___ftpack
  3716 ;; This function is called by:
  3717 ;;		_EPWM1_LoadDutyValue
  3718 ;;		_EPWM2_LoadDutyValue
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text31
  3723  000F20                     __ptext31:
  3724                           	opt stack 0
  3725  000F20                     ___awtoft:
  3726                           	opt stack 26
  3727                           
  3728                           ;incstack = 0
  3729  000F20  0E00               	movlw	0
  3730  000F22  6E0C               	movwf	___awtoft@sign,c
  3731  000F24  500A               	movf	___awtoft@c+1,w,c
  3732  000F26  0A80               	xorlw	128
  3733  000F28  6EF3               	movwf	prodl,c
  3734  000F2A  0E80               	movlw	128
  3735  000F2C  5CF3               	subwf	prodl,w,c
  3736  000F2E  0E00               	movlw	0
  3737  000F30  B4D8               	btfsc	status,2,c
  3738  000F32  5C09               	subwf	___awtoft@c,w,c
  3739  000F34  B0D8               	btfsc	status,0,c
  3740  000F36  D006               	goto	l1009
  3741  000F38  6C09               	negf	___awtoft@c,c
  3742  000F3A  1E0A               	comf	___awtoft@c+1,f,c
  3743  000F3C  B0D8               	btfsc	status,0,c
  3744  000F3E  2A0A               	incf	___awtoft@c+1,f,c
  3745  000F40  0E01               	movlw	1
  3746  000F42  6E0C               	movwf	___awtoft@sign,c
  3747  000F44                     l1009:
  3748  000F44  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3749  000F48  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3750  000F4C  6A03               	clrf	___ftpack@arg+2,c
  3751  000F4E  0E8E               	movlw	142
  3752  000F50  6E04               	movwf	___ftpack@exp,c
  3753  000F52  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3754  000F56  EC7B  F005         	call	___ftpack	;wreg free
  3755  000F5A  C001  F009         	movff	?___ftpack,?___awtoft
  3756  000F5E  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3757  000F62  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3758  000F66  0012               	return	
  3759  000F68                     __end_of___awtoft:
  3760                           	opt stack 0
  3761                           tblptru	equ	0xFF8
  3762                           tblptrh	equ	0xFF7
  3763                           tblptrl	equ	0xFF6
  3764                           tablat	equ	0xFF5
  3765                           prodl	equ	0xFF3
  3766                           intcon2	equ	0xFF1
  3767                           wreg	equ	0xFE8
  3768                           status	equ	0xFD8
  3769                           
  3770 ;; *************** function ___ftpack *****************
  3771 ;; Defined at:
  3772 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  arg             3    0[COMRAM] unsigned um
  3775 ;;  exp             1    3[COMRAM] unsigned char 
  3776 ;;  sign            1    4[COMRAM] unsigned char 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  3    0[COMRAM] float 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3788 ;;      Params:         5       0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0
  3790 ;;      Temps:          3       0       0       0       0       0       0
  3791 ;;      Totals:         8       0       0       0       0       0       0
  3792 ;;Total ram usage:        8 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		___awtoft
  3798 ;;		___ftmul
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text32
  3803  000AF6                     __ptext32:
  3804                           	opt stack 0
  3805  000AF6                     ___ftpack:
  3806                           	opt stack 26
  3807                           
  3808                           ;incstack = 0
  3809  000AF6  5004               	movf	___ftpack@exp,w,c
  3810  000AF8  B4D8               	btfsc	status,2,c
  3811  000AFA  D005               	goto	l923
  3812  000AFC  5001               	movf	___ftpack@arg,w,c
  3813  000AFE  1002               	iorwf	___ftpack@arg+1,w,c
  3814  000B00  1003               	iorwf	___ftpack@arg+2,w,c
  3815  000B02  A4D8               	btfss	status,2,c
  3816  000B04  D00C               	goto	l929
  3817  000B06                     l923:
  3818  000B06  0E00               	movlw	0
  3819  000B08  6E01               	movwf	?___ftpack,c
  3820  000B0A  0E00               	movlw	0
  3821  000B0C  6E02               	movwf	?___ftpack+1,c
  3822  000B0E  0E00               	movlw	0
  3823  000B10  6E03               	movwf	?___ftpack+2,c
  3824  000B12  0012               	return	
  3825  000B14                     l927:
  3826  000B14  2A04               	incf	___ftpack@exp,f,c
  3827  000B16  90D8               	bcf	status,0,c
  3828  000B18  3203               	rrcf	___ftpack@arg+2,f,c
  3829  000B1A  3202               	rrcf	___ftpack@arg+1,f,c
  3830  000B1C  3201               	rrcf	___ftpack@arg,f,c
  3831  000B1E                     l929:
  3832  000B1E  0E00               	movlw	0
  3833  000B20  1401               	andwf	___ftpack@arg,w,c
  3834  000B22  6E06               	movwf	??___ftpack& (0+255),c
  3835  000B24  0E00               	movlw	0
  3836  000B26  1402               	andwf	___ftpack@arg+1,w,c
  3837  000B28  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3838  000B2A  0EFE               	movlw	254
  3839  000B2C  1403               	andwf	___ftpack@arg+2,w,c
  3840  000B2E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3841  000B30  5006               	movf	??___ftpack,w,c
  3842  000B32  1007               	iorwf	??___ftpack+1,w,c
  3843  000B34  1008               	iorwf	??___ftpack+2,w,c
  3844  000B36  B4D8               	btfsc	status,2,c
  3845  000B38  D00C               	goto	l935
  3846  000B3A  D7EC               	goto	l927
  3847  000B3C                     l931:
  3848  000B3C  2A04               	incf	___ftpack@exp,f,c
  3849  000B3E  0E01               	movlw	1
  3850  000B40  2601               	addwf	___ftpack@arg,f,c
  3851  000B42  0E00               	movlw	0
  3852  000B44  2202               	addwfc	___ftpack@arg+1,f,c
  3853  000B46  0E00               	movlw	0
  3854  000B48  2203               	addwfc	___ftpack@arg+2,f,c
  3855  000B4A  90D8               	bcf	status,0,c
  3856  000B4C  3203               	rrcf	___ftpack@arg+2,f,c
  3857  000B4E  3202               	rrcf	___ftpack@arg+1,f,c
  3858  000B50  3201               	rrcf	___ftpack@arg,f,c
  3859  000B52                     l935:
  3860  000B52  0E00               	movlw	0
  3861  000B54  1401               	andwf	___ftpack@arg,w,c
  3862  000B56  6E06               	movwf	??___ftpack& (0+255),c
  3863  000B58  0E00               	movlw	0
  3864  000B5A  1402               	andwf	___ftpack@arg+1,w,c
  3865  000B5C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3866  000B5E  0EFF               	movlw	255
  3867  000B60  1403               	andwf	___ftpack@arg+2,w,c
  3868  000B62  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3869  000B64  5006               	movf	??___ftpack,w,c
  3870  000B66  1007               	iorwf	??___ftpack+1,w,c
  3871  000B68  1008               	iorwf	??___ftpack+2,w,c
  3872  000B6A  B4D8               	btfsc	status,2,c
  3873  000B6C  D006               	goto	l939
  3874  000B6E  D7E6               	goto	l931
  3875  000B70                     l937:
  3876  000B70  0604               	decf	___ftpack@exp,f,c
  3877  000B72  90D8               	bcf	status,0,c
  3878  000B74  3601               	rlcf	___ftpack@arg,f,c
  3879  000B76  3602               	rlcf	___ftpack@arg+1,f,c
  3880  000B78  3603               	rlcf	___ftpack@arg+2,f,c
  3881  000B7A                     l939:
  3882  000B7A  AE02               	btfss	___ftpack@arg+1,7,c
  3883  000B7C  D7F9               	goto	l937
  3884  000B7E  A004               	btfss	___ftpack@exp,0,c
  3885  000B80  9E02               	bcf	___ftpack@arg+1,7,c
  3886  000B82  90D8               	bcf	status,0,c
  3887  000B84  3204               	rrcf	___ftpack@exp,f,c
  3888  000B86  5004               	movf	___ftpack@exp,w,c
  3889  000B88  1203               	iorwf	___ftpack@arg+2,f,c
  3890  000B8A  5005               	movf	___ftpack@sign,w,c
  3891  000B8C  A4D8               	btfss	status,2,c
  3892  000B8E  8E03               	bsf	___ftpack@arg+2,7,c
  3893  000B90  C001  F001         	movff	___ftpack@arg,?___ftpack
  3894  000B94  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3895  000B98  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3896  000B9C  0012               	return	
  3897  000B9E                     __end_of___ftpack:
  3898                           	opt stack 0
  3899                           tblptru	equ	0xFF8
  3900                           tblptrh	equ	0xFF7
  3901                           tblptrl	equ	0xFF6
  3902                           tablat	equ	0xFF5
  3903                           prodl	equ	0xFF3
  3904                           intcon2	equ	0xFF1
  3905                           wreg	equ	0xFE8
  3906                           status	equ	0xFD8
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           prodl	equ	0xFF3
  3912                           intcon2	equ	0xFF1
  3913                           wreg	equ	0xFE8
  3914                           status	equ	0xFD8
  3915                           
  3916                           	psect	rparam
  3917  0000                     tblptru	equ	0xFF8
  3918                           tblptrh	equ	0xFF7
  3919                           tblptrl	equ	0xFF6
  3920                           tablat	equ	0xFF5
  3921                           prodl	equ	0xFF3
  3922                           intcon2	equ	0xFF1
  3923                           wreg	equ	0xFE8
  3924                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_write@data	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_Drive_Forward
    _main->_Turn_Left
    _main->_Turn_Right
    _i2c_Read->___lwdiv
    _i2c_Restart->_i2c_Wait
    ___lwdiv->___lwmod
    _i2c_Command->_i2c_Write
    _i2c_Write->_i2c_Wait
    _i2c_Stop->_i2c_Wait
    _i2c_Start->_i2c_Wait
    _Turn_Right->_EPWM1_LoadDutyValue
    _Turn_Right->_EPWM2_LoadDutyValue
    _Turn_Left->_EPWM1_LoadDutyValue
    _Turn_Left->_EPWM2_LoadDutyValue
    _LCD_write->_LCD_writeChar
    _LCD_write->_place_lcd_cursor
    _LCD_init->_place_lcd_cursor
    _Drive_Forward->_EPWM1_LoadDutyValue
    _Drive_Forward->_EPWM2_LoadDutyValue
    _Stop->_EPWM1_LoadDutyValue
    _Stop->_EPWM2_LoadDutyValue
    _EPWM2_LoadDutyValue->___fttol
    _EPWM1_LoadDutyValue->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   57833
                                             52 COMRAM     1     1      0
                      _Drive_Forward
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                     _EPWM_Port_Init
                           _LCD_init
                          _LCD_write
                      _LCD_writeChar
                               _Stop
                    _TMR2_Initialize
                    _TMR4_Initialize
                          _Turn_Left
                         _Turn_Right
                        _i2c_Command
                           _i2c_Init
                      _i2c_Port_Init
                           _i2c_Read
                    _lineSensor_init
                   _place_lcd_cursor
 ---------------------------------------------------------------------------------
 (1) _lineSensor_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Read                                            10     9      1    1800
                                             12 COMRAM    10     9      1
                      _LCD_writeChar
                            ___lwdiv
                            ___lwmod
                        _i2c_Restart
                          _i2c_Start
                           _i2c_Stop
                           _i2c_Wait
                          _i2c_Write
                   _place_lcd_cursor
 ---------------------------------------------------------------------------------
 (2) _i2c_Restart                                          0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     477
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     374
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_Command                                          4     2      2     194
                                              2 COMRAM     4     2      2
                          _i2c_Start
                           _i2c_Stop
                           _i2c_Wait
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      22
                                              1 COMRAM     1     1      0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
                           _i2c_Wait
 ---------------------------------------------------------------------------------
 (3) _i2c_Wait                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Turn_Right                                           4     4      0   15357
                                             48 COMRAM     4     4      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                               _Stop
 ---------------------------------------------------------------------------------
 (1) _Turn_Left                                            4     4      0   15357
                                             48 COMRAM     4     4      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                               _Stop
 ---------------------------------------------------------------------------------
 (1) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write                                            6     4      2     812
                                              4 COMRAM     6     4      2
                      _LCD_writeChar
                   _place_lcd_cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_writeChar                                        4     4      0      90
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     565
                                              4 COMRAM     1     1      0
                         _Delay100ms
                   _place_lcd_cursor
 ---------------------------------------------------------------------------------
 (1) _place_lcd_cursor                                     4     3      1     535
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _Delay100ms                                           3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EPWM_Port_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Drive_Forward                                        4     2      2   15443
                                             48 COMRAM     4     2      2
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                               _Stop
 ---------------------------------------------------------------------------------
 (2) _Stop                                                 0     0      0    7656
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM2_LoadDutyValue                                  6     4      2    3828
                                             42 COMRAM     6     4      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  6     4      2    3828
                                             42 COMRAM     6     4      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     251
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    1790
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    1484
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Drive_Forward
     _EPWM1_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _EPWM2_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _Stop
       _EPWM1_LoadDutyValue
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _EPWM2_LoadDutyValue
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _EPWM1_Initialize
   _EPWM2_Initialize
   _EPWM_Port_Init
   _LCD_init
     _Delay100ms
     _place_lcd_cursor
   _LCD_write
     _LCD_writeChar
     _place_lcd_cursor
   _LCD_writeChar
   _Stop
     _EPWM1_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _EPWM2_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _TMR2_Initialize
   _TMR4_Initialize
   _Turn_Left
     _EPWM1_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _EPWM2_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _Stop
       _EPWM1_LoadDutyValue
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _EPWM2_LoadDutyValue
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _Turn_Right
     _EPWM1_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _EPWM2_LoadDutyValue
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     _Stop
       _EPWM1_LoadDutyValue
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       _EPWM2_LoadDutyValue
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _i2c_Command
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Wait
     _i2c_Write
       _i2c_Wait
   _i2c_Init
   _i2c_Port_Init
   _i2c_Read
     _LCD_writeChar
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _i2c_Restart
       _i2c_Wait
     _i2c_Start
       _i2c_Wait
     _i2c_Stop
       _i2c_Wait
     _i2c_Wait
     _i2c_Write
       _i2c_Wait
     _place_lcd_cursor
   _lineSensor_init
   _place_lcd_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      38       1       58.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38       9        0.0%
DATA                 0      0      38      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri May 08 12:30:16 2015

__size_of_EPWM2_LoadDutyValue 0080                            u81 095A                ?_i2c_Port_Init 0001  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000                 ??_i2c_Command 0005  
                         l272 115E                           l266 1182                   i2c_Read@reg 000D  
                         l278 1176                           l850 0E7E                           l931 0B3C  
                         l923 0B06                           l860 0FA0                           l935 0B52  
                         l927 0B14                           l937 0B70                           l929 0B1E  
                         l939 0B7A                           l965 0996                           l983 09D8  
                         l959 0970                           l993 0A00                           l979 09C8  
                         l989 09F0                  __CFG_CPB$OFF 000000                           u101 0980  
                         u151 0864                           u170 089C                           _PR2 000FBB  
                         u175 0894                           _PR4 000F52                  __CFG_CPD$OFF 000000  
                         u707 068C                           u627 0F04                           u717 06B4  
                         u637 0F14                           u727 06DA                           u647 0DC6  
                         u737 0700                           u657 0E20                           u747 0726  
                         u667 101A                           u757 0ECC                           u677 0638  
                         u767 1076                           u687 0654                           u777 0FD6  
                         u697 0670               _TMR2_Initialize 1148                           wreg 000FE8  
    __end_of_EPWM2_Initialize 10AE                 ??_i2c_Restart 0002                    _Delay100ms 1058  
                        l1009 0F44                          l1041 08FA                          l1051 0922  
                        l1019 087E                          l1037 08EA                          l1055 0938  
                        l1047 0912                          l1049 091E                          l1247 0DD6  
                        l1265 0E30                          l1275 0FE2                          l1269 0FB8  
                        l1641 0E54                          l1651 0E74                          l1643 0E58  
                        l1661 0F7E                          l1575 1138                          l1639 0E4C  
                        l1663 0F82                          l1667 0F96                          l1659 0F76  
                        l1775 0C60                          l1777 0C80                          l1769 0C2E  
                        l1779 0C84                          l1885 0A9A                          l1899 0ADE  
                        _ADON 007E10                          STR_1 0601                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          _LATD 000F8C  
                        _LATE 000F8D                          _TMR2 000FBC                          _TMR4 000F53  
                        _TMR6 000F4C                          _WPUB 000F61                          _Stop 10D2  
                        _main 0A3A                  ___ftpack@arg 0001                          _yPos 0036  
                ___ftpack@exp 0004                 __CFG_BORV$190 000000                          prodl 000FF3  
                        start 0000                 __CFG_IESO$OFF 000000         ??_EPWM1_LoadDutyValue 002D  
                ___ftmul@cntr 001A                  ___ftmul@sign 001B            __size_of_LCD_write 0084  
                ___fttol@exp1 002A                  ___fttol@lval 0026              __end_of_LCD_init 073C  
                       ?_Stop 0001                         ?_main 0001                 i2c_Read@range 0015  
             __end_of___ftmul 0A3A               __end_of___fttol 094A                         _T2CON 000FBA  
                       _T4CON 000F51                         _T6CON 000F4A               __end_of___lwdiv 0E88  
             __end_of___lwmod 0FAA                         _PORTC 000F82                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _TRISE 000F96  
               __CFG_WRT0$OFF 000000               _TMR4_Initialize 110E                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000        __size_of_LCD_writeChar 003A                __CFG_EBTRB$OFF 000000  
               ___awtoft@sign 000C                i2c_Command@reg 0003           __end_of_i2c_Command 0F20  
          __CFG_MCLRE$EXTMCLR 000000                 ___ftpack@sign 0005                         tablat 000FF5  
     __end_of_lineSensor_init 118E               ??_Drive_Forward 0033           __end_of_i2c_Restart 1164  
                       status 000FD8                __CFG_HFOFST$ON 000000                __CFG_FOSC$HSHP 000000  
              __CFG_PBADEN$ON 000000               __initialization 10AE                  __end_of_Stop 10F6  
                __end_of_main 0AF6              __end_of_i2c_Init 110E              __end_of_i2c_Read 0854  
            __end_of_i2c_Wait 1148               ??_i2c_Port_Init 0001              __end_of_i2c_Stop 117C  
     __end_of_TMR2_Initialize 1158                Turn_Left@speed 0032       __size_of_EPWM_Port_Init 005E  
                      ??_Stop 0031                        ??_main 0035                 ___fttol@sign1 0025  
               __activetblptr 000001                   ?_Delay100ms 0001             __end_of_LCD_write 0CA8  
                      _ADCON0 000FC2                        _ADCON2 000FC0                        _ADRESL 000FC3  
                      _CCPR2H 000F68                        _CCPR3H 000F5F                        _CCPR2L 000F67  
                      _CCPR3L 000F5E             place_lcd_cursor@x 0003             place_lcd_cursor@y 0001  
            __end_of___awtoft 0F68                        _ANSELA 000F38                        _ANSELB 000F39  
                      _ANSELD 000F3B                        _ANSELE 000F3C              __end_of___ftpack 0B9E  
                      _GODONE 007E11            __size_of_i2c_Start 000C            __size_of_i2c_Write 000C  
              __CFG_WDTEN$OFF 000000                __CFG_XINST$OFF 000000                 _LCD_writeChar 0FEC  
                _CCPTMRS0bits 000F49                __CFG_STVREN$ON 000000                     ??___ftmul 0013  
                   ??___fttol 0020                     ??___lwdiv 000A                     ??___lwmod 0005  
     __end_of_TMR4_Initialize 1126         ___ftmul@f3_as_product 0016                   _i2c_Command 0ED6  
               i2c_Write@data 0002                  __pdataCOMRAM 0038                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                 _i2c_Restart 1158           _EPWM2_LoadDutyValue 0CA8      i2c_Command@deviceAddress 0006  
            ?_lineSensor_init 0001                    __accesstop 0060       __end_of__initialization 10C4  
          __size_of_Turn_Left 0056                     ?_LCD_init 0001                    ___awtoft@c 0009  
              ?_LCD_writeChar 0001     __size_of_place_lcd_cursor 004E                    ___ftmul@f1 000D  
                  ___ftmul@f2 0010             ?_EPWM1_Initialize 0001                    ___fttol@f1 001C  
              __pcstackCOMRAM 0001          ?_EPWM2_LoadDutyValue 002B                    _Turn_Right 0D86  
         __size_of_Delay100ms 002C            ??_EPWM1_Initialize 0001             __end_of_i2c_Start 1188  
            ?_TMR2_Initialize 0001             __end_of_i2c_Write 1170             ?_EPWM2_Initialize 0001  
          ??_EPWM2_Initialize 0001                     ?_i2c_Init 0001                     ?_i2c_Read 000D  
                   ?_i2c_Wait 0001                     ?_i2c_Stop 0001               __CFG_PLLCFG$OFF 000000  
                  Turn_Left@i 0033                    ??_LCD_init 0005            __CFG_CCP2MX$PORTC1 000000  
       ??_EPWM2_LoadDutyValue 002D            __CFG_CCP3MX$PORTB5 000000                       _CCP2CON 000F66  
                     _CCP3CON 000F5D                       _ECCP2AS 000F64                       _ECCP3AS 000F5B  
              _EPWM_Port_Init 0D28              ?_TMR4_Initialize 0001                     ?___awtoft 0009  
                   ?___ftpack 0001             __end_of_Turn_Left 0E36                       _PWM2CON 000F65  
                     _PWM3CON 000F5C                       _SSP2ADD 000F6E                       _SSP2BUF 000F6F  
              main@readResult 0035                    ??_i2c_Init 0001                    ??_i2c_Read 000E  
                  ??_i2c_Wait 0001                    ??_i2c_Stop 0002   __end_of_EPWM1_LoadDutyValue 0C24  
          _whiteLineThreshold 0038               ??_LCD_writeChar 0001               __CFG_PWRTEN$OFF 000000  
                     __Hparam 0000                       __Lparam 0000             i2c_Read@rangeInCm 0010  
                 ?_Turn_Right 0001        __end_of_EPWM_Port_Init 0D86                       ___ftmul 094A  
                     ___fttol 0854                       ___lwdiv 0E36                       ___lwmod 0F68  
                __psmallconst 0600                       __pcinit 10AE                    ??___awtoft 000C  
                  ??___ftpack 0006                       __ramtop 0600                       __ptext0 0A3A  
                     __ptext1 1188                       __ptext2 073C                       __ptext3 1158  
                     __ptext4 0F68                       __ptext5 0E36                       __ptext6 1126  
                     __ptext7 10F6                       __ptext8 0ED6                       __ptext9 1164  
                   _T2CONbits 000FBA                     _T4CONbits 000F51                  ??_Delay100ms 0001  
             Turn_Right@speed 0032          end_of_initialization 10C4                     _LCD_write 0C24  
       __end_of_Drive_Forward 0FEC              _place_lcd_cursor 0E88               ?_EPWM_Port_Init 0001  
          __end_of_Delay100ms 1084         __end_of_i2c_Port_Init 1138            LCD_writeChar@lower 0003  
          LCD_writeChar@upper 0002                     _PORTAbits 000F80                     _PORTCbits 000F82  
                ?_i2c_Command 0003                     _TRISAbits 000F92                     _TRISCbits 000F94  
                   _TRISDbits 000F95                  ?_i2c_Restart 0001           __size_of_Turn_Right 005A  
                  ?_LCD_write 0005             __size_of_LCD_init 0134                   ___ftmul@exp 0019  
               __pidataCOMRAM 118E      place_lcd_cursor@position 0004                     _i2c_Start 117C  
                   _i2c_Write 1164           start_initialization 10AE     __size_of_EPWM1_Initialize 0032  
EPWM1_LoadDutyValue@dutyValue 002B                    LCD_write@i 0009             __size_of_i2c_Init 0018  
           __size_of_i2c_Read 0118             __size_of_i2c_Wait 0010             __size_of_i2c_Stop 000C  
   __size_of_EPWM2_Initialize 002A      __size_of_lineSensor_init 0006             __size_of___awtoft 0048  
           __size_of___ftpack 00A8                    ?_i2c_Start 0001                    ?_i2c_Write 0001  
                 __pbssCOMRAM 0036      __size_of_TMR2_Initialize 0010                     _Turn_Left 0DE0  
         __end_of__stringdata 0607                   ??_LCD_write 0007                   Turn_Right@i 0033  
 __end_of_EPWM2_LoadDutyValue 0D28            i2c_Command@command 0004              ___lwdiv@dividend 0006  
                ??_Turn_Right 0031                 LCD_write@data 0005                      ?___ftmul 000D  
                    ?___fttol 001C                      ?___lwdiv 0006                      ?___lwmod 0001  
            __CFG_PRICLKEN$ON 000000                   __smallconst 0600      __end_of_place_lcd_cursor 0ED6  
        __size_of_i2c_Command 004A                    ?_Turn_Left 0001      __size_of_TMR4_Initialize 0018  
            ___lwdiv@quotient 000A                   Delay100ms@i 0002          __size_of_i2c_Restart 000C  
          __end_of_Turn_Right 0DE0                      _LATAbits 000F89                      _LATCbits 000F8B  
                    _LATDbits 000F8C                      _LCD_init 0608              ??_EPWM_Port_Init 0001  
       __end_of_LCD_writeChar 1026                      _PIR1bits 000F9E                      _PIR5bits 000F7E  
__size_of_EPWM1_LoadDutyValue 0086              __CFG_WDTPS$32768 000000             LCD_writeChar@data 0004  
                    _SSP2CON1 000F6C                      _SSP2CON2 000F6B                      _PSTR2CON 000F63  
                    _PSTR3CON 000F5A                      _SSP2STAT 000F6D                   __stringdata 0601  
           ??_lineSensor_init 0001                   ??_i2c_Start 0002                   ??_i2c_Write 0002  
            _EPWM1_Initialize 1026         i2c_Read@deviceAddress 0014                   _INTCON2bits 000FF1  
                    _i2c_Init 10F6                      _i2c_Read 073C                      _i2c_Wait 1138  
                    _i2c_Stop 1170             ??_TMR2_Initialize 0001                      __Hrparam 0000  
            _EPWM2_Initialize 1084                      __Lrparam 0000            i2c_Read@rangeInCm1 0012  
                __Lsmallconst 0600            __CFG_BOREN$SBORDIS 000000             __CFG_P2BMX$PORTD2 000000  
            __size_of___ftmul 00F0              __size_of___fttol 00F6              __size_of___lwdiv 0052  
            __size_of___lwmod 0042                      ___awtoft 0F20                      ___ftpack 0AF6  
                  _ANSELCbits 000F3A                    _ANSELDbits 000F3B        __size_of_Drive_Forward 0042  
             ___lwdiv@divisor 0008                   ??_Turn_Left 0031               ___lwdiv@counter 000C  
                    __ptext10 1170                      __ptext11 117C                      __ptext20 0E88  
                    __ptext12 1138                      __ptext21 1058                      __ptext13 0D86  
                    __ptext30 094A                      __ptext22 0D28                      __ptext14 0DE0  
                    __ptext31 0F20                      __ptext23 1084                      __ptext15 110E  
                    __ptext32 0AF6                      __ptext24 1026                      __ptext16 1148  
                    __ptext25 0FAA                      __ptext17 0C24                      __ptext26 10D2  
                    __ptext18 0FEC                      __ptext27 0CA8                      __ptext19 0608  
                    __ptext28 0B9E                      __ptext29 0854         Drive_Forward@distance 0034  
                _SSP2CON1bits 000F6C                  _SSP2CON2bits 000F6B                 __size_of_Stop 0024  
           ??_TMR4_Initialize 0001        __size_of_i2c_Port_Init 0012                 __size_of_main 00BC  
          Drive_Forward@speed 0031                 _i2c_Read$1987 000E              ___lwmod@dividend 0001  
EPWM2_LoadDutyValue@dutyValue 002B                 _Drive_Forward 0FAA                 _i2c_Port_Init 1126  
             ___lwmod@divisor 0003               ___lwmod@counter 0005             __CFG_T3CMX$PORTC0 000000  
         _EPWM1_LoadDutyValue 0B9E             ?_place_lcd_cursor 0001            ??_place_lcd_cursor 0002  
              ?_Drive_Forward 0031               _lineSensor_init 1188      __end_of_EPWM1_Initialize 1058  
        ?_EPWM1_LoadDutyValue 002B  
